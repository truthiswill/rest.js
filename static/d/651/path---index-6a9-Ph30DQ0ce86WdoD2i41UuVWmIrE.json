{"data":{"staticMethods":{"edges":[{"node":{"id":"3db5f3f7-3e92-5429-ab9c-14a5265bd6cb","frontmatter":{"title":"Usage"},"html":"<p>Import the Octokit constructor.</p>\n<p>For direct usage in browsers, download <code class=\"language-text\">octokit-rest.min.js</code> from the <a href=\"https://github.com/octokit/rest.js/releases/latest\">latest release</a> and import it using a <code class=\"language-text\">&lt;script src=&quot;octokit-rest.min.js&quot;&gt;&lt;/script&gt;</code> tag.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Octokit <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@octokit/rest'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Now instantiate your octokit API. All options are optional, but authentication is strongly encouraged.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> octokit <span class=\"token operator\">=</span> <span class=\"token function\">Octokit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span></code></pre></div>\n<p>You can set <code class=\"language-text\">auth</code> to a personal access token string.</p>\n<p>Learn more about <a href=\"#authentication\">authentication</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  auth<span class=\"token punctuation\">:</span> <span class=\"token string\">'secret123'</span></code></pre></div>\n<p>Setting a user agent <a href=\"https://developer.github.com/v3/#user-agent-required\">is required</a>. It defaults to <code class=\"language-text\">octokit/rest.js v1.2.3</code> where <code class=\"language-text\">v1.2.3</code> is the current version of <code class=\"language-text\">@octokit/rest</code>, but you should set it to something that identifies your app or script.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  userAgent<span class=\"token punctuation\">:</span> <span class=\"token string\">'myApp v1.2.3'</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>API Previews can be enabled globally by setting the <code class=\"language-text\">previews</code> option. They can be set per-request as well.</p>\n<p>Learn more about <a href=\"#previews\">API Previews</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  previews<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'jean-grey'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'symmetra'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>In order to use Octokit with GitHub Enterprise, set the <code class=\"language-text\">baseUrl</code> option.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  baseUrl<span class=\"token punctuation\">:</span> <span class=\"token string\">'https://api.github.com'</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>For custom loggin, pass an object with <code class=\"language-text\">debug</code>, <code class=\"language-text\">info</code>, <code class=\"language-text\">warn</code> and <code class=\"language-text\">error</code> methods as the <code class=\"language-text\">log</code> option.</p>\n<p>Learn more about <a href=\"#logging\">logging</a> and <a href=\"#debug\">debugging</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  log<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">debug</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">info</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    warn<span class=\"token punctuation\">:</span> console<span class=\"token punctuation\">.</span>warn<span class=\"token punctuation\">,</span>\n    error<span class=\"token punctuation\">:</span> console<span class=\"token punctuation\">.</span>error\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Custom request options can be passed as <code class=\"language-text\">request.*</code> options. See <a href=\"https://www.npmjs.com/package/@octokit/request#octokitrequest\"><code class=\"language-text\">@octokit/request</code></a> options. The same options can be passed to each endpoint request method.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  request<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    agent<span class=\"token punctuation\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    fetch<span class=\"token punctuation\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    timeout<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Most of GitHub’s REST API endpoints have matching methods. All endpoint methods are asynchronous, in order to use <code class=\"language-text\">await</code> in the code examples, we wrap them into an anonymous async function.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></code></pre></div>\n<p>For example to retrieve a pull request, use <a href=\"#octokit-routes-pulls-get\"><code class=\"language-text\">octokit.pulls.get()</code></a>. We recommend to use the search above to find the endpoint method you are looking for</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">:</span> pullRequest <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> octokit<span class=\"token punctuation\">.</span>pulls<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    owner<span class=\"token punctuation\">:</span> <span class=\"token string\">'octokit'</span><span class=\"token punctuation\">,</span>\n    repo<span class=\"token punctuation\">:</span> <span class=\"token string\">'rest.js'</span><span class=\"token punctuation\">,</span>\n    pull_number<span class=\"token punctuation\">:</span> <span class=\"token number\">123</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Some API endpoints support alternative response formats, see <a href=\"https://developer.github.com/v3/media/\">Media types</a>. For example, to <a href=\"https://developer.github.com/v3/media/#diff\"><code class=\"language-text\">request the above pull request in a diff format</code></a>, pass the <code class=\"language-text\">mediaType.format</code> option.</p>\n<p>Learn more about <a href=\"#request-formats\">request formats</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">:</span> diff <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> octokit<span class=\"token punctuation\">.</span>pulls<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    owner<span class=\"token punctuation\">:</span> <span class=\"token string\">'octokit'</span><span class=\"token punctuation\">,</span>\n    repo<span class=\"token punctuation\">:</span> <span class=\"token string\">'rest.js'</span><span class=\"token punctuation\">,</span>\n    pull_number<span class=\"token punctuation\">:</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span>\n    mediaType<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      format<span class=\"token punctuation\">:</span> <span class=\"token string\">'diff'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>For the API endpoints that do not have a matching method, such as the <a href=\"https://developer.github.com/v3/#root-endpoint\">root endpoint</a> or legacy endpoints, you can send custom requests.</p>\n<p>Learn more about <a href=\"#custom-requests\">custom requests</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">:</span> root <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> octokit<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET /'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>You can also register custom endpoint methods, which is particularly useful if you participate in a private beta. </p>\n<p>Learn more about <a href=\"#custom-endpoint-methods\">custom endpoint methods</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">await</span> octokit<span class=\"token punctuation\">.</span><span class=\"token function\">registerEndpoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    misc<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      getRoot<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        method<span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Some endpoints return a list which has to be paginated in order to retrieve the complete data set.</p>\n<p>Learn more about <a href=\"#pagination\">pagination</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> octokit<span class=\"token punctuation\">.</span>issues<span class=\"token punctuation\">.</span>listForRepo<span class=\"token punctuation\">.</span>endpoint<span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    owner<span class=\"token punctuation\">:</span> <span class=\"token string\">'octokit'</span><span class=\"token punctuation\">,</span>\n    repo<span class=\"token punctuation\">:</span> <span class=\"token string\">'rest.js'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  octokit<span class=\"token punctuation\">.</span><span class=\"token function\">paginate</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">issues</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// issues is an array of all issue objects</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>You can add more functionality with plugins. We recommend the retry and throttling plugins.</p>\n<p>Learn more about <a href=\"#throttling\">throttling</a>, <a href=\"#automatic-retries\">automatic retries</a> and building your own <a href=\"#plugins\">Plugins</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> plugin <span class=\"token keyword\">as</span> retry <span class=\"token keyword\">from</span> <span class=\"token string\">'@octokit/plugin-retry'</span>\n<span class=\"token keyword\">import</span> plugin <span class=\"token keyword\">as</span> throttling <span class=\"token keyword\">from</span> <span class=\"token string\">'@octokit/plugin-throttling'</span>\n\n<span class=\"token keyword\">const</span> MyOctokit <span class=\"token operator\">=</span> Octokit<span class=\"token punctuation\">.</span><span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  retry<span class=\"token punctuation\">,</span>\n  throttling\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">Octokit.plugin()</code> returns a new constructor. The same options can be passed to the constructor. The options are passed on to all plugin functions as the 2nd argument</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> myOctokit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyOctokit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  auth<span class=\"token punctuation\">:</span> <span class=\"token string\">'secret123'</span><span class=\"token punctuation\">,</span>\n  throttle<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">onRateLimit</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">retryAfter<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      myOctokit<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Request quota exhausted for request </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>method<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>retryCount <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// only retries once</span>\n        myOctokit<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Retrying after </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>retryAfter<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> seconds!`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onAbuseLimit</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">retryAfter<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// does not retry, only logs a warning</span>\n      myOctokit<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Abuse detected for request </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>method<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  retry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    doNotRetry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'429'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> octokit <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@octokit/rest'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Compare: https://developer.github.com/v3/repos/#list-organization-repositories</span>\noctokit<span class=\"token punctuation\">.</span>repos<span class=\"token punctuation\">.</span><span class=\"token function\">getForOrg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  org<span class=\"token punctuation\">:</span> <span class=\"token string\">'octokit'</span><span class=\"token punctuation\">,</span>\n  type<span class=\"token punctuation\">:</span> <span class=\"token string\">'public'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> headers<span class=\"token punctuation\">,</span> status <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// handle data</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","fields":{"idName":"usage"}}},{"node":{"id":"53d1c0eb-3a69-501d-91f5-b479175d997e","frontmatter":{"title":"Authentication"},"html":"<p>While authentication is not strictly required from some API endpoints, GitHub encourages to authenticated all requests to GitHub. Unauthenticated requests are subject to much more aggressive rate limiting.</p>\n<p>To enable authenticated requests, pass an <code class=\"language-text\">auth</code> option to the Octokit constructor:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> clientWithAuth <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Octokit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  auth<span class=\"token punctuation\">:</span> <span class=\"token string\">'token secret123'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The <code class=\"language-text\">auth</code> option can be</p>\n<ol>\n<li>\n<p>A string</p>\n<p>The value will be passed as value for the <code class=\"language-text\">Authorization</code> header,\nsee <a href=\"https://developer.github.com/v3/#authentication\">authentication</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Octokit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n auth<span class=\"token punctuation\">:</span> <span class=\"token string\">'secret123'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The string can be one of</p>\n<ol>\n<li>Personal access tokens<br>\nYou can <a href=\"https://github.com/settings/tokens\">create personal access tokens</a> in your account’s developer settings or use the \"<a href=\"#octokit-routes-oauthAuthorizations-create-authorization\">Create a new authorization</a>\" endpoint.</li>\n<li>OAuth access tokens<br>\nRetrieved using the <a href=\"https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow\">web application flow</a>. See also: <a href=\"https://github.com/octokit/oauth-login-url.js\">octokit/oauth-login-url.js</a>.</li>\n<li>GitHub App bearer tokens<br>\nSee <a href=\"https://github.com/octokit/app.js\">octokit/app.js</a> to retrieve a JSON Web Token (JWT) in order to authenticate as a GitHub App.</li>\n<li>GitHub App installation tokens<br>\nSee <a href=\"https://github.com/octokit/app.js\">octokit/app.js</a> to retrieve an installation access token in order to authenticate as a GitHub App installation. Also see <code class=\"language-text\">4. A function</code> below for an example.</li>\n</ol>\n</li>\n<li>\n<p>As object with the properties <code class=\"language-text\">username</code>, <code class=\"language-text\">password</code>, <code class=\"language-text\">on2fa</code>.</p>\n<p><code class=\"language-text\">on2fa</code> is an asynchronous function that must resolve with two-factor\nauthentication code sent to the user.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Octokit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n auth<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n   username<span class=\"token punctuation\">:</span> <span class=\"token string\">'octocat'</span><span class=\"token punctuation\">,</span>\n   password<span class=\"token punctuation\">:</span> <span class=\"token string\">'secret'</span><span class=\"token punctuation\">,</span>\n   <span class=\"token keyword\">async</span> <span class=\"token function\">on2fa</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token comment\">// example: ask the user</span>\n     <span class=\"token keyword\">return</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Two-factor authentication Code:'</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>An object with the properties <code class=\"language-text\">clientId</code> and <code class=\"language-text\">clientSecret</code></p>\n<p>OAuth applications can authenticate using their <code class=\"language-text\">client_id</code> and <code class=\"language-text\">client_secret</code>\nin order to <a href=\"https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications\">increase the unauthenticated rate limit</a>. Find the id and secret in your GitHub account’s developer setting, or, if the OAuth app belongs to a GitHub organization, the organization’s developer settings.</p>\n</li>\n<li>\n<p>A function</p>\n<p>Must resolve with a string which then will be passed as value for the\n<code class=\"language-text\">Authorization</code> header. The function will be called before each request and\ncan be asynchronous.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Octokit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n <span class=\"token function\">auth</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token string\">'token secret123'</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>This is useful for GitHub apps, as installations need to renew their tokens each hour.\nHere is an example on how to implement authentication for GitHub Apps</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> App <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@octokit/app'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> Octokit <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@octokit/rest'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">APP_ID</span><span class=\"token punctuation\">,</span> privateKey<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PRIVATE_KEY</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> octokit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Octokit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">async</span> <span class=\"token function\">auth</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> installationAccessToken <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">getInstallationAccessToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> \n     installationId<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">INSTALLATION_ID</span> \n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token string\">`token </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>installationAccessToken<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>See also: <a href=\"https://github.com/octokit/app.js#authenticating-as-an-installation\">https://github.com/octokit/app.js#authenticating-as-an-installation</a>.</p>\n</li>\n</ol>","fields":{"idName":"authentication"}}},{"node":{"id":"4fbf6b4b-53b5-5d47-b841-197e5ca8f75c","frontmatter":{"title":"Previews"},"html":"<p>To enable any of <a href=\"https://developer.github.com/v3/previews/\">GitHub’s API Previews</a>,\npass the <code class=\"language-text\">previews</code> option to the GitHub constructor</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> octokit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Octokit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  previews<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'mercy-preview'</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Previews can also be enabled for a single request by passing the <code class=\"language-text\">mediaType.preview</code> option</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> topics <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> octokit<span class=\"token punctuation\">.</span>repos<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  owner<span class=\"token punctuation\">:</span> <span class=\"token string\">'octokit'</span><span class=\"token punctuation\">,</span>\n  repo<span class=\"token punctuation\">:</span> <span class=\"token string\">'rest.js'</span><span class=\"token punctuation\">,</span>\n  mediaType<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    previews<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'symmetra'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","fields":{"idName":"previews"}}},{"node":{"id":"ffc66c8c-9773-55af-acfe-ee038fe8dccb","frontmatter":{"title":"Request formats & aborts"},"html":"<p>Some API endpoints support alternative response formats, see <a href=\"https://developer.github.com/v3/media/\">Media types</a>.</p>\n<p>For example, to request a <a href=\"https://developer.github.com/v3/media/#diff\">pull request as diff format</a>, set the <code class=\"language-text\">mediaType.format</code> option</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">:</span> prDiff <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> octokit<span class=\"token punctuation\">.</span>pulls<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  owner<span class=\"token punctuation\">:</span> <span class=\"token string\">'octokit'</span><span class=\"token punctuation\">,</span>\n  repo<span class=\"token punctuation\">:</span> <span class=\"token string\">'rest.js'</span><span class=\"token punctuation\">,</span>\n  pull_number<span class=\"token punctuation\">:</span> <span class=\"token number\">1278</span><span class=\"token punctuation\">,</span>\n  mediaType<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    format<span class=\"token punctuation\">:</span> <span class=\"token string\">'diff'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/AbortController\">AbortController</a> interface can be used to abort one or more requests as and when desired. When the request is initiated, an <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal\">AbortSignal</a> instance can be passed as an option inside the request's options object. For usage in Node, the <a href=\"https://github.com/mysticatea/abort-controller\"><code class=\"language-text\">abort-controller</code></a> package can be used.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AbortController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">:</span> prDiff <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> octokit<span class=\"token punctuation\">.</span>pulls<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  owner<span class=\"token punctuation\">:</span> <span class=\"token string\">'octokit'</span><span class=\"token punctuation\">,</span>\n  repo<span class=\"token punctuation\">:</span> <span class=\"token string\">'rest.js'</span><span class=\"token punctuation\">,</span>\n  pull_number<span class=\"token punctuation\">:</span> <span class=\"token number\">1278</span><span class=\"token punctuation\">,</span>\n  request<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    signal<span class=\"token punctuation\">:</span> controller<span class=\"token punctuation\">.</span>signal\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Use <code class=\"language-text\">controller.abort()</code> to abort the request when desired.</p>","fields":{"idName":"request-formats-aborts"}}},{"node":{"id":"415de819-867a-5de7-84f5-60a627a89db8","frontmatter":{"title":"Custom requests"},"html":"<p>To send custom requests you can use the lower-level <code class=\"language-text\">octokit.request()</code> method</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">octokit<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET /'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>The <code class=\"language-text\">baseUrl</code>, headers and other defaults are already set. For more information on the <code class=\"language-text\">octokit.request()</code> API see <a href=\"https://github.com/octokit/request.js/\"><code class=\"language-text\">octokit/request.js</code></a></p>\n<p>All the endpoint methods such as <code class=\"language-text\">octokit.repos.get()</code> are aliases of <code class=\"language-text\">octokit.request()</code> with pre-bound default options. So you can use the <code class=\"language-text\">@octokit/request</code> API to get the default options or get generic request option to use with your preferred request library.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> defaultOptions <span class=\"token operator\">=</span> octokit<span class=\"token punctuation\">.</span>repos<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">.</span>endpoint<span class=\"token punctuation\">.</span><span class=\"token constant\">DEFAULTS</span>\n<span class=\"token keyword\">const</span> requestOptions <span class=\"token operator\">=</span> octokit<span class=\"token punctuation\">.</span>repos<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">.</span><span class=\"token function\">endpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  owner<span class=\"token punctuation\">:</span> <span class=\"token string\">'octokit'</span><span class=\"token punctuation\">,</span>\n  repo<span class=\"token punctuation\">:</span> <span class=\"token string\">'rest.js'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Note that authentication is not applied when retrieving request options from the <code class=\"language-text\">*.endpoint</code> APIs.</p>","fields":{"idName":"custom-requests"}}},{"node":{"id":"9df621a4-df1c-5dc8-a3f5-2d0d83dc4020","frontmatter":{"title":"Pagination"},"html":"<p>All endpoint methods starting with <code class=\"language-text\">.list*</code> do not return all responses at once but instead return the first 30 items by default, see also <a href=\"https://developer.github.com/v3/#pagination\">GitHub’s REST API pagination documentation</a>.</p>\n<p>To automatically receive all results across all pages, you can use the <code class=\"language-text\">octokit.paginate()</code> method:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">octokit<span class=\"token punctuation\">.</span><span class=\"token function\">paginate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET /repos/:owner/:repo/issues'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> owner<span class=\"token punctuation\">:</span> <span class=\"token string\">'octokit'</span><span class=\"token punctuation\">,</span> repo<span class=\"token punctuation\">:</span> <span class=\"token string\">'rest.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">issues</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// issues is an array of all issue objects</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">octokit.paginate()</code> accepts the same options as <a href=\"#custom-requests\"><code class=\"language-text\">octokit.request()</code></a>. You can optionally pass an additional function to map the results from each response. The map must return a new value, usually an array with mapped data.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">octokit<span class=\"token punctuation\">.</span><span class=\"token function\">paginate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET /repos/:owner/:repo/issues'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> owner<span class=\"token punctuation\">:</span> <span class=\"token string\">'octokit'</span><span class=\"token punctuation\">,</span> repo<span class=\"token punctuation\">:</span> <span class=\"token string\">'rest.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">issue</span> <span class=\"token operator\">=></span> issue<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">issueTitles</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// issueTitles is now an array with the titles only</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>To stop paginating early, you can call the <code class=\"language-text\">done()</code> function passed as 2nd argument to the response map function. Note that you still have to return the value you want to map the response to, otherwise the last response will be mapped to undefined.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">octokit<span class=\"token punctuation\">.</span><span class=\"token function\">paginate</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GET /organizations'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response<span class=\"token punctuation\">,</span> done</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">issues</span> <span class=\"token operator\">=></span> issue<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'something'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span>data\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>To paginate responses for one of the registered endpoint methods such as <code class=\"language-text\">octokit.issues.listForRepo()</code> you can use the <a href=\"https://github.com/octokit/endpoint.js#endpointmerge\"><code class=\"language-text\">.endpoint.merge()</code></a> method registered for all endpoint methods:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> octokit<span class=\"token punctuation\">.</span>issues<span class=\"token punctuation\">.</span>listForRepo<span class=\"token punctuation\">.</span>endpoint<span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> owner<span class=\"token punctuation\">:</span> <span class=\"token string\">'octokit'</span><span class=\"token punctuation\">,</span> repo<span class=\"token punctuation\">:</span> <span class=\"token string\">'rest.js'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\noctokit<span class=\"token punctuation\">.</span><span class=\"token function\">paginate</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">issues</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// issues is an array of all issue objects</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>If your runtime environment supports async iterators (such as most modern browsers and Node 10+), you can iterate through each response</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">for</span> <span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> response <span class=\"token keyword\">of</span> octokit<span class=\"token punctuation\">.</span>paginate<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do whatever you want with each response, break out of the loop, etc.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">octokit.paginate.iterator()</code> accepts the same options as <code class=\"language-text\">octokit.paginate()</code>.</p>","fields":{"idName":"pagination"}}},{"node":{"id":"e4390428-85a0-5b84-b8b5-45ef1bfdc9dc","frontmatter":{"title":"Hooks"},"html":"<p>You can customize Octokit’s request lifecycle with hooks. Available methods are</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">octokit<span class=\"token punctuation\">.</span>hook<span class=\"token punctuation\">.</span><span class=\"token function\">before</span><span class=\"token punctuation\">(</span><span class=\"token string\">'request'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\noctokit<span class=\"token punctuation\">.</span>hook<span class=\"token punctuation\">.</span><span class=\"token function\">after</span><span class=\"token punctuation\">(</span><span class=\"token string\">'request'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>method<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>response<span class=\"token punctuation\">.</span>status<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\noctokit<span class=\"token punctuation\">.</span>hook<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'request'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">304</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">findInCache</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">.</span>etag<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">throw</span> error\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\noctokit<span class=\"token punctuation\">.</span>hook<span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token string\">'request'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// add logic before, after, catch errors or replace the request altogether</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>See <a href=\"https://github.com/gr2m/before-after-hook#hookcollectionapi\">before-after-hook</a> for more details on the 4 methods.</p>","fields":{"idName":"hooks"}}},{"node":{"id":"965aea87-35a7-5443-869d-2908cba97f81","frontmatter":{"title":"Custom endpoint methods"},"html":"<p>You can register custom endpoint methods such as <code class=\"language-text\">octokit.repos.get()</code> using the <code class=\"language-text\">octokit.registerEndpoints(routes)</code> method</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">octokit<span class=\"token punctuation\">.</span><span class=\"token function\">registerEndpoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  foo<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    bar<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      method<span class=\"token punctuation\">:</span> <span class=\"token string\">'PATCH'</span><span class=\"token punctuation\">,</span>\n      url<span class=\"token punctuation\">:</span> <span class=\"token string\">'/repos/:owner/:repo/foo'</span><span class=\"token punctuation\">,</span>\n      headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        accept<span class=\"token punctuation\">:</span> <span class=\"token string\">'application/vnd.github.foo-bar-preview+json'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      params<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        owner<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          required<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          type<span class=\"token punctuation\">:</span> <span class=\"token string\">'string'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        repo<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          required<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          type<span class=\"token punctuation\">:</span> <span class=\"token string\">'string'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        baz<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          required<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          type<span class=\"token punctuation\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">enum</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'qux'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'quux'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'quuz'</span>\n          <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\noctokit<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">.</span><span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  owner<span class=\"token punctuation\">:</span> <span class=\"token string\">'octokit'</span><span class=\"token punctuation\">,</span>\n  repo<span class=\"token punctuation\">:</span> <span class=\"token string\">'rest.js'</span><span class=\"token punctuation\">,</span>\n  baz<span class=\"token punctuation\">:</span> <span class=\"token string\">'quz'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>This is useful when you participate in private beta features and prefer the convenience of methods for the new endpoints instead of using <a href=\"&#x27;#custom-requests&#x27;\"><code class=\"language-text\">octokit.request()</code></a>.</p>","fields":{"idName":"custom-endpoint-methods"}}},{"node":{"id":"f37b96e0-d68a-5424-bc5c-a9b2492dbf01","frontmatter":{"title":"Plugins"},"html":"<p>You can customize and extend Octokit’s functionality using plugins</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">const</span> MyOctokit <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@octokit/rest'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./lib/my-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'octokit-plugin-example'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// lib/my-plugin.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>octokit<span class=\"token punctuation\">,</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> greeting<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// add a custom method</span>\n  octokit<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">helloWorld</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>greeting<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, world!`</span></span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// hook into the request lifecycle</span>\n  octokit<span class=\"token punctuation\">.</span>hook<span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token string\">'request'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> time <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n    octokit<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>method<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> – </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>response<span class=\"token punctuation\">.</span>status<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> in </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> time<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">ms`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> response\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">.plugin</code> accepts a function or an array of functions.</p>\n<p>We recommend using <a href=\"#logging\">Octokit’s log methods</a> to help users of your plugin with debugging.</p>\n<p>You can add new methods to the <code class=\"language-text\">octokit</code> instance passed as the first argument to\nthe plugin function. The 2nd argument is the options object passed to the\nconstructor when instantiating the <code class=\"language-text\">octokit</code> client.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> octokit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyOctokit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> greeting<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hola'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\noctokit<span class=\"token punctuation\">.</span><span class=\"token function\">helloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Hola, world!</span></code></pre></div>","fields":{"idName":"plugins"}}},{"node":{"id":"0ac8399f-8e70-5aed-b15b-72ab9f0a36c5","frontmatter":{"title":"Throttling"},"html":"<p>When you send too many requests in too little time you will likely hit errors due to rate and/or abuse limits.</p>\n<p>In order to automatically throttle requests as recommended in <a href=\"https://developer.github.com/v3/guides/best-practices-for-integrators/\">GitHub’s best practices for integrators</a>, we recommend you install the <a href=\"https://github.com/octokit/plugin-throttling.js\"><code class=\"language-text\">@octokit/plugin-throttling</code> plugin</a>.</p>\n<p>The <code class=\"language-text\">throttle.onAbuseLimit</code> and <code class=\"language-text\">throttle.onRateLimit</code> options are required. Return <code class=\"language-text\">true</code> to automatically retry the request after <code class=\"language-text\">retryAfter</code> seconds.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Octokit <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@octokit/rest'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@octokit/plugin-throttling'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> octokit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Octokit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  auth<span class=\"token punctuation\">:</span> <span class=\"token string\">'token '</span> <span class=\"token operator\">+</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">TOKEN</span><span class=\"token punctuation\">,</span>\n  throttle<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">onRateLimit</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">retryAfter<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      octokit<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Request quota exhausted for request </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>method<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>retryCount <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// only retries once</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Retrying after </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>retryAfter<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> seconds!`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">onAbuseLimit</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">retryAfter<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// does not retry, only logs a warning</span>\n      octokit<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Abuse detected for request </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>method<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","fields":{"idName":"throttling"}}},{"node":{"id":"962d2c11-f317-5cac-b54b-973fa148686a","frontmatter":{"title":"Automatic retries"},"html":"<p>Many common request errors can be easily remediated by retrying the request. We recommend installing the <a href=\"https://github.com/octokit/plugin-retry.js\"><code class=\"language-text\">@octokit/plugin-retry</code> plugin</a> for Automatic retries in these cases</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Octokit <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@octokit/rest'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@octokit/plugin-retry'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> octokit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Octokit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// all requests sent with the `octokit` instance are now retried up to 3 times for recoverable errors.</span></code></pre></div>","fields":{"idName":"automatic-retries"}}},{"node":{"id":"d064a610-60f6-5937-a225-e77d8ca08cd4","frontmatter":{"title":"Logging"},"html":"<p><code class=\"language-text\">Octokit</code> has 4 built-in log methods</p>\n<ol>\n<li><code class=\"language-text\">octokit.log.debug(message[, additionalInfo])</code></li>\n<li><code class=\"language-text\">octokit.log.info(message[, additionalInfo])</code></li>\n<li><code class=\"language-text\">octokit.log.warn(message[, additionalInfo])</code></li>\n<li><code class=\"language-text\">octokit.log.error(message[, additionalInfo])</code></li>\n</ol>\n<p>They can be configured using the <a href=\"client-options\"><code class=\"language-text\">log</code> client option</a>. By default, <code class=\"language-text\">octokit.log.debug()</code> and <code class=\"language-text\">octokit.log.info()</code> are no-ops, while the other two call <code class=\"language-text\">console.warn()</code> and <code class=\"language-text\">console.error()</code> respectively.</p>\n<p>This is useful if you build reusable <a href=\"#plugins\">plugins</a>.</p>","fields":{"idName":"logging"}}},{"node":{"id":"cebfb139-745f-514b-a23c-70f8af63d2bb","frontmatter":{"title":"Debug"},"html":"<p>The simplest way to receive debug information is to set the <a href=\"client-options\"><code class=\"language-text\">log</code> client option</a> to <code class=\"language-text\">console</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> octokit <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@octokit/rest'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  log<span class=\"token punctuation\">:</span> console\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\noctokit<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>This will log</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">request { method: &#39;GET&#39;,\n  baseUrl: &#39;https://api.github.com&#39;,\n  headers:\n   { accept: &#39;application/vnd.github.v3+json&#39;,\n     &#39;user-agent&#39;:\n      &#39;octokit.js/0.0.0-semantically-released Node.js/10.15.0 (macOS Mojave; x64)&#39; },\n  request: {},\n  url: &#39;/&#39; }\nGET / - 200 in 514ms</code></pre></div>\n<p>If you like to support a configurable log level, we recommend using the <a href=\"https://github.com/watson/console-log-level\">console-log-level</a> module</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> octokit <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@octokit/rest'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  log<span class=\"token punctuation\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'console-log-level'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> level<span class=\"token punctuation\">:</span> <span class=\"token string\">'info'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\noctokit<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>This will only log</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">GET / - 200 in 514ms</code></pre></div>","fields":{"idName":"debug"}}}]},"endpointScopes":{"edges":[{"node":{"id":"octokit-routes-activity","name":"activity","methods":[{"id":"octokit-routes-activity-list-public-events","name":"List public events","description":"We delay the public events feed by five minutes, which means the most recent event returned by the public events API actually occurred at least five minutes ago.","example":"octokit.activity.listPublicEvents()","documentationUrl":"https://developer.github.com/v3/activity/events/#list-public-events","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-repo-events","name":"List repository events","description":"","example":"octokit.activity.listRepoEvents({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/activity/events/#list-repository-events","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-public-events-for-repo-network","name":"List public events for a network of repositories","description":"","example":"octokit.activity.listPublicEventsForRepoNetwork({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-public-events-for-org","name":"List public events for an organization","description":"","example":"octokit.activity.listPublicEventsForOrg({\n  org\n})","documentationUrl":"https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization","params":[{"name":"org","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-received-events-for-user","name":"List events that a user has received","description":"These are events that you've received by watching repos and following users. If you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events.","example":"octokit.activity.listReceivedEventsForUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received","params":[{"name":"username","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-received-public-events-for-user","name":"List public events that a user has received","description":"","example":"octokit.activity.listReceivedPublicEventsForUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received","params":[{"name":"username","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-events-for-user","name":"List events performed by a user","description":"If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.","example":"octokit.activity.listEventsForUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user","params":[{"name":"username","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-public-events-for-user","name":"List public events performed by a user","description":"","example":"octokit.activity.listPublicEventsForUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user","params":[{"name":"username","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-events-for-org","name":"List events for an organization","description":"This is the user's organization dashboard. You must be authenticated as the user to view this.","example":"octokit.activity.listEventsForOrg({\n  username,\n  org\n})","documentationUrl":"https://developer.github.com/v3/activity/events/#list-events-for-an-organization","params":[{"name":"username","required":true,"description":""},{"name":"org","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-feeds","name":"List feeds","description":"GitHub provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://developer.github.com/v3/#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n*   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://developer.github.com/v3/#basic-authentication) since current feed URIs use the older, non revocable auth tokens.","example":"octokit.activity.listFeeds()","documentationUrl":"https://developer.github.com/v3/activity/feeds/#list-feeds","params":[]},{"id":"octokit-routes-activity-list-notifications","name":"List your notifications","description":"List all notifications for the current user, sorted by most recently updated.\n\nThe following example uses the `since` parameter to list notifications that have been updated after the specified time.","example":"octokit.activity.listNotifications()","documentationUrl":"https://developer.github.com/v3/activity/notifications/#list-your-notifications","params":[{"name":"all","required":false,"description":"If `true`, show notifications marked as read."},{"name":"participating","required":false,"description":"If `true`, only shows notifications in which the user is directly participating or mentioned."},{"name":"since","required":false,"description":"Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"before","required":false,"description":"Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-notifications-for-repo","name":"List your notifications in a repository","description":"List all notifications for the current user.","example":"octokit.activity.listNotificationsForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/activity/notifications/#list-your-notifications-in-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"all","required":false,"description":"If `true`, show notifications marked as read."},{"name":"participating","required":false,"description":"If `true`, only shows notifications in which the user is directly participating or mentioned."},{"name":"since","required":false,"description":"Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"before","required":false,"description":"Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-mark-as-read","name":"Mark as read","description":"Marking a notification as \"read\" removes it from the [default view on GitHub](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List your notifications](https://developer.github.com/v3/activity/notifications/#list-your-notifications) endpoint and pass the query parameter `all=false`.","example":"octokit.activity.markAsRead()","documentationUrl":"https://developer.github.com/v3/activity/notifications/#mark-as-read","params":[{"name":"last_read_at","required":false,"description":"Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."}]},{"id":"octokit-routes-activity-mark-notifications-as-read-for-repo","name":"Mark notifications as read in a repository","description":"Marking all notifications in a repository as \"read\" removes them from the [default view on GitHub](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List your notifications in a repository](https://developer.github.com/v3/activity/notifications/#list-your-notifications-in-a-repository) endpoint and pass the query parameter `all=false`.","example":"octokit.activity.markNotificationsAsReadForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"last_read_at","required":false,"description":"Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."}]},{"id":"octokit-routes-activity-get-thread","name":"View a single thread","description":"","example":"octokit.activity.getThread({\n  thread_id\n})","documentationUrl":"https://developer.github.com/v3/activity/notifications/#view-a-single-thread","params":[{"name":"thread_id","required":true,"description":""}]},{"id":"octokit-routes-activity-mark-thread-as-read","name":"Mark a thread as read","description":"","example":"octokit.activity.markThreadAsRead({\n  thread_id\n})","documentationUrl":"https://developer.github.com/v3/activity/notifications/#mark-a-thread-as-read","params":[{"name":"thread_id","required":true,"description":""}]},{"id":"octokit-routes-activity-get-thread-subscription","name":"Get a thread subscription","description":"This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://developer.github.com/v3/activity/watching/#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.","example":"octokit.activity.getThreadSubscription({\n  thread_id\n})","documentationUrl":"https://developer.github.com/v3/activity/notifications/#get-a-thread-subscription","params":[{"name":"thread_id","required":true,"description":""}]},{"id":"octokit-routes-activity-set-thread-subscription","name":"Set a thread subscription","description":"This lets you subscribe or unsubscribe from a conversation.","example":"octokit.activity.setThreadSubscription({\n  thread_id\n})","documentationUrl":"https://developer.github.com/v3/activity/notifications/#set-a-thread-subscription","params":[{"name":"thread_id","required":true,"description":""},{"name":"ignored","required":false,"description":"Unsubscribes and subscribes you to a conversation. Set `ignored` to `true` to block all notifications from this thread."}]},{"id":"octokit-routes-activity-delete-thread-subscription","name":"Delete a thread subscription","description":"Mutes all future notifications for a conversation until you comment on the thread or get **@mention**ed.","example":"octokit.activity.deleteThreadSubscription({\n  thread_id\n})","documentationUrl":"https://developer.github.com/v3/activity/notifications/#delete-a-thread-subscription","params":[{"name":"thread_id","required":true,"description":""}]},{"id":"octokit-routes-activity-list-stargazers-for-repo","name":"List Stargazers","description":"You can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:","example":"octokit.activity.listStargazersForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/activity/starring/#list-stargazers","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-repos-starred-by-user","name":"List repositories being starred by a user","description":"You can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:","example":"octokit.activity.listReposStarredByUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/activity/starring/#list-repositories-being-starred","params":[{"name":"username","required":true,"description":""},{"name":"sort","required":false,"description":"One of `created` (when the repository was starred) or `updated` (when it was last pushed to)."},{"name":"direction","required":false,"description":"One of `asc` (ascending) or `desc` (descending)."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-repos-starred-by-authenticated-user","name":"List repositories being starred by the authenticated user","description":"You can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:","example":"octokit.activity.listReposStarredByAuthenticatedUser()","documentationUrl":"https://developer.github.com/v3/activity/starring/#list-repositories-being-starred","params":[{"name":"sort","required":false,"description":"One of `created` (when the repository was starred) or `updated` (when it was last pushed to)."},{"name":"direction","required":false,"description":"One of `asc` (ascending) or `desc` (descending)."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-check-starring-repo","name":"Check if you are starring a repository","description":"Requires for the user to be authenticated.","example":"octokit.activity.checkStarringRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/activity/starring/#check-if-you-are-starring-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-activity-star-repo","name":"Star a repository","description":"Requires for the user to be authenticated.\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"","example":"octokit.activity.starRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/activity/starring/#star-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-activity-unstar-repo","name":"Unstar a repository","description":"Requires for the user to be authenticated.","example":"octokit.activity.unstarRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/activity/starring/#unstar-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-activity-list-watchers-for-repo","name":"List watchers","description":"","example":"octokit.activity.listWatchersForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/activity/watching/#list-watchers","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-repos-watched-by-user","name":"List repositories being watched by a user","description":"","example":"octokit.activity.listReposWatchedByUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/activity/watching/#list-repositories-being-watched","params":[{"name":"username","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-list-watched-repos-for-authenticated-user","name":"List repositories being watched by the authenticated user","description":"","example":"octokit.activity.listWatchedReposForAuthenticatedUser()","documentationUrl":"https://developer.github.com/v3/activity/watching/#list-repositories-being-watched","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-activity-get-repo-subscription","name":"Get a Repository Subscription","description":"","example":"octokit.activity.getRepoSubscription({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/activity/watching/#get-a-repository-subscription","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-activity-set-repo-subscription","name":"Set a Repository Subscription","description":"If you would like to watch a repository, set `subscribed` to `true`. If you would like to ignore notifications made within a repository, set `ignored` to `true`. If you would like to stop watching a repository, [delete the repository's subscription](https://developer.github.com/v3/activity/watching/#delete-a-repository-subscription) completely.","example":"octokit.activity.setRepoSubscription({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/activity/watching/#set-a-repository-subscription","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"subscribed","required":false,"description":"Determines if notifications should be received from this repository."},{"name":"ignored","required":false,"description":"Determines if all notifications should be blocked from this repository."}]},{"id":"octokit-routes-activity-delete-repo-subscription","name":"Delete a Repository Subscription","description":"This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, [set the repository's subscription manually](https://developer.github.com/v3/activity/watching/#set-a-repository-subscription).","example":"octokit.activity.deleteRepoSubscription({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/activity/watching/#delete-a-repository-subscription","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]}]}},{"node":{"id":"octokit-routes-apps","name":"apps","methods":[{"id":"octokit-routes-apps-get-by-slug","name":"Get a single GitHub App","description":"**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.","example":"octokit.apps.getBySlug({\n  app_slug\n})","documentationUrl":"https://developer.github.com/v3/apps/#get-a-single-github-app","params":[{"name":"app_slug","required":true,"description":""}]},{"id":"octokit-routes-apps-get-authenticated","name":"Get the authenticated GitHub App","description":"Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the \"[List installations](https://developer.github.com/v3/apps/#list-installations)\" endpoint.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.","example":"octokit.apps.getAuthenticated()","documentationUrl":"https://developer.github.com/v3/apps/#get-the-authenticated-github-app","params":[]},{"id":"octokit-routes-apps-list-installations","name":"List installations","description":"You must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key.","example":"octokit.apps.listInstallations()","documentationUrl":"https://developer.github.com/v3/apps/#list-installations","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-apps-get-installation","name":"Get an installation","description":"You must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.","example":"octokit.apps.getInstallation({\n  installation_id\n})","documentationUrl":"https://developer.github.com/v3/apps/#get-an-installation","params":[{"name":"installation_id","required":true,"description":""}]},{"id":"octokit-routes-apps-delete-installation","name":"Delete an installation","description":"Uninstalls a GitHub App on a user, organization, or business account.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.","example":"octokit.apps.deleteInstallation({\n  installation_id\n})","documentationUrl":"https://developer.github.com/v3/apps/#delete-an-installation","params":[{"name":"installation_id","required":true,"description":""}]},{"id":"octokit-routes-apps-create-installation-token","name":"Create a new installation token","description":"Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token.\n\nBy default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThis example grants the token \"Read and write\" permission to `issues` and \"Read\" permission to `contents`, and restricts the token's access to the repository with an `id` of 1296269.","example":"octokit.apps.createInstallationToken({\n  installation_id\n})","documentationUrl":"https://developer.github.com/v3/apps/#create-a-new-installation-token","params":[{"name":"installation_id","required":true,"description":""},{"name":"repository_ids","required":false,"description":"The `id`s of the repositories that the installation token can access. Providing repository `id`s restricts the access of an installation token to specific repositories. You can use the \"[List repositories](https://developer.github.com/v3/apps/installations/#list-repositories)\" endpoint to get the `id` of all repositories that an installation can access. For example, you can select specific repositories when creating an installation token to restrict the number of repositories that can be cloned using the token."},{"name":"permissions","required":false,"description":"The permissions granted to the access token. The permissions object includes the permission names and their access type. For a complete list of permissions and allowable values, see \"[GitHub App permissions](https://developer.github.com/apps/building-github-apps/creating-github-apps-using-url-parameters/#github-app-permissions).\""}]},{"id":"octokit-routes-apps-get-org-installation","name":"Get an organization installation","description":"Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.","example":"octokit.apps.getOrgInstallation({\n  org\n})","documentationUrl":"https://developer.github.com/v3/apps/#get-an-organization-installation","params":[{"name":"org","required":true,"description":""}]},{"id":"octokit-routes-apps-find-org-installation","name":"Find organization installation","description":"Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.","example":"octokit.apps.findOrgInstallation({\n  org\n})","documentationUrl":"https://developer.github.com/v3/apps/#get-an-organization-installation","params":[{"name":"org","required":true,"description":""}]},{"id":"octokit-routes-apps-get-repo-installation","name":"Get a repository installation","description":"Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.","example":"octokit.apps.getRepoInstallation({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/apps/#get-a-repository-installation","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-apps-find-repo-installation","name":"Find repository installation","description":"Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.","example":"octokit.apps.findRepoInstallation({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/apps/#get-a-repository-installation","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-apps-get-user-installation","name":"Get a user installation","description":"Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.","example":"octokit.apps.getUserInstallation({\n  username\n})","documentationUrl":"https://developer.github.com/v3/apps/#get-a-user-installation","params":[{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-apps-find-user-installation","name":"Find repository installation","description":"Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.","example":"octokit.apps.findUserInstallation({\n  username\n})","documentationUrl":"https://developer.github.com/v3/apps/#get-a-user-installation","params":[{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-apps-create-from-manifest","name":"Create a GitHub App from a manifest","description":"Use this endpoint to complete the handshake necessary when implementing the [GitHub App Manifest flow](https://developer.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/). When you create a GitHub App with the manifest flow, you receive a temporary `code` used to retrieve the GitHub App's `id`, `pem` (private key), and `webhook_secret`.","example":"octokit.apps.createFromManifest({\n  code\n})","documentationUrl":"https://developer.github.com/v3/apps/#create-a-github-app-from-a-manifest","params":[{"name":"code","required":true,"description":""}]},{"id":"octokit-routes-apps-list-repos","name":"List repositories","description":"List repositories that an installation can access.\n\nYou must use an [installation access token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.","example":"octokit.apps.listRepos()","documentationUrl":"https://developer.github.com/v3/apps/installations/#list-repositories","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-apps-list-installations-for-authenticated-user","name":"List installations for a user","description":"Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key.","example":"octokit.apps.listInstallationsForAuthenticatedUser()","documentationUrl":"https://developer.github.com/v3/apps/installations/#list-installations-for-a-user","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-apps-list-installation-repos-for-authenticated-user","name":"List repositories accessible to the user for an installation","description":"List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe access the user has to each repository is included in the hash under the `permissions` key.","example":"octokit.apps.listInstallationReposForAuthenticatedUser({\n  installation_id\n})","documentationUrl":"https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation","params":[{"name":"installation_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-apps-add-repo-to-installation","name":"Add repository to installation","description":"Add a single repository to an installation. The authenticated user must have admin access to the repository.\n\nYou must use a personal access token (which you can create via the [command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization)) or [Basic Authentication](https://developer.github.com/v3/auth/#basic-authentication) to access this endpoint.","example":"octokit.apps.addRepoToInstallation({\n  installation_id,\n  repository_id\n})","documentationUrl":"https://developer.github.com/v3/apps/installations/#add-repository-to-installation","params":[{"name":"installation_id","required":true,"description":""},{"name":"repository_id","required":true,"description":""}]},{"id":"octokit-routes-apps-remove-repo-from-installation","name":"Remove repository from installation","description":"Remove a single repository from an installation. The authenticated user must have admin access to the repository.\n\nYou must use a personal access token (which you can create via the [command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization)) or [Basic Authentication](https://developer.github.com/v3/auth/#basic-authentication) to access this endpoint.","example":"octokit.apps.removeRepoFromInstallation({\n  installation_id,\n  repository_id\n})","documentationUrl":"https://developer.github.com/v3/apps/installations/#remove-repository-from-installation","params":[{"name":"installation_id","required":true,"description":""},{"name":"repository_id","required":true,"description":""}]},{"id":"octokit-routes-apps-create-content-attachment","name":"Create a content attachment","description":"Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the `id` of the content reference from the [`content_reference` event](https://developer.github.com/v3/activity/events/types/#contentreferenceevent) to create an attachment.\n\nThe app must create a content attachment within six hours of the content reference URL being posted. See \"[Using content attachments](https://developer.github.com/apps/using-content-attachments/)\" for details about content attachments.\n\nYou must use an [installation access token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.\n\nThis example creates a content attachment for the domain `https://errors.ai/`.","example":"octokit.apps.createContentAttachment({\n  content_reference_id,\n  title,\n  body\n})","documentationUrl":"https://developer.github.com/v3/apps/installations/#create-a-content-attachment","params":[{"name":"content_reference_id","required":true,"description":""},{"name":"title","required":true,"description":"The title of the content attachment displayed in the body or comment of an issue or pull request."},{"name":"body","required":true,"description":"The body text of the content attachment displayed in the body or comment of an issue or pull request. This parameter supports markdown."}]},{"id":"octokit-routes-apps-list-plans","name":"List all plans for your Marketplace listing","description":"GitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.","example":"octokit.apps.listPlans()","documentationUrl":"https://developer.github.com/v3/apps/marketplace/#list-all-plans-for-your-marketplace-listing","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-apps-list-plans-stubbed","name":"List all plans for your Marketplace listing (stubbed)","description":"GitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.","example":"octokit.apps.listPlansStubbed()","documentationUrl":"https://developer.github.com/v3/apps/marketplace/#list-all-plans-for-your-marketplace-listing","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-apps-list-accounts-user-or-org-on-plan","name":"List all GitHub accounts (user or organization) on a specific plan","description":"Returns any accounts associated with a plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.","example":"octokit.apps.listAccountsUserOrOrgOnPlan({\n  plan_id\n})","documentationUrl":"https://developer.github.com/v3/apps/marketplace/#list-all-github-accounts-user-or-organization-on-a-specific-plan","params":[{"name":"plan_id","required":true,"description":""},{"name":"sort","required":false,"description":"Sorts the GitHub accounts by the date they were created or last updated. Can be one of `created` or `updated`."},{"name":"direction","required":false,"description":"To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-apps-list-accounts-user-or-org-on-plan-stubbed","name":"List all GitHub accounts (user or organization) on a specific plan (stubbed)","description":"Returns any accounts associated with a plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.","example":"octokit.apps.listAccountsUserOrOrgOnPlanStubbed({\n  plan_id\n})","documentationUrl":"https://developer.github.com/v3/apps/marketplace/#list-all-github-accounts-user-or-organization-on-a-specific-plan","params":[{"name":"plan_id","required":true,"description":""},{"name":"sort","required":false,"description":"Sorts the GitHub accounts by the date they were created or last updated. Can be one of `created` or `updated`."},{"name":"direction","required":false,"description":"To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-apps-check-account-is-associated-with-any","name":"Check if a GitHub account is associated with any Marketplace listing","description":"Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.","example":"octokit.apps.checkAccountIsAssociatedWithAny({\n  account_id\n})","documentationUrl":"https://developer.github.com/v3/apps/marketplace/#check-if-a-github-account-is-associated-with-any-marketplace-listing","params":[{"name":"account_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-apps-check-account-is-associated-with-any-stubbed","name":"Check if a GitHub account is associated with any Marketplace listing (stubbed)","description":"Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint.","example":"octokit.apps.checkAccountIsAssociatedWithAnyStubbed({\n  account_id\n})","documentationUrl":"https://developer.github.com/v3/apps/marketplace/#check-if-a-github-account-is-associated-with-any-marketplace-listing","params":[{"name":"account_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-apps-list-marketplace-purchases-for-authenticated-user","name":"Get a user's Marketplace purchases","description":"Returns only active subscriptions. You must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/).","example":"octokit.apps.listMarketplacePurchasesForAuthenticatedUser()","documentationUrl":"https://developer.github.com/v3/apps/marketplace/#get-a-users-marketplace-purchases","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-apps-list-marketplace-purchases-for-authenticated-user-stubbed","name":"Get a user's Marketplace purchases (stubbed)","description":"Returns only active subscriptions. You must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/).","example":"octokit.apps.listMarketplacePurchasesForAuthenticatedUserStubbed()","documentationUrl":"https://developer.github.com/v3/apps/marketplace/#get-a-users-marketplace-purchases","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]}]}},{"node":{"id":"octokit-routes-checks","name":"checks","methods":[{"id":"octokit-routes-checks-create","name":"Create a check run","description":"**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nCreates a new check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to create check runs.\n\n#### [](https://developer.github.com/v3/checks/runs/#actions-object)`actions` object","example":"octokit.checks.create({\n  owner,\n  repo,\n  name,\n  head_sha\n})","documentationUrl":"https://developer.github.com/v3/checks/runs/#create-a-check-run","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"name","required":true,"description":"The name of the check. For example, \"code-coverage\"."},{"name":"head_sha","required":true,"description":"The SHA of the commit."},{"name":"details_url","required":false,"description":"The URL of the integrator's site that has the full details of the check."},{"name":"external_id","required":false,"description":"A reference for the run on the integrator's system."},{"name":"status","required":false,"description":"The current status. Can be one of `queued`, `in_progress`, or `completed`."},{"name":"started_at","required":false,"description":"The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"conclusion","required":false,"description":"**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, or `action_required`. When the conclusion is `action_required`, additional details should be provided on the site specified by `details_url`.  \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`."},{"name":"completed_at","required":false,"description":"The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"output","required":false,"description":"Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://developer.github.com/v3/checks/runs/#output-object) description."},{"name":"output.title","required":true,"description":"The title of the check run."},{"name":"output.summary","required":true,"description":"The summary of the check run. This parameter supports Markdown."},{"name":"output.text","required":false,"description":"The details of the check run. This parameter supports Markdown."},{"name":"output.annotations","required":false,"description":"Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the **Checks** and **Files changed** tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://developer.github.com/v3/checks/runs/#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://developer.github.com/v3/checks/runs/#annotations-object) description for details about how to use this parameter."},{"name":"output.annotations[].path","required":true,"description":"The path of the file to add an annotation to. For example, `assets/css/main.css`."},{"name":"output.annotations[].start_line","required":true,"description":"The start line of the annotation."},{"name":"output.annotations[].end_line","required":true,"description":"The end line of the annotation."},{"name":"output.annotations[].start_column","required":false,"description":"The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values."},{"name":"output.annotations[].end_column","required":false,"description":"The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values."},{"name":"output.annotations[].annotation_level","required":true,"description":"The level of the annotation. Can be one of `notice`, `warning`, or `failure`."},{"name":"output.annotations[].message","required":true,"description":"A short description of the feedback for these lines of code. The maximum size is 64 KB."},{"name":"output.annotations[].title","required":false,"description":"The title that represents the annotation. The maximum size is 255 characters."},{"name":"output.annotations[].raw_details","required":false,"description":"Details about this annotation. The maximum size is 64 KB."},{"name":"output.images","required":false,"description":"Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://developer.github.com/v3/checks/runs/#images-object) description for details."},{"name":"output.images[].alt","required":true,"description":"The alternative text for the image."},{"name":"output.images[].image_url","required":true,"description":"The full URL of the image."},{"name":"output.images[].caption","required":false,"description":"A short image description."},{"name":"actions","required":false,"description":"Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the [`check_run.requested_action` webhook](https://developer.github.com/v3/activity/events/types/#checkrunevent) to your app. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://developer.github.com/v3/checks/runs/#actions-object) description. To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://developer.github.com/v3/checks/runs/#check-runs-and-requested-actions).\""},{"name":"actions[].label","required":true,"description":"The text to be displayed on a button in the web UI. The maximum size is 20 characters."},{"name":"actions[].description","required":true,"description":"A short explanation of what this action would do. The maximum size is 40 characters."},{"name":"actions[].identifier","required":true,"description":"A reference for the action on the integrator's system. The maximum size is 20 characters."}]},{"id":"octokit-routes-checks-update","name":"Update a check run","description":"**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nUpdates a check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to edit check runs.\n\n#### [](https://developer.github.com/v3/checks/runs/#actions-object-1)`actions` object","example":"octokit.checks.update({\n  owner,\n  repo,\n  check_run_id\n})","documentationUrl":"https://developer.github.com/v3/checks/runs/#update-a-check-run","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"check_run_id","required":true,"description":""},{"name":"name","required":false,"description":"The name of the check. For example, \"code-coverage\"."},{"name":"details_url","required":false,"description":"The URL of the integrator's site that has the full details of the check."},{"name":"external_id","required":false,"description":"A reference for the run on the integrator's system."},{"name":"started_at","required":false,"description":"This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"status","required":false,"description":"The current status. Can be one of `queued`, `in_progress`, or `completed`."},{"name":"conclusion","required":false,"description":"**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, or `action_required`.  \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`."},{"name":"completed_at","required":false,"description":"The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"output","required":false,"description":"Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://developer.github.com/v3/checks/runs/#output-object-1) description."},{"name":"output.title","required":false,"description":"**Required**."},{"name":"output.summary","required":true,"description":"Can contain Markdown."},{"name":"output.text","required":false,"description":"Can contain Markdown."},{"name":"output.annotations","required":false,"description":"Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://developer.github.com/v3/checks/runs/#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see \"[About status checks](https://help.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://developer.github.com/v3/checks/runs/#annotations-object-1) description for details."},{"name":"output.annotations[].path","required":true,"description":"The path of the file to add an annotation to. For example, `assets/css/main.css`."},{"name":"output.annotations[].start_line","required":true,"description":"The start line of the annotation."},{"name":"output.annotations[].end_line","required":true,"description":"The end line of the annotation."},{"name":"output.annotations[].start_column","required":false,"description":"The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values."},{"name":"output.annotations[].end_column","required":false,"description":"The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values."},{"name":"output.annotations[].annotation_level","required":true,"description":"The level of the annotation. Can be one of `notice`, `warning`, or `failure`."},{"name":"output.annotations[].message","required":true,"description":"A short description of the feedback for these lines of code. The maximum size is 64 KB."},{"name":"output.annotations[].title","required":false,"description":"The title that represents the annotation. The maximum size is 255 characters."},{"name":"output.annotations[].raw_details","required":false,"description":"Details about this annotation. The maximum size is 64 KB."},{"name":"output.images","required":false,"description":"Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://developer.github.com/v3/checks/runs/#annotations-object-1) description for details."},{"name":"output.images[].alt","required":true,"description":"The alternative text for the image."},{"name":"output.images[].image_url","required":true,"description":"The full URL of the image."},{"name":"output.images[].caption","required":false,"description":"A short image description."},{"name":"actions","required":false,"description":"Possible further actions the integrator can perform, which a user may trigger. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://developer.github.com/v3/checks/runs/#actions-object) description."},{"name":"actions[].label","required":true,"description":"The text to be displayed on a button in the web UI. The maximum size is 20 characters."},{"name":"actions[].description","required":true,"description":"A short explanation of what this action would do. The maximum size is 40 characters."},{"name":"actions[].identifier","required":true,"description":"A reference for the action on the integrator's system. The maximum size is 20 characters."}]},{"id":"octokit-routes-checks-list-for-ref","name":"List check runs for a specific ref","description":"**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.","example":"octokit.checks.listForRef({\n  owner,\n  repo,\n  ref\n})","documentationUrl":"https://developer.github.com/v3/checks/runs/#list-check-runs-for-a-specific-ref","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"ref","required":true,"description":""},{"name":"check_name","required":false,"description":"Returns check runs with the specified `name`."},{"name":"status","required":false,"description":"Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`."},{"name":"filter","required":false,"description":"Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-checks-list-for-suite","name":"List check runs in a check suite","description":"**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.","example":"octokit.checks.listForSuite({\n  owner,\n  repo,\n  check_suite_id\n})","documentationUrl":"https://developer.github.com/v3/checks/runs/#list-check-runs-in-a-check-suite","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"check_suite_id","required":true,"description":""},{"name":"check_name","required":false,"description":"Returns check runs with the specified `name`."},{"name":"status","required":false,"description":"Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`."},{"name":"filter","required":false,"description":"Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-checks-get","name":"Get a single check run","description":"**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nGets a single check run using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.","example":"octokit.checks.get({\n  owner,\n  repo,\n  check_run_id\n})","documentationUrl":"https://developer.github.com/v3/checks/runs/#get-a-single-check-run","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"check_run_id","required":true,"description":""}]},{"id":"octokit-routes-checks-list-annotations","name":"List annotations for a check run","description":"Lists annotations for a check run using the annotation `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the `repo` scope to get annotations for a check run in a private repository.","example":"octokit.checks.listAnnotations({\n  owner,\n  repo,\n  check_run_id\n})","documentationUrl":"https://developer.github.com/v3/checks/runs/#list-annotations-for-a-check-run","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"check_run_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-checks-get-suite","name":"Get a single check suite","description":"**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nGets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.","example":"octokit.checks.getSuite({\n  owner,\n  repo,\n  check_suite_id\n})","documentationUrl":"https://developer.github.com/v3/checks/suites/#get-a-single-check-suite","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"check_suite_id","required":true,"description":""}]},{"id":"octokit-routes-checks-list-suites-for-ref","name":"List check suites for a specific ref","description":"**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nLists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.","example":"octokit.checks.listSuitesForRef({\n  owner,\n  repo,\n  ref\n})","documentationUrl":"https://developer.github.com/v3/checks/suites/#list-check-suites-for-a-specific-ref","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"ref","required":true,"description":""},{"name":"app_id","required":false,"description":"Filters check suites by GitHub App `id`."},{"name":"check_name","required":false,"description":"Filters checks suites by the name of the [check run](https://developer.github.com/v3/checks/runs/)."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-checks-set-suites-preferences","name":"Set preferences for check suites on a repository","description":"Changes the default automatic flow when creating check suites. By default, the CheckSuiteEvent is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://developer.github.com/v3/checks/suites/#create-a-check-suite). You must have admin permissions in the repository to set preferences for check suites.","example":"octokit.checks.setSuitesPreferences({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"auto_trigger_checks","required":false,"description":"Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default. See the [`auto_trigger_checks` object](https://developer.github.com/v3/checks/suites/#auto_trigger_checks-object) description for details."},{"name":"auto_trigger_checks[].app_id","required":true,"description":"The `id` of the GitHub App."},{"name":"auto_trigger_checks[].setting","required":true,"description":"Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository, or `false` to disable them."}]},{"id":"octokit-routes-checks-create-suite","name":"Create a check suite","description":"**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nBy default, check suites are automatically created when you create a [check run](https://developer.github.com/v3/checks/runs/). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using \"[Set preferences for check suites on a repository](https://developer.github.com/v3/checks/suites/#set-preferences-for-check-suites-on-a-repository)\". Your GitHub App must have the `checks:write` permission to create check suites.","example":"octokit.checks.createSuite({\n  owner,\n  repo,\n  head_sha\n})","documentationUrl":"https://developer.github.com/v3/checks/suites/#create-a-check-suite","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"head_sha","required":true,"description":"The sha of the head commit."}]},{"id":"octokit-routes-checks-rerequest-suite","name":"Rerequest check suite","description":"Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the [`check_suite` webhook](https://developer.github.com/v3/activity/events/types/#checksuiteevent) event with the action `rerequested`. When a check suite is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.\n\nTo rerequest a check suite, your GitHub App must have the `checks:read` permission on a private repository or pull access to a public repository.","example":"octokit.checks.rerequestSuite({\n  owner,\n  repo,\n  check_suite_id\n})","documentationUrl":"https://developer.github.com/v3/checks/suites/#rerequest-check-suite","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"check_suite_id","required":true,"description":""}]}]}},{"node":{"id":"octokit-routes-codesOfConduct","name":"codesOfConduct","methods":[{"id":"octokit-routes-codesOfConduct-list-conduct-codes","name":"List all codes of conduct","description":"","example":"octokit.codesOfConduct.listConductCodes()","documentationUrl":"https://developer.github.com/v3/codes_of_conduct/#list-all-codes-of-conduct","params":[]},{"id":"octokit-routes-codesOfConduct-get-conduct-code","name":"Get an individual code of conduct","description":"","example":"octokit.codesOfConduct.getConductCode({\n  key\n})","documentationUrl":"https://developer.github.com/v3/codes_of_conduct/#get-an-individual-code-of-conduct","params":[{"name":"key","required":true,"description":""}]},{"id":"octokit-routes-codesOfConduct-get-for-repo","name":"Get the contents of a repository's code of conduct","description":"This method returns the contents of the repository's code of conduct file, if one is detected.","example":"octokit.codesOfConduct.getForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/codes_of_conduct/#get-the-contents-of-a-repositorys-code-of-conduct","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]}]}},{"node":{"id":"octokit-routes-emojis","name":"emojis","methods":[{"id":"octokit-routes-emojis-get","name":"Get","description":"Lists all the emojis available to use on GitHub.\n\n","example":"octokit.emojis.get()","documentationUrl":"https://developer.github.com/v3/emojis/#emojis","params":[]}]}},{"node":{"id":"octokit-routes-gists","name":"gists","methods":[{"id":"octokit-routes-gists-list-public-for-user","name":"List public gists for the specified user","description":"","example":"octokit.gists.listPublicForUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/gists/#list-a-users-gists","params":[{"name":"username","required":true,"description":""},{"name":"since","required":false,"description":"This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only gists updated at or after this time are returned."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-gists-list","name":"List the authenticated user's gists or if called anonymously, this will return all public gists","description":"","example":"octokit.gists.list()","documentationUrl":"https://developer.github.com/v3/gists/#list-a-users-gists","params":[{"name":"since","required":false,"description":"This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only gists updated at or after this time are returned."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-gists-list-public","name":"List all public gists","description":"List all public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://developer.github.com/v3/#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.","example":"octokit.gists.listPublic()","documentationUrl":"https://developer.github.com/v3/gists/#list-all-public-gists","params":[{"name":"since","required":false,"description":"This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only gists updated at or after this time are returned."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-gists-list-starred","name":"List starred gists","description":"List the authenticated user's starred gists:","example":"octokit.gists.listStarred()","documentationUrl":"https://developer.github.com/v3/gists/#list-starred-gists","params":[{"name":"since","required":false,"description":"This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only gists updated at or after this time are returned."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-gists-get","name":"Get a single gist","description":"","example":"octokit.gists.get({\n  gist_id\n})","documentationUrl":"https://developer.github.com/v3/gists/#get-a-single-gist","params":[{"name":"gist_id","required":true,"description":""}]},{"id":"octokit-routes-gists-get-revision","name":"Get a specific revision of a gist","description":"","example":"octokit.gists.getRevision({\n  gist_id,\n  sha\n})","documentationUrl":"https://developer.github.com/v3/gists/#get-a-specific-revision-of-a-gist","params":[{"name":"gist_id","required":true,"description":""},{"name":"sha","required":true,"description":""}]},{"id":"octokit-routes-gists-create","name":"Create a gist","description":"Allows you to add a new gist with one or more files.\n\n**Note:** Don't name your files \"gistfile\" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally.","example":"octokit.gists.create({\n  files\n})","documentationUrl":"https://developer.github.com/v3/gists/#create-a-gist","params":[{"name":"files","required":true,"description":"The filenames and content of each file in the gist. The keys in the `files` object represent the filename and have the type `string`."},{"name":"files.content","required":false,"description":"The content of the file."},{"name":"description","required":false,"description":"A descriptive name for this gist."},{"name":"public","required":false,"description":"When `true`, the gist will be public and available for anyone to see."}]},{"id":"octokit-routes-gists-update","name":"Edit a gist","description":"Allows you to update or delete a gist file and rename gist files. Files from the previous version of the gist that aren't explicitly changed during an edit are unchanged.","example":"octokit.gists.update({\n  gist_id\n})","documentationUrl":"https://developer.github.com/v3/gists/#edit-a-gist","params":[{"name":"gist_id","required":true,"description":""},{"name":"description","required":false,"description":"A descriptive name for this gist."},{"name":"files","required":false,"description":"The filenames and content that make up this gist."},{"name":"files.content","required":false,"description":"The updated content of the file."},{"name":"files.filename","required":false,"description":"The new name for this file. To delete a file, set the value of the filename to `null`."}]},{"id":"octokit-routes-gists-list-commits","name":"List gist commits","description":"","example":"octokit.gists.listCommits({\n  gist_id\n})","documentationUrl":"https://developer.github.com/v3/gists/#list-gist-commits","params":[{"name":"gist_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-gists-star","name":"Star a gist","description":"Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"","example":"octokit.gists.star({\n  gist_id\n})","documentationUrl":"https://developer.github.com/v3/gists/#star-a-gist","params":[{"name":"gist_id","required":true,"description":""}]},{"id":"octokit-routes-gists-unstar","name":"Unstar a gist","description":"","example":"octokit.gists.unstar({\n  gist_id\n})","documentationUrl":"https://developer.github.com/v3/gists/#unstar-a-gist","params":[{"name":"gist_id","required":true,"description":""}]},{"id":"octokit-routes-gists-check-is-starred","name":"Check if a gist is starred","description":"","example":"octokit.gists.checkIsStarred({\n  gist_id\n})","documentationUrl":"https://developer.github.com/v3/gists/#check-if-a-gist-is-starred","params":[{"name":"gist_id","required":true,"description":""}]},{"id":"octokit-routes-gists-fork","name":"Fork a gist","description":"**Note**: This was previously `/gists/:gist_id/fork`.","example":"octokit.gists.fork({\n  gist_id\n})","documentationUrl":"https://developer.github.com/v3/gists/#fork-a-gist","params":[{"name":"gist_id","required":true,"description":""}]},{"id":"octokit-routes-gists-list-forks","name":"List gist forks","description":"","example":"octokit.gists.listForks({\n  gist_id\n})","documentationUrl":"https://developer.github.com/v3/gists/#list-gist-forks","params":[{"name":"gist_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-gists-delete","name":"Delete a gist","description":"","example":"octokit.gists.delete({\n  gist_id\n})","documentationUrl":"https://developer.github.com/v3/gists/#delete-a-gist","params":[{"name":"gist_id","required":true,"description":""}]},{"id":"octokit-routes-gists-list-comments","name":"List comments on a gist","description":"","example":"octokit.gists.listComments({\n  gist_id\n})","documentationUrl":"https://developer.github.com/v3/gists/comments/#list-comments-on-a-gist","params":[{"name":"gist_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-gists-get-comment","name":"Get a single comment","description":"","example":"octokit.gists.getComment({\n  gist_id,\n  comment_id\n})","documentationUrl":"https://developer.github.com/v3/gists/comments/#get-a-single-comment","params":[{"name":"gist_id","required":true,"description":""},{"name":"comment_id","required":true,"description":""}]},{"id":"octokit-routes-gists-create-comment","name":"Create a comment","description":"","example":"octokit.gists.createComment({\n  gist_id,\n  body\n})","documentationUrl":"https://developer.github.com/v3/gists/comments/#create-a-comment","params":[{"name":"gist_id","required":true,"description":""},{"name":"body","required":true,"description":"The comment text."}]},{"id":"octokit-routes-gists-update-comment","name":"Edit a comment","description":"","example":"octokit.gists.updateComment({\n  gist_id,\n  comment_id,\n  body\n})","documentationUrl":"https://developer.github.com/v3/gists/comments/#edit-a-comment","params":[{"name":"gist_id","required":true,"description":""},{"name":"comment_id","required":true,"description":""},{"name":"body","required":true,"description":"The comment text."}]},{"id":"octokit-routes-gists-delete-comment","name":"Delete a comment","description":"","example":"octokit.gists.deleteComment({\n  gist_id,\n  comment_id\n})","documentationUrl":"https://developer.github.com/v3/gists/comments/#delete-a-comment","params":[{"name":"gist_id","required":true,"description":""},{"name":"comment_id","required":true,"description":""}]}]}},{"node":{"id":"octokit-routes-git","name":"git","methods":[{"id":"octokit-routes-git-get-blob","name":"Get a blob","description":"The `content` in the response will always be Base64 encoded.\n\n_Note_: This API supports blobs up to 100 megabytes in size.","example":"octokit.git.getBlob({\n  owner,\n  repo,\n  file_sha\n})","documentationUrl":"https://developer.github.com/v3/git/blobs/#get-a-blob","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"file_sha","required":true,"description":""}]},{"id":"octokit-routes-git-create-blob","name":"Create a blob","description":"","example":"octokit.git.createBlob({\n  owner,\n  repo,\n  content\n})","documentationUrl":"https://developer.github.com/v3/git/blobs/#create-a-blob","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"content","required":true,"description":"The new blob's content."},{"name":"encoding","required":false,"description":"The encoding used for `content`. Currently, `\"utf-8\"` and `\"base64\"` are supported."}]},{"id":"octokit-routes-git-get-commit","name":"Get a commit","description":"Gets a Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |","example":"octokit.git.getCommit({\n  owner,\n  repo,\n  commit_sha\n})","documentationUrl":"https://developer.github.com/v3/git/commits/#get-a-commit","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"commit_sha","required":true,"description":""}]},{"id":"octokit-routes-git-create-commit","name":"Create a commit","description":"Creates a new Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\nIn this example, the payload of the signature would be:\n\n\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |","example":"octokit.git.createCommit({\n  owner,\n  repo,\n  message,\n  tree,\n  parents\n})","documentationUrl":"https://developer.github.com/v3/git/commits/#create-a-commit","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"message","required":true,"description":"The commit message"},{"name":"tree","required":true,"description":"The SHA of the tree object this commit points to"},{"name":"parents","required":true,"description":"The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided."},{"name":"author","required":false,"description":"Information about the author of the commit. By default, the `author` will be the authenticated user and the current date. See the `author` and `committer` object below for details."},{"name":"author.name","required":false,"description":"The name of the author (or committer) of the commit"},{"name":"author.email","required":false,"description":"The email of the author (or committer) of the commit"},{"name":"author.date","required":false,"description":"Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"committer","required":false,"description":"Information about the person who is making the commit. By default, `committer` will use the information set in `author`. See the `author` and `committer` object below for details."},{"name":"committer.name","required":false,"description":"The name of the author (or committer) of the commit"},{"name":"committer.email","required":false,"description":"The email of the author (or committer) of the commit"},{"name":"committer.date","required":false,"description":"Indicates when this commit was authored (or committed). This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"signature","required":false,"description":"The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy) of the commit. GitHub adds the signature to the `gpgsig` header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a `signature` parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to [use the command line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work) to create signed commits."}]},{"id":"octokit-routes-git-get-ref","name":"Get a reference","description":"Returns a branch or tag reference. Other than the [REST API](https://developer.github.com/v3/git/refs/#get-a-reference) it always returns a single reference. If the REST API returns with an array then the method responds with an error.","example":"octokit.git.getRef({\n  owner,\n  repo,\n  ref\n})","documentationUrl":"https://developer.github.com/v3/git/refs/#get-a-reference","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"ref","required":true,"description":"Must be formatted as `heads/branch`, not just `branch`"}]},{"id":"octokit-routes-git-list-refs","name":"Get all references","description":"This will return an array of all the references on the system, including things like notes and stashes if they exist on the server","example":"octokit.git.listRefs({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/git/refs/#get-all-references","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"namespace","required":false,"description":"Filter by sub-namespace (reference prefix). Most commen examples would be `'heads/'` and `'tags/'` to retrieve branches or tags"},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-git-create-ref","name":"Create a reference","description":"Creates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches.","example":"octokit.git.createRef({\n  owner,\n  repo,\n  ref,\n  sha\n})","documentationUrl":"https://developer.github.com/v3/git/refs/#create-a-reference","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"ref","required":true,"description":"The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least two slashes, it will be rejected."},{"name":"sha","required":true,"description":"The SHA1 value for this reference."}]},{"id":"octokit-routes-git-update-ref","name":"Update a reference","description":"","example":"octokit.git.updateRef({\n  owner,\n  repo,\n  ref,\n  sha\n})","documentationUrl":"https://developer.github.com/v3/git/refs/#update-a-reference","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"ref","required":true,"description":""},{"name":"sha","required":true,"description":"The SHA1 value to set this reference to"},{"name":"force","required":false,"description":"Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to `false` will make sure you're not overwriting work."}]},{"id":"octokit-routes-git-delete-ref","name":"Delete a reference","description":"```\nDELETE /repos/octocat/Hello-World/git/refs/heads/feature-a\n```\n\n```\nDELETE /repos/octocat/Hello-World/git/refs/tags/v1.0\n```","example":"octokit.git.deleteRef({\n  owner,\n  repo,\n  ref\n})","documentationUrl":"https://developer.github.com/v3/git/refs/#delete-a-reference","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"ref","required":true,"description":""}]},{"id":"octokit-routes-git-get-tag","name":"Get a tag","description":"**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |","example":"octokit.git.getTag({\n  owner,\n  repo,\n  tag_sha\n})","documentationUrl":"https://developer.github.com/v3/git/tags/#get-a-tag","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"tag_sha","required":true,"description":""}]},{"id":"octokit-routes-git-create-tag","name":"Create a tag object","description":"Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then [create](https://developer.github.com/v3/git/refs/#create-a-reference) the `refs/tags/[tag]` reference. If you want to create a lightweight tag, you only have to [create](https://developer.github.com/v3/git/refs/#create-a-reference) the tag reference - this call would be unnecessary.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |","example":"octokit.git.createTag({\n  owner,\n  repo,\n  tag,\n  message,\n  object,\n  type\n})","documentationUrl":"https://developer.github.com/v3/git/tags/#create-a-tag-object","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"tag","required":true,"description":"The tag's name. This is typically a version (e.g., \"v0.0.1\")."},{"name":"message","required":true,"description":"The tag message."},{"name":"object","required":true,"description":"The SHA of the git object this is tagging."},{"name":"type","required":true,"description":"The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`."},{"name":"tagger","required":false,"description":"An object with information about the individual creating the tag."},{"name":"tagger.name","required":false,"description":"The name of the author of the tag"},{"name":"tagger.email","required":false,"description":"The email of the author of the tag"},{"name":"tagger.date","required":false,"description":"When this object was tagged. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."}]},{"id":"octokit-routes-git-get-tree","name":"Get a tree","description":"If `truncated` in the response is `true`, the number of items in the `tree` array exceeded our maximum limit. If you need to fetch more items, omit the `recursive` parameter, and fetch one sub-tree at a time. If you need to fetch even more items, you can clone the repository and iterate over the Git data locally.","example":"octokit.git.getTree({\n  owner,\n  repo,\n  tree_sha\n})","documentationUrl":"https://developer.github.com/v3/git/trees/#get-a-tree","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"tree_sha","required":true,"description":""},{"name":"recursive","required":null,"description":""}]},{"id":"octokit-routes-git-create-tree","name":"Create a tree","description":"The tree creation API will take nested entries as well. If both a tree and a nested path modifying that tree are specified, it will overwrite the contents of that tree with the new path contents and write a new tree out.","example":"octokit.git.createTree({\n  owner,\n  repo,\n  tree\n})","documentationUrl":"https://developer.github.com/v3/git/trees/#create-a-tree","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"tree","required":true,"description":"Objects (of `path`, `mode`, `type`, and `sha`) specifying a tree structure."},{"name":"tree[].path","required":false,"description":"The file referenced in the tree."},{"name":"tree[].mode","required":false,"description":"The file mode; one of `100644` for file (blob), `100755` for executable (blob), `040000` for subdirectory (tree), `160000` for submodule (commit), or `120000` for a blob that specifies the path of a symlink."},{"name":"tree[].type","required":false,"description":"Either `blob`, `tree`, or `commit`."},{"name":"tree[].sha","required":false,"description":"The SHA1 checksum ID of the object in the tree. Also called `tree.sha`.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error."},{"name":"tree[].content","required":false,"description":"The content you want this file to have. GitHub will write this blob out and use that SHA for this entry. Use either this, or `tree.sha`.  \n  \n**Note:** Use either `tree.sha` or `content` to specify the contents of the entry. Using both `tree.sha` and `content` will return an error."},{"name":"base_tree","required":false,"description":"The SHA1 of the tree you want to update with new data. If you don't set this, the commit will be created on top of everything; however, it will only contain your change, the rest of your files will show up as deleted."}]}]}},{"node":{"id":"octokit-routes-gitignore","name":"gitignore","methods":[{"id":"octokit-routes-gitignore-list-templates","name":"Listing available templates","description":"List all templates available to pass as an option when [creating a repository](https://developer.github.com/v3/repos/#create).","example":"octokit.gitignore.listTemplates()","documentationUrl":"https://developer.github.com/v3/gitignore/#listing-available-templates","params":[]},{"id":"octokit-routes-gitignore-get-template","name":"Get a single template","description":"The API also allows fetching the source of a single template.\n\nUse the raw [media type](https://developer.github.com/v3/media/) to get the raw contents.\n\n","example":"octokit.gitignore.getTemplate({\n  name\n})","documentationUrl":"https://developer.github.com/v3/gitignore/#get-a-single-template","params":[{"name":"name","required":true,"description":""}]}]}},{"node":{"id":"octokit-routes-interactions","name":"interactions","methods":[{"id":"octokit-routes-interactions-get-restrictions-for-org","name":"Get interaction restrictions for an organization","description":"Shows which group of GitHub users can interact with this organization and when the restriction expires. If there are no restrictions, you will see an empty response.","example":"octokit.interactions.getRestrictionsForOrg({\n  org\n})","documentationUrl":"https://developer.github.com/v3/interactions/orgs/#get-interaction-restrictions-for-an-organization","params":[{"name":"org","required":true,"description":""}]},{"id":"octokit-routes-interactions-add-or-update-restrictions-for-org","name":"Add or update interaction restrictions for an organization","description":"Temporarily restricts interactions to certain GitHub users in any public repository in the given organization. You must be an organization owner to set these restrictions.","example":"octokit.interactions.addOrUpdateRestrictionsForOrg({\n  org,\n  limit\n})","documentationUrl":"https://developer.github.com/v3/interactions/orgs/#add-or-update-interaction-restrictions-for-an-organization","params":[{"name":"org","required":true,"description":""},{"name":"limit","required":true,"description":"Specifies the group of GitHub users who can comment, open issues, or create pull requests in public repositories for the given organization. Must be one of: `existing_users`, `contributors_only`, or `collaborators_only`."}]},{"id":"octokit-routes-interactions-remove-restrictions-for-org","name":"Remove interaction restrictions for an organization","description":"Removes all interaction restrictions from public repositories in the given organization. You must be an organization owner to remove restrictions.","example":"octokit.interactions.removeRestrictionsForOrg({\n  org\n})","documentationUrl":"https://developer.github.com/v3/interactions/orgs/#remove-interaction-restrictions-for-an-organization","params":[{"name":"org","required":true,"description":""}]},{"id":"octokit-routes-interactions-get-restrictions-for-repo","name":"Get interaction restrictions for a repository","description":"Shows which group of GitHub users can interact with this repository and when the restriction expires. If there are no restrictions, you will see an empty response.","example":"octokit.interactions.getRestrictionsForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/interactions/repos/#get-interaction-restrictions-for-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-interactions-add-or-update-restrictions-for-repo","name":"Add or update interaction restrictions for a repository","description":"Temporarily restricts interactions to certain GitHub users within the given repository. You must have owner or admin access to set restrictions.","example":"octokit.interactions.addOrUpdateRestrictionsForRepo({\n  owner,\n  repo,\n  limit\n})","documentationUrl":"https://developer.github.com/v3/interactions/repos/#add-or-update-interaction-restrictions-for-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"limit","required":true,"description":"Specifies the group of GitHub users who can comment, open issues, or create pull requests for the given repository. Must be one of: `existing_users`, `contributors_only`, or `collaborators_only`."}]},{"id":"octokit-routes-interactions-remove-restrictions-for-repo","name":"Remove interaction restrictions for a repository","description":"Removes all interaction restrictions from the given repository. You must have owner or admin access to remove restrictions.","example":"octokit.interactions.removeRestrictionsForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/interactions/repos/#remove-interaction-restrictions-for-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]}]}},{"node":{"id":"octokit-routes-issues","name":"issues","methods":[{"id":"octokit-routes-issues-list","name":"List all issues assigned to the authenticated user across all visible repositories including owned repositories, member repositories, and organization repositories","description":"**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint.\n\n","example":"octokit.issues.list()","documentationUrl":"https://developer.github.com/v3/issues/#list-issues","params":[{"name":"filter","required":false,"description":"Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation"},{"name":"state","required":false,"description":"Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`."},{"name":"labels","required":false,"description":"A list of comma separated label names. Example: `bug,ui,@high`"},{"name":"sort","required":false,"description":"What to sort results by. Can be either `created`, `updated`, `comments`."},{"name":"direction","required":false,"description":"The direction of the sort. Can be either `asc` or `desc`."},{"name":"since","required":false,"description":"Only issues updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-issues-list-for-authenticated-user","name":"List all issues across owned and member repositories assigned to the authenticated user","description":"**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint.\n\n","example":"octokit.issues.listForAuthenticatedUser()","documentationUrl":"https://developer.github.com/v3/issues/#list-issues","params":[{"name":"filter","required":false,"description":"Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation"},{"name":"state","required":false,"description":"Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`."},{"name":"labels","required":false,"description":"A list of comma separated label names. Example: `bug,ui,@high`"},{"name":"sort","required":false,"description":"What to sort results by. Can be either `created`, `updated`, `comments`."},{"name":"direction","required":false,"description":"The direction of the sort. Can be either `asc` or `desc`."},{"name":"since","required":false,"description":"Only issues updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-issues-list-for-org","name":"List all issues for a given organization assigned to the authenticated user","description":"**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint.\n\n","example":"octokit.issues.listForOrg({\n  org\n})","documentationUrl":"https://developer.github.com/v3/issues/#list-issues","params":[{"name":"org","required":true,"description":""},{"name":"filter","required":false,"description":"Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation"},{"name":"state","required":false,"description":"Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`."},{"name":"labels","required":false,"description":"A list of comma separated label names. Example: `bug,ui,@high`"},{"name":"sort","required":false,"description":"What to sort results by. Can be either `created`, `updated`, `comments`."},{"name":"direction","required":false,"description":"The direction of the sort. Can be either `asc` or `desc`."},{"name":"since","required":false,"description":"Only issues updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-issues-list-for-repo","name":"List issues for a repository","description":"**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint.\n\n","example":"octokit.issues.listForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/issues/#list-issues-for-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"milestone","required":false,"description":"If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned."},{"name":"state","required":false,"description":"Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`."},{"name":"assignee","required":false,"description":"Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user."},{"name":"creator","required":false,"description":"The user that created the issue."},{"name":"mentioned","required":false,"description":"A user that's mentioned in the issue."},{"name":"labels","required":false,"description":"A list of comma separated label names. Example: `bug,ui,@high`"},{"name":"sort","required":false,"description":"What to sort results by. Can be either `created`, `updated`, `comments`."},{"name":"direction","required":false,"description":"The direction of the sort. Can be either `asc` or `desc`."},{"name":"since","required":false,"description":"Only issues updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-issues-get","name":"Get a single issue","description":"The API returns a [`301 Moved Permanently` status](https://developer.github.com/v3/#http-redirects) if the issue was [transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If the issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API returns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read access, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe to the [`issues`](https://developer.github.com/v3/activity/events/types/#issuesevent) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint.\n\n","example":"octokit.issues.get({\n  owner,\n  repo,\n  issue_number\n})","documentationUrl":"https://developer.github.com/v3/issues/#get-a-single-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-create","name":"Create an issue","description":"Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://help.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.","example":"octokit.issues.create({\n  owner,\n  repo,\n  title\n})","documentationUrl":"https://developer.github.com/v3/issues/#create-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"title","required":true,"description":"The title of the issue."},{"name":"body","required":false,"description":"The contents of the issue."},{"name":"assignee","required":false,"description":"Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**_"},{"name":"milestone","required":false,"description":"The `number` of the milestone to associate this issue with. _NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise._"},{"name":"labels","required":false,"description":"Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise._"},{"name":"assignees","required":false,"description":"Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._"}]},{"id":"octokit-routes-issues-update","name":"Edit an issue","description":"Issue owners and users with push access can edit an issue.","example":"octokit.issues.update({\n  owner,\n  repo,\n  issue_number\n})","documentationUrl":"https://developer.github.com/v3/issues/#edit-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"title","required":false,"description":"The title of the issue."},{"name":"body","required":false,"description":"The contents of the issue."},{"name":"assignee","required":false,"description":"Login for the user that this issue should be assigned to. **This field is deprecated.**"},{"name":"state","required":false,"description":"State of the issue. Either `open` or `closed`."},{"name":"milestone","required":false,"description":"The `number` of the milestone to associate this issue with or `null` to remove current. _NOTE: Only users with push access can set the milestone for issues. The milestone is silently dropped otherwise._"},{"name":"labels","required":false,"description":"Labels to associate with this issue. Pass one or more Labels to _replace_ the set of Labels on this Issue. Send an empty array (`[]`) to clear all Labels from the Issue. _NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise._"},{"name":"assignees","required":false,"description":"Logins for Users to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this Issue. Send an empty array (`[]`) to clear all assignees from the Issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._"},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-lock","name":"Lock an issue","description":"Users with push access can lock an issue or pull request's conversation.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"","example":"octokit.issues.lock({\n  owner,\n  repo,\n  issue_number\n})","documentationUrl":"https://developer.github.com/v3/issues/#lock-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"lock_reason","required":false,"description":"The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:  \n\\* `off-topic`  \n\\* `too heated`  \n\\* `resolved`  \n\\* `spam`"},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-unlock","name":"Unlock an issue","description":"Users with push access can unlock an issue's conversation.","example":"octokit.issues.unlock({\n  owner,\n  repo,\n  issue_number\n})","documentationUrl":"https://developer.github.com/v3/issues/#unlock-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-list-assignees","name":"List assignees","description":"Lists the [available assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/) for issues in a repository.","example":"octokit.issues.listAssignees({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/issues/assignees/#list-assignees","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-issues-check-assignee","name":"Check assignee","description":"Checks if a user has permission to be assigned to an issue in this repository.\n\nIf the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.\n\nOtherwise a `404` status code is returned.","example":"octokit.issues.checkAssignee({\n  owner,\n  repo,\n  assignee\n})","documentationUrl":"https://developer.github.com/v3/issues/assignees/#check-assignee","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"assignee","required":true,"description":""}]},{"id":"octokit-routes-issues-add-assignees","name":"Add assignees to an issue","description":"Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.\n\nThis example adds two assignees to the existing `octocat` assignee.","example":"octokit.issues.addAssignees({\n  owner,\n  repo,\n  issue_number\n})","documentationUrl":"https://developer.github.com/v3/issues/assignees/#add-assignees-to-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"assignees","required":false,"description":"Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise._"},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-remove-assignees","name":"Remove assignees from an issue","description":"Removes one or more assignees from an issue.\n\nThis example removes two of three assignees, leaving the `octocat` assignee.","example":"octokit.issues.removeAssignees({\n  owner,\n  repo,\n  issue_number\n})","documentationUrl":"https://developer.github.com/v3/issues/assignees/#remove-assignees-from-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"assignees","required":false,"description":"Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise._"},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-list-comments","name":"List comments on an issue","description":"Issue Comments are ordered by ascending ID.\n\n","example":"octokit.issues.listComments({\n  owner,\n  repo,\n  issue_number\n})","documentationUrl":"https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"since","required":false,"description":"Only comments updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-list-comments-for-repo","name":"List comments in a repository","description":"By default, Issue Comments are ordered by ascending ID.\n\n","example":"octokit.issues.listCommentsForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/issues/comments/#list-comments-in-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"sort","required":false,"description":"Either `created` or `updated`."},{"name":"direction","required":false,"description":"Either `asc` or `desc`. Ignored without the `sort` parameter."},{"name":"since","required":false,"description":"Only comments updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."}]},{"id":"octokit-routes-issues-get-comment","name":"Get a single comment","description":"","example":"octokit.issues.getComment({\n  owner,\n  repo,\n  comment_id\n})","documentationUrl":"https://developer.github.com/v3/issues/comments/#get-a-single-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-issues-create-comment","name":"Create a comment","description":"This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.","example":"octokit.issues.createComment({\n  owner,\n  repo,\n  issue_number,\n  body\n})","documentationUrl":"https://developer.github.com/v3/issues/comments/#create-a-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"body","required":true,"description":"The contents of the comment."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-update-comment","name":"Edit a comment","description":"","example":"octokit.issues.updateComment({\n  owner,\n  repo,\n  comment_id,\n  body\n})","documentationUrl":"https://developer.github.com/v3/issues/comments/#edit-a-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""},{"name":"body","required":true,"description":"The contents of the comment."}]},{"id":"octokit-routes-issues-delete-comment","name":"Delete a comment","description":"","example":"octokit.issues.deleteComment({\n  owner,\n  repo,\n  comment_id\n})","documentationUrl":"https://developer.github.com/v3/issues/comments/#delete-a-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""}]},{"id":"octokit-routes-issues-list-events","name":"List events for an issue","description":"","example":"octokit.issues.listEvents({\n  owner,\n  repo,\n  issue_number\n})","documentationUrl":"https://developer.github.com/v3/issues/events/#list-events-for-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-list-events-for-repo","name":"List events for a repository","description":"","example":"octokit.issues.listEventsForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/issues/events/#list-events-for-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-issues-get-event","name":"Get a single event","description":"","example":"octokit.issues.getEvent({\n  owner,\n  repo,\n  event_id\n})","documentationUrl":"https://developer.github.com/v3/issues/events/#get-a-single-event","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"event_id","required":true,"description":""}]},{"id":"octokit-routes-issues-list-labels-for-repo","name":"List all labels for this repository","description":"","example":"octokit.issues.listLabelsForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-issues-get-label","name":"Get a single label","description":"","example":"octokit.issues.getLabel({\n  owner,\n  repo,\n  name\n})","documentationUrl":"https://developer.github.com/v3/issues/labels/#get-a-single-label","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"name","required":true,"description":""}]},{"id":"octokit-routes-issues-create-label","name":"Create a label","description":"","example":"octokit.issues.createLabel({\n  owner,\n  repo,\n  name,\n  color\n})","documentationUrl":"https://developer.github.com/v3/issues/labels/#create-a-label","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"name","required":true,"description":"The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \":strawberry:\"). For a full list of available emoji and codes, see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/)."},{"name":"color","required":true,"description":"The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`."},{"name":"description","required":false,"description":"A short description of the label."}]},{"id":"octokit-routes-issues-update-label","name":"Update a label","description":"","example":"octokit.issues.updateLabel({\n  owner,\n  repo,\n  current_name\n})","documentationUrl":"https://developer.github.com/v3/issues/labels/#update-a-label","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"current_name","required":true,"description":""},{"name":"name","required":false,"description":"The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png \":strawberry:\"). For a full list of available emoji and codes, see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/)."},{"name":"color","required":false,"description":"The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`."},{"name":"description","required":false,"description":"A short description of the label."}]},{"id":"octokit-routes-issues-delete-label","name":"Delete a label","description":"","example":"octokit.issues.deleteLabel({\n  owner,\n  repo,\n  name\n})","documentationUrl":"https://developer.github.com/v3/issues/labels/#delete-a-label","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"name","required":true,"description":""}]},{"id":"octokit-routes-issues-list-labels-on-issue","name":"List labels on an issue","description":"","example":"octokit.issues.listLabelsOnIssue({\n  owner,\n  repo,\n  issue_number\n})","documentationUrl":"https://developer.github.com/v3/issues/labels/#list-labels-on-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-add-labels","name":"Add labels to an issue","description":"","example":"octokit.issues.addLabels({\n  owner,\n  repo,\n  issue_number,\n  labels\n})","documentationUrl":"https://developer.github.com/v3/issues/labels/#add-labels-to-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"labels","required":true,"description":"The name of the label to add to the issue. Must contain at least one label. **Note:** Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-remove-label","name":"Remove a label from an issue","description":"Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a `404 Not Found` status if the label does not exist.","example":"octokit.issues.removeLabel({\n  owner,\n  repo,\n  issue_number,\n  name\n})","documentationUrl":"https://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"name","required":true,"description":""},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-replace-labels","name":"Replace all labels for an issue","description":"","example":"octokit.issues.replaceLabels({\n  owner,\n  repo,\n  issue_number\n})","documentationUrl":"https://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"labels","required":false,"description":"The names of the labels to add to the issue. You can pass an empty array to remove all labels. **Note:** Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-remove-labels","name":"Remove all labels from an issue","description":"","example":"octokit.issues.removeLabels({\n  owner,\n  repo,\n  issue_number\n})","documentationUrl":"https://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-list-labels-for-milestone","name":"Get labels for every issue in a milestone","description":"","example":"octokit.issues.listLabelsForMilestone({\n  owner,\n  repo,\n  milestone_number\n})","documentationUrl":"https://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"milestone_number","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-list-milestones-for-repo","name":"List milestones for a repository","description":"","example":"octokit.issues.listMilestonesForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"state","required":false,"description":"The state of the milestone. Either `open`, `closed`, or `all`."},{"name":"sort","required":false,"description":"What to sort results by. Either `due_on` or `completeness`."},{"name":"direction","required":false,"description":"The direction of the sort. Either `asc` or `desc`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-issues-get-milestone","name":"Get a single milestone","description":"","example":"octokit.issues.getMilestone({\n  owner,\n  repo,\n  milestone_number\n})","documentationUrl":"https://developer.github.com/v3/issues/milestones/#get-a-single-milestone","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"milestone_number","required":true,"description":""},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-create-milestone","name":"Create a milestone","description":"","example":"octokit.issues.createMilestone({\n  owner,\n  repo,\n  title\n})","documentationUrl":"https://developer.github.com/v3/issues/milestones/#create-a-milestone","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"title","required":true,"description":"The title of the milestone."},{"name":"state","required":false,"description":"The state of the milestone. Either `open` or `closed`."},{"name":"description","required":false,"description":"A description of the milestone."},{"name":"due_on","required":false,"description":"The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."}]},{"id":"octokit-routes-issues-update-milestone","name":"Update a milestone","description":"","example":"octokit.issues.updateMilestone({\n  owner,\n  repo,\n  milestone_number\n})","documentationUrl":"https://developer.github.com/v3/issues/milestones/#update-a-milestone","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"milestone_number","required":true,"description":""},{"name":"title","required":false,"description":"The title of the milestone."},{"name":"state","required":false,"description":"The state of the milestone. Either `open` or `closed`."},{"name":"description","required":false,"description":"A description of the milestone."},{"name":"due_on","required":false,"description":"The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-delete-milestone","name":"Delete a milestone","description":"","example":"octokit.issues.deleteMilestone({\n  owner,\n  repo,\n  milestone_number\n})","documentationUrl":"https://developer.github.com/v3/issues/milestones/#delete-a-milestone","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"milestone_number","required":true,"description":""},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-issues-list-events-for-timeline","name":"List events for an issue","description":"","example":"octokit.issues.listEventsForTimeline({\n  owner,\n  repo,\n  issue_number\n})","documentationUrl":"https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."},{"name":"number","required":false,"description":""}]}]}},{"node":{"id":"octokit-routes-licenses","name":"licenses","methods":[{"id":"octokit-routes-licenses-list-commonly-used","name":"List commonly used licenses","description":"","example":"octokit.licenses.listCommonlyUsed()","documentationUrl":"https://developer.github.com/v3/licenses/#list-commonly-used-licenses","params":[]},{"id":"octokit-routes-licenses-list","name":"List all licenses","description":"","example":"octokit.licenses.list()","documentationUrl":"https://developer.github.com/v3/licenses/#list-commonly-used-licenses","params":[]},{"id":"octokit-routes-licenses-get","name":"Get an individual license","description":"","example":"octokit.licenses.get({\n  license\n})","documentationUrl":"https://developer.github.com/v3/licenses/#get-an-individual-license","params":[{"name":"license","required":true,"description":""}]},{"id":"octokit-routes-licenses-get-for-repo","name":"Get the contents of a repository's license","description":"This method returns the contents of the repository's license file, if one is detected.\n\nSimilar to [the repository contents API](https://developer.github.com/v3/repos/contents/#get-contents), this method also supports [custom media types](https://developer.github.com/v3/repos/contents/#custom-media-types) for retrieving the raw license content or rendered license HTML.","example":"octokit.licenses.getForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/licenses/#get-the-contents-of-a-repositorys-license","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]}]}},{"node":{"id":"octokit-routes-markdown","name":"markdown","methods":[{"id":"octokit-routes-markdown-render","name":"Render an arbitrary Markdown document","description":"","example":"octokit.markdown.render({\n  text\n})","documentationUrl":"https://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document","params":[{"name":"text","required":true,"description":"The Markdown text to render in HTML. Markdown content must be 400 KB or less."},{"name":"mode","required":false,"description":"The rendering mode. Can be either:  \n\\* `markdown` to render a document in plain Markdown, just like README.md files are rendered.  \n\\* `gfm` to render a document in [GitHub Flavored Markdown](https://github.github.com/gfm/), which creates links for user mentions as well as references to SHA-1 hashes, issues, and pull requests."},{"name":"context","required":false,"description":"The repository context to use when creating references in `gfm` mode. Omit this parameter when using `markdown` mode."}]},{"id":"octokit-routes-markdown-render-raw","name":"Render a Markdown document in raw mode","description":"You must send Markdown as plain text (using a `Content-Type` header of `text/plain` or `text/x-markdown`) to this endpoint, rather than using JSON format. In raw mode, [GitHub Flavored Markdown](https://github.github.com/gfm/) is not supported and Markdown will be rendered in plain format like a README.md file. Markdown content must be 400 KB or less.\n\n","example":"octokit.markdown.renderRaw({\n  data\n})","documentationUrl":"https://developer.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode","params":[{"name":"data","required":true,"description":""}]}]}},{"node":{"id":"octokit-routes-meta","name":"meta","methods":[{"id":"octokit-routes-meta-get","name":"Get","description":"This endpoint provides a list of GitHub's IP addresses. For more information, see \"[About GitHub's IP addresses](https://help.github.com/articles/about-github-s-ip-addresses/).\"","example":"octokit.meta.get()","documentationUrl":"https://developer.github.com/v3/meta/#meta","params":[]}]}},{"node":{"id":"octokit-routes-migrations","name":"migrations","methods":[{"id":"octokit-routes-migrations-start-for-org","name":"Start an organization migration","description":"Initiates the generation of a migration archive.","example":"octokit.migrations.startForOrg({\n  org,\n  repositories\n})","documentationUrl":"https://developer.github.com/v3/migrations/orgs/#start-an-organization-migration","params":[{"name":"org","required":true,"description":""},{"name":"repositories","required":true,"description":"A list of arrays indicating which repositories should be migrated."},{"name":"lock_repositories","required":false,"description":"Indicates whether repositories should be locked (to prevent manipulation) while migrating data."},{"name":"exclude_attachments","required":false,"description":"Indicates whether attachments should be excluded from the migration (to reduce migration archive file size)."}]},{"id":"octokit-routes-migrations-list-for-org","name":"Get a list of organization migrations","description":"Lists the most recent migrations.","example":"octokit.migrations.listForOrg({\n  org\n})","documentationUrl":"https://developer.github.com/v3/migrations/orgs/#get-a-list-of-organization-migrations","params":[{"name":"org","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-migrations-get-status-for-org","name":"Get the status of an organization migration","description":"Fetches the status of a migration.\n\nThe `state` of a migration can be one of the following values:\n\n*   `pending`, which means the migration hasn't started yet.\n*   `exporting`, which means the migration is in progress.\n*   `exported`, which means the migration finished successfully.\n*   `failed`, which means the migration failed.","example":"octokit.migrations.getStatusForOrg({\n  org,\n  migration_id\n})","documentationUrl":"https://developer.github.com/v3/migrations/orgs/#get-the-status-of-an-organization-migration","params":[{"name":"org","required":true,"description":""},{"name":"migration_id","required":true,"description":""}]},{"id":"octokit-routes-migrations-get-archive-for-org","name":"Download an organization migration archive","description":"Fetches the URL to a migration archive.\n\n","example":"octokit.migrations.getArchiveForOrg({\n  org,\n  migration_id\n})","documentationUrl":"https://developer.github.com/v3/migrations/orgs/#download-an-organization-migration-archive","params":[{"name":"org","required":true,"description":""},{"name":"migration_id","required":true,"description":""}]},{"id":"octokit-routes-migrations-delete-archive-for-org","name":"Delete an organization migration archive","description":"Deletes a previous migration archive. Migration archives are automatically deleted after seven days.","example":"octokit.migrations.deleteArchiveForOrg({\n  org,\n  migration_id\n})","documentationUrl":"https://developer.github.com/v3/migrations/orgs/#delete-an-organization-migration-archive","params":[{"name":"org","required":true,"description":""},{"name":"migration_id","required":true,"description":""}]},{"id":"octokit-routes-migrations-unlock-repo-for-org","name":"Unlock an organization repository","description":"Unlocks a repository that was locked for migration. You should unlock each migrated repository and [delete them](https://developer.github.com/v3/repos/#delete-a-repository) when the migration is complete and you no longer need the source data.","example":"octokit.migrations.unlockRepoForOrg({\n  org,\n  migration_id,\n  repo_name\n})","documentationUrl":"https://developer.github.com/v3/migrations/orgs/#unlock-an-organization-repository","params":[{"name":"org","required":true,"description":""},{"name":"migration_id","required":true,"description":""},{"name":"repo_name","required":true,"description":""}]},{"id":"octokit-routes-migrations-start-import","name":"Start an import","description":"Start a source import to a GitHub repository using GitHub Importer.","example":"octokit.migrations.startImport({\n  owner,\n  repo,\n  vcs_url\n})","documentationUrl":"https://developer.github.com/v3/migrations/source_imports/#start-an-import","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"vcs_url","required":true,"description":"The URL of the originating repository."},{"name":"vcs","required":false,"description":"The originating VCS type. Can be one of `subversion`, `git`, `mercurial`, or `tfvc`. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response."},{"name":"vcs_username","required":false,"description":"If authentication is required, the username to provide to `vcs_url`."},{"name":"vcs_password","required":false,"description":"If authentication is required, the password to provide to `vcs_url`."},{"name":"tfvc_project","required":false,"description":"For a tfvc import, the name of the project that is being imported."}]},{"id":"octokit-routes-migrations-get-import-progress","name":"Get import progress","description":"View the progress of an import.\n\n**Import status**\n\nThis section includes details about the possible values of the `status` field of the Import Progress response.\n\nAn import that does not have errors will progress through these steps:\n\n*   `detecting` - the \"detection\" step of the import is in progress because the request did not include a `vcs` parameter. The import is identifying the type of source control present at the URL.\n*   `importing` - the \"raw\" step of the import is in progress. This is where commit data is fetched from the original repository. The import progress response will include `commit_count` (the total number of raw commits that will be imported) and `percent` (0 - 100, the current progress through the import).\n*   `mapping` - the \"rewrite\" step of the import is in progress. This is where SVN branches are converted to Git branches, and where author updates are applied. The import progress response does not include progress information.\n*   `pushing` - the \"push\" step of the import is in progress. This is where the importer updates the repository on GitHub. The import progress response will include `push_percent`, which is the percent value reported by `git push` when it is \"Writing objects\".\n*   `complete` - the import is complete, and the repository is ready on GitHub.\n\nIf there are problems, you will see one of these in the `status` field:\n\n*   `auth_failed` - the import requires authentication in order to connect to the original repository. To update authentication for the import, please see the [Update Existing Import](https://developer.github.com/v3/migrations/source_imports/#update-existing-import) section.\n*   `error` - the import encountered an error. The import progress response will include the `failed_step` and an error message. Contact [GitHub Support](https://github.com/contact) for more information.\n*   `detection_needs_auth` - the importer requires authentication for the originating repository to continue detection. To update authentication for the import, please see the [Update Existing Import](https://developer.github.com/v3/migrations/source_imports/#update-existing-import) section.\n*   `detection_found_nothing` - the importer didn't recognize any source control at the URL. To resolve, [Cancel the import](https://developer.github.com/v3/migrations/source_imports/#cancel-an-import) and [retry](https://developer.github.com/v3/migrations/source_imports/#start-an-import) with the correct URL.\n*   `detection_found_multiple` - the importer found several projects or repositories at the provided URL. When this is the case, the Import Progress response will also include a `project_choices` field with the possible project choices as values. To update project choice, please see the [Update Existing Import](https://developer.github.com/v3/migrations/source_imports/#update-existing-import) section.\n\n**The project_choices field**\n\nWhen multiple projects are found at the provided URL, the response hash will include a `project_choices` field, the value of which is an array of hashes each representing a project choice. The exact key/value pairs of the project hashes will differ depending on the version control type.\n\n**Git LFS related fields**\n\nThis section includes details about Git LFS related fields that may be present in the Import Progress response.\n\n*   `use_lfs` - describes whether the import has been opted in or out of using Git LFS. The value can be `opt_in`, `opt_out`, or `undecided` if no action has been taken.\n*   `has_large_files` - the boolean value describing whether files larger than 100MB were found during the `importing` step.\n*   `large_files_size` - the total size in gigabytes of files larger than 100MB found in the originating repository.\n*   `large_files_count` - the total number of files larger than 100MB found in the originating repository. To see a list of these files, make a \"Get Large Files\" request.","example":"octokit.migrations.getImportProgress({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/migrations/source_imports/#get-import-progress","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-migrations-update-import","name":"Update existing import","description":"An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API request. If no parameters are provided, the import will be restarted.\n\nSome servers (e.g. TFS servers) can have several projects at a single URL. In those cases the import progress will have the status `detection_found_multiple` and the Import Progress response will include a `project_choices` array. You can select the project to import by providing one of the objects in the `project_choices` array in the update request.\n\nThe following example demonstrates the workflow for updating an import with \"project1\" as the project choice. Given a `project_choices` array like such:\n\nTo restart an import, no parameters are provided in the update request.","example":"octokit.migrations.updateImport({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/migrations/source_imports/#update-existing-import","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"vcs_username","required":false,"description":"The username to provide to the originating repository."},{"name":"vcs_password","required":false,"description":"The password to provide to the originating repository."}]},{"id":"octokit-routes-migrations-get-commit-authors","name":"Get commit authors","description":"Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username `hubot` into something like `hubot <hubot@12341234-abab-fefe-8787-fedcba987654>`.\n\nThis API method and the \"Map a commit author\" method allow you to provide correct Git author information.","example":"octokit.migrations.getCommitAuthors({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/migrations/source_imports/#get-commit-authors","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"since","required":false,"description":"Only authors found after this id are returned. Provide the highest author ID you've seen so far. New authors may be added to the list at any point while the importer is performing the `raw` step."}]},{"id":"octokit-routes-migrations-map-commit-author","name":"Map a commit author","description":"Update an author's identity for the import. Your application can continue updating authors any time before you push new commits to the repository.","example":"octokit.migrations.mapCommitAuthor({\n  owner,\n  repo,\n  author_id\n})","documentationUrl":"https://developer.github.com/v3/migrations/source_imports/#map-a-commit-author","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"author_id","required":true,"description":""},{"name":"email","required":false,"description":"The new Git author email."},{"name":"name","required":false,"description":"The new Git author name."}]},{"id":"octokit-routes-migrations-set-lfs-preference","name":"Set Git LFS preference","description":"You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is powered by [Git LFS](https://git-lfs.github.com). You can learn more about our LFS feature and working with large files [on our help site](https://help.github.com/articles/versioning-large-files/).","example":"octokit.migrations.setLfsPreference({\n  owner,\n  repo,\n  use_lfs\n})","documentationUrl":"https://developer.github.com/v3/migrations/source_imports/#set-git-lfs-preference","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"use_lfs","required":true,"description":"Can be one of `opt_in` (large files will be stored using Git LFS) or `opt_out` (large files will be removed during the import)."}]},{"id":"octokit-routes-migrations-get-large-files","name":"Get large files","description":"List files larger than 100MB found during the import","example":"octokit.migrations.getLargeFiles({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/migrations/source_imports/#get-large-files","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-migrations-cancel-import","name":"Cancel an import","description":"Stop an import for a repository.","example":"octokit.migrations.cancelImport({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/migrations/source_imports/#cancel-an-import","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-migrations-start-for-authenticated-user","name":"Start a user migration","description":"Initiates the generation of a user migration archive.","example":"octokit.migrations.startForAuthenticatedUser({\n  repositories\n})","documentationUrl":"https://developer.github.com/v3/migrations/users/#start-a-user-migration","params":[{"name":"repositories","required":true,"description":"An array of repositories to include in the migration."},{"name":"lock_repositories","required":false,"description":"Locks the `repositories` to prevent changes during the migration when set to `true`."},{"name":"exclude_attachments","required":false,"description":"Does not include attachments uploaded to GitHub.com in the migration data when set to `true`. Excluding attachments will reduce the migration archive file size."}]},{"id":"octokit-routes-migrations-list-for-authenticated-user","name":"Get a list of user migrations","description":"Lists all migrations a user has started.","example":"octokit.migrations.listForAuthenticatedUser()","documentationUrl":"https://developer.github.com/v3/migrations/users/#get-a-list-of-user-migrations","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-migrations-get-status-for-authenticated-user","name":"Get the status of a user migration","description":"Fetches a single user migration. The response includes the `state` of the migration, which can be one of the following values:\n\n*   `pending` - the migration hasn't started yet.\n*   `exporting` - the migration is in progress.\n*   `exported` - the migration finished successfully.\n*   `failed` - the migration failed.\n\nOnce the migration has been `exported` you can [download the migration archive](https://developer.github.com/v3/migrations/users/#download-a-user-migration-archive).","example":"octokit.migrations.getStatusForAuthenticatedUser({\n  migration_id\n})","documentationUrl":"https://developer.github.com/v3/migrations/users/#get-the-status-of-a-user-migration","params":[{"name":"migration_id","required":true,"description":""}]},{"id":"octokit-routes-migrations-get-archive-for-authenticated-user","name":"Download a user migration archive","description":"Fetches the URL to download the migration archive as a `tar.gz` file. Depending on the resources your repository uses, the migration archive can contain JSON files with data for these objects:\n\n*   attachments\n*   bases\n*   commit\\_comments\n*   issue\\_comments\n*   issue\\_events\n*   issues\n*   milestones\n*   organizations\n*   projects\n*   protected\\_branches\n*   pull\\_request\\_reviews\n*   pull\\_requests\n*   releases\n*   repositories\n*   review\\_comments\n*   schema\n*   users\n\nThe archive will also contain an `attachments` directory that includes all attachment files uploaded to GitHub.com and a `repositories` directory that contains the repository's Git data.\n\n","example":"octokit.migrations.getArchiveForAuthenticatedUser({\n  migration_id\n})","documentationUrl":"https://developer.github.com/v3/migrations/users/#download-a-user-migration-archive","params":[{"name":"migration_id","required":true,"description":""}]},{"id":"octokit-routes-migrations-delete-archive-for-authenticated-user","name":"Delete a user migration archive","description":"Deletes a previous migration archive. Downloadable migration archives are automatically deleted after seven days. Migration metadata, which is returned in the [Get a list of user migrations](https://developer.github.com/v3/migrations/users/#get-a-list-of-user-migrations) and [Get the status of a user migration](https://developer.github.com/v3/migrations/users/#get-the-status-of-a-user-migration) endpoints, will continue to be available even after an archive is deleted.","example":"octokit.migrations.deleteArchiveForAuthenticatedUser({\n  migration_id\n})","documentationUrl":"https://developer.github.com/v3/migrations/users/#delete-a-user-migration-archive","params":[{"name":"migration_id","required":true,"description":""}]},{"id":"octokit-routes-migrations-unlock-repo-for-authenticated-user","name":"Unlock a user repository","description":"Unlocks a repository. You can lock repositories when you [start a user migration](https://developer.github.com/v3/migrations/users/#start-a-user-migration). Once the migration is complete you can unlock each repository to begin using it again or [delete the repository](https://developer.github.com/v3/repos/#delete-a-repository) if you no longer need the source data. Returns a status of `404 Not Found` if the repository is not locked.","example":"octokit.migrations.unlockRepoForAuthenticatedUser({\n  migration_id,\n  repo_name\n})","documentationUrl":"https://developer.github.com/v3/migrations/users/#unlock-a-user-repository","params":[{"name":"migration_id","required":true,"description":""},{"name":"repo_name","required":true,"description":""}]}]}},{"node":{"id":"octokit-routes-oauthAuthorizations","name":"oauthAuthorizations","methods":[{"id":"octokit-routes-oauthAuthorizations-list-grants","name":"List your grants","description":"You can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://developer.github.com/v3/oauth_authorizations/#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`.","example":"octokit.oauthAuthorizations.listGrants()","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#list-your-grants","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-oauthAuthorizations-get-grant","name":"Get a single grant","description":"","example":"octokit.oauthAuthorizations.getGrant({\n  grant_id\n})","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#get-a-single-grant","params":[{"name":"grant_id","required":true,"description":""}]},{"id":"octokit-routes-oauthAuthorizations-delete-grant","name":"Delete a grant","description":"Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).","example":"octokit.oauthAuthorizations.deleteGrant({\n  grant_id\n})","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#delete-a-grant","params":[{"name":"grant_id","required":true,"description":""}]},{"id":"octokit-routes-oauthAuthorizations-list-authorizations","name":"List your authorizations","description":"","example":"octokit.oauthAuthorizations.listAuthorizations()","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#list-your-authorizations","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-oauthAuthorizations-get-authorization","name":"Get a single authorization","description":"","example":"octokit.oauthAuthorizations.getAuthorization({\n  authorization_id\n})","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#get-a-single-authorization","params":[{"name":"authorization_id","required":true,"description":""}]},{"id":"octokit-routes-oauthAuthorizations-create-authorization","name":"Create a new authorization","description":"Creates OAuth tokens using [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"\n\nYou can use this endpoint to create multiple OAuth tokens instead of implementing the [web flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/).\n\nTo create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.\n\nYou can also create tokens on GitHub from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://help.github.com/articles/creating-an-access-token-for-command-line-use).\n\nOrganizations that enforce SAML SSO require personal access tokens to be whitelisted. Read more about whitelisting tokens in [the GitHub Help documentation](https://help.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on).","example":"octokit.oauthAuthorizations.createAuthorization({\n  note\n})","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization","params":[{"name":"scopes","required":false,"description":"A list of scopes that this authorization is in."},{"name":"note","required":true,"description":"A note to remind you what the OAuth token is for. Tokens not associated with a specific OAuth application (i.e. personal access tokens) must have a unique note."},{"name":"note_url","required":false,"description":"A URL to remind you what app the OAuth token is for."},{"name":"client_id","required":false,"description":"The 20 character OAuth app client key for which to create the token."},{"name":"client_secret","required":false,"description":"The 40 character OAuth app client secret for which to create the token."},{"name":"fingerprint","required":false,"description":"A unique string to distinguish an authorization from others created for the same client ID and user."}]},{"id":"octokit-routes-oauthAuthorizations-get-or-create-authorization-for-app","name":"Get-or-create an authorization for a specific app","description":"Creates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"","example":"octokit.oauthAuthorizations.getOrCreateAuthorizationForApp({\n  client_id,\n  client_secret\n})","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app","params":[{"name":"client_id","required":true,"description":""},{"name":"client_secret","required":true,"description":"The 40 character OAuth app client secret associated with the client ID specified in the URL."},{"name":"scopes","required":false,"description":"A list of scopes that this authorization is in."},{"name":"note","required":false,"description":"A note to remind you what the OAuth token is for."},{"name":"note_url","required":false,"description":"A URL to remind you what app the OAuth token is for."},{"name":"fingerprint","required":false,"description":"A unique string to distinguish an authorization from others created for the same client and user. If provided, this API is functionally equivalent to [Get-or-create an authorization for a specific app and fingerprint](https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint)."}]},{"id":"octokit-routes-oauthAuthorizations-get-or-create-authorization-for-app-and-fingerprint","name":"Get-or-create an authorization for a specific app and fingerprint","description":"This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"","example":"octokit.oauthAuthorizations.getOrCreateAuthorizationForAppAndFingerprint({\n  client_id,\n  fingerprint,\n  client_secret\n})","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint","params":[{"name":"client_id","required":true,"description":""},{"name":"fingerprint","required":true,"description":""},{"name":"client_secret","required":true,"description":"The 40 character OAuth app client secret associated with the client ID specified in the URL."},{"name":"scopes","required":false,"description":"A list of scopes that this authorization is in."},{"name":"note","required":false,"description":"A note to remind you what the OAuth token is for."},{"name":"note_url","required":false,"description":"A URL to remind you what app the OAuth token is for."}]},{"id":"octokit-routes-oauthAuthorizations-get-or-create-authorization-for-app-fingerprint","name":"Get-or-create an authorization for a specific app and fingerprint","description":"This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"","example":"octokit.oauthAuthorizations.getOrCreateAuthorizationForAppFingerprint({\n  client_id,\n  fingerprint,\n  client_secret\n})","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint","params":[{"name":"client_id","required":true,"description":""},{"name":"fingerprint","required":true,"description":""},{"name":"client_secret","required":true,"description":"The 40 character OAuth app client secret associated with the client ID specified in the URL."},{"name":"scopes","required":false,"description":"A list of scopes that this authorization is in."},{"name":"note","required":false,"description":"A note to remind you what the OAuth token is for."},{"name":"note_url","required":false,"description":"A URL to remind you what app the OAuth token is for."}]},{"id":"octokit-routes-oauthAuthorizations-update-authorization","name":"Update an existing authorization","description":"If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Woking with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"\n\nYou can only send one of these scope keys at a time.","example":"octokit.oauthAuthorizations.updateAuthorization({\n  authorization_id\n})","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#update-an-existing-authorization","params":[{"name":"authorization_id","required":true,"description":""},{"name":"scopes","required":false,"description":"Replaces the authorization scopes with these."},{"name":"add_scopes","required":false,"description":"A list of scopes to add to this authorization."},{"name":"remove_scopes","required":false,"description":"A list of scopes to remove from this authorization."},{"name":"note","required":false,"description":"A note to remind you what the OAuth token is for. Tokens not associated with a specific OAuth application (i.e. personal access tokens) must have a unique note."},{"name":"note_url","required":false,"description":"A URL to remind you what app the OAuth token is for."},{"name":"fingerprint","required":false,"description":"A unique string to distinguish an authorization from others created for the same client ID and user."}]},{"id":"octokit-routes-oauthAuthorizations-delete-authorization","name":"Delete an authorization","description":"","example":"octokit.oauthAuthorizations.deleteAuthorization({\n  authorization_id\n})","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#delete-an-authorization","params":[{"name":"authorization_id","required":true,"description":""}]},{"id":"octokit-routes-oauthAuthorizations-check-authorization","name":"Check an authorization","description":"OAuth applications can use a special API method for checking OAuth token validity without running afoul of normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing it, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.","example":"octokit.oauthAuthorizations.checkAuthorization({\n  client_id,\n  access_token\n})","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#check-an-authorization","params":[{"name":"client_id","required":true,"description":""},{"name":"access_token","required":true,"description":""}]},{"id":"octokit-routes-oauthAuthorizations-reset-authorization","name":"Reset an authorization","description":"OAuth applications can use this API method to reset a valid OAuth token without end user involvement. Applications must save the \"token\" property in the response, because changes take effect immediately. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing it, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.","example":"octokit.oauthAuthorizations.resetAuthorization({\n  client_id,\n  access_token\n})","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#reset-an-authorization","params":[{"name":"client_id","required":true,"description":""},{"name":"access_token","required":true,"description":""}]},{"id":"octokit-routes-oauthAuthorizations-revoke-authorization-for-application","name":"Revoke an authorization for an application","description":"OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) for this method, where the username is the OAuth application `client_id` and the password is its `client_secret`.","example":"octokit.oauthAuthorizations.revokeAuthorizationForApplication({\n  client_id,\n  access_token\n})","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#revoke-an-authorization-for-an-application","params":[{"name":"client_id","required":true,"description":""},{"name":"access_token","required":true,"description":""}]},{"id":"octokit-routes-oauthAuthorizations-revoke-grant-for-application","name":"Revoke a grant for an application","description":"OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) for this method, where the username is the OAuth application `client_id` and the password is its `client_secret`. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).","example":"octokit.oauthAuthorizations.revokeGrantForApplication({\n  client_id,\n  access_token\n})","documentationUrl":"https://developer.github.com/v3/oauth_authorizations/#revoke-a-grant-for-an-application","params":[{"name":"client_id","required":true,"description":""},{"name":"access_token","required":true,"description":""}]}]}},{"node":{"id":"octokit-routes-orgs","name":"orgs","methods":[{"id":"octokit-routes-orgs-list-for-authenticated-user","name":"List your organizations","description":"List organizations for the authenticated user.\n\n**OAuth scope requirements**\n\nThis only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with `read:org` scope, you can publicize your organization membership with `user` scope, etc.). Therefore, this API requires at least `user` or `read:org` scope. OAuth requests with insufficient scope receive a `403 Forbidden` response.","example":"octokit.orgs.listForAuthenticatedUser()","documentationUrl":"https://developer.github.com/v3/orgs/#list-your-organizations","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-orgs-list","name":"List all organizations","description":"Lists all organizations, in the order that they were created on GitHub.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of organizations.","example":"octokit.orgs.list()","documentationUrl":"https://developer.github.com/v3/orgs/#list-all-organizations","params":[{"name":"since","required":false,"description":"The integer ID of the last Organization that you've seen."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-orgs-list-for-user","name":"List user organizations","description":"List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\nThis method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List your organizations](https://developer.github.com/v3/orgs/#list-your-organizations) API instead.","example":"octokit.orgs.listForUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/#list-user-organizations","params":[{"name":"username","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-orgs-get","name":"Get an organization","description":"To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\nGitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub plan. See \"[Authenticating with GitHub Apps](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see \"[Response with GitHub plan information](https://developer.github.com/v3/orgs/#response-with-github-plan-information).\"","example":"octokit.orgs.get({\n  org\n})","documentationUrl":"https://developer.github.com/v3/orgs/#get-an-organization","params":[{"name":"org","required":true,"description":""}]},{"id":"octokit-routes-orgs-update","name":"Edit an organization","description":"**Note:** The new `members_allowed_repository_creation_type` replaces the functionality of `members_can_create_repositories`.\n\nSetting `members_allowed_repository_creation_type` will override the value of `members_can_create_repositories` in the following ways:\n\n*   Setting `members_allowed_repository_creation_type` to `all` or `private` sets `members_can_create_repositories` to `true`.\n*   Setting `members_allowed_repository_creation_type` to `none` sets `members_can_create_repositories` to `false`.\n*   If you omit `members_allowed_repository_creation_type`, `members_can_create_repositories` is not modified.","example":"octokit.orgs.update({\n  org\n})","documentationUrl":"https://developer.github.com/v3/orgs/#edit-an-organization","params":[{"name":"org","required":true,"description":""},{"name":"billing_email","required":false,"description":"Billing email address. This address is not publicized."},{"name":"company","required":false,"description":"The company name."},{"name":"email","required":false,"description":"The publicly visible email address."},{"name":"location","required":false,"description":"The location."},{"name":"name","required":false,"description":"The shorthand name of the company."},{"name":"description","required":false,"description":"The description of the company."},{"name":"has_organization_projects","required":false,"description":"Toggles whether organization projects are enabled for the organization."},{"name":"has_repository_projects","required":false,"description":"Toggles whether repository projects are enabled for repositories that belong to the organization."},{"name":"default_repository_permission","required":false,"description":"Default permission level members have for organization repositories:  \n\\* `read` - can pull, but not push to or administer this repository.  \n\\* `write` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push, and administer this repository.  \n\\* `none` - no permissions granted by default."},{"name":"members_can_create_repositories","required":false,"description":"Toggles the ability of non-admin organization members to create repositories. Can be one of:  \n\\* `true` - all organization members can create repositories.  \n\\* `false` - only admin members can create repositories.  \nDefault: `true`  \n**Note:** Another parameter can override the this parameter. See [this note](https://developer.github.com/v3/orgs/#members_can_create_repositories) for details. **Note:** Another parameter can override the this parameter. See [this note](https://developer.github.com/v3/orgs/#members_can_create_repositories) for details."},{"name":"members_allowed_repository_creation_type","required":false,"description":"Specifies which types of repositories non-admin organization members can create. Can be one of:  \n\\* `all` - all organization members can create public and private repositories.  \n\\* `private` - members can create private repositories. This option is only available to repositories that are part of an organization on [GitHub Business Cloud](https://github.com/pricing/business-cloud).  \n\\* `none` - only admin members can create repositories.  \n**Note:** Using this parameter will override values set in `members_can_create_repositories`. See [this note](https://developer.github.com/v3/orgs/#members_can_create_repositories) for details."}]},{"id":"octokit-routes-orgs-list-credential-authorizations","name":"List credential authorizations for an organization","description":"Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nAn authenticated organization owner with the `read:org` scope can list all credential authorizations for an organization that uses SAML single sign-on (SSO). The credentials are either personal access tokens or SSH keys that organization members have authorized for the organization. For more information, see [About authentication with SAML single sign-on](https://help.github.com/en/articles/about-authentication-with-saml-single-sign-on).","example":"octokit.orgs.listCredentialAuthorizations({\n  org\n})","documentationUrl":"https://developer.github.com/v3/orgs/#list-credential-authorizations-for-an-organization","params":[{"name":"org","required":true,"description":""}]},{"id":"octokit-routes-orgs-remove-credential-authorization","name":"Remove a credential authorization for an organization","description":"Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nAn authenticated organization owner with the `admin:org` scope can remove a credential authorization for an organization that uses SAML SSO. Once you remove someone's credential authorization, they will need to create a new personal access token or SSH key and authorize it for the organization they want to access.","example":"octokit.orgs.removeCredentialAuthorization({\n  org,\n  credential_id\n})","documentationUrl":"https://developer.github.com/v3/orgs/#remove-a-credential-authorization-for-an-organization","params":[{"name":"org","required":true,"description":""},{"name":"credential_id","required":true,"description":""}]},{"id":"octokit-routes-orgs-list-blocked-users","name":"List blocked users","description":"List the users blocked by an organization.","example":"octokit.orgs.listBlockedUsers({\n  org\n})","documentationUrl":"https://developer.github.com/v3/orgs/blocking/#list-blocked-users","params":[{"name":"org","required":true,"description":""}]},{"id":"octokit-routes-orgs-check-blocked-user","name":"Check whether a user is blocked from an organization","description":"If the user is blocked:\n\nIf the user is not blocked:","example":"octokit.orgs.checkBlockedUser({\n  org,\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/blocking/#check-whether-a-user-is-blocked-from-an-organization","params":[{"name":"org","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-orgs-block-user","name":"Block a user","description":"","example":"octokit.orgs.blockUser({\n  org,\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/blocking/#block-a-user","params":[{"name":"org","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-orgs-unblock-user","name":"Unblock a user","description":"","example":"octokit.orgs.unblockUser({\n  org,\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/blocking/#unblock-a-user","params":[{"name":"org","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-orgs-list-hooks","name":"List hooks","description":"","example":"octokit.orgs.listHooks({\n  org\n})","documentationUrl":"https://developer.github.com/v3/orgs/hooks/#list-hooks","params":[{"name":"org","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-orgs-get-hook","name":"Get single hook","description":"","example":"octokit.orgs.getHook({\n  org,\n  hook_id\n})","documentationUrl":"https://developer.github.com/v3/orgs/hooks/#get-single-hook","params":[{"name":"org","required":true,"description":""},{"name":"hook_id","required":true,"description":""}]},{"id":"octokit-routes-orgs-create-hook","name":"Create a hook","description":"Here's how you can create a hook that posts payloads in JSON format:","example":"octokit.orgs.createHook({\n  org,\n  name,\n  config\n})","documentationUrl":"https://developer.github.com/v3/orgs/hooks/#create-a-hook","params":[{"name":"org","required":true,"description":""},{"name":"name","required":true,"description":"Must be passed as \"web\"."},{"name":"config","required":true,"description":"Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/v3/orgs/hooks/#create-hook-config-params)."},{"name":"config.url","required":true,"description":"The URL to which the payloads will be delivered."},{"name":"config.content_type","required":false,"description":"The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`."},{"name":"config.secret","required":false,"description":"If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/webhooks/#delivery-headers) header."},{"name":"config.insecure_ssl","required":false,"description":"Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**"},{"name":"events","required":false,"description":"Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for."},{"name":"active","required":false,"description":"Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications."}]},{"id":"octokit-routes-orgs-update-hook","name":"Edit a hook","description":"","example":"octokit.orgs.updateHook({\n  org,\n  hook_id\n})","documentationUrl":"https://developer.github.com/v3/orgs/hooks/#edit-a-hook","params":[{"name":"org","required":true,"description":""},{"name":"hook_id","required":true,"description":""},{"name":"config","required":false,"description":"Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/v3/orgs/hooks/#update-hook-config-params)."},{"name":"config.url","required":true,"description":"The URL to which the payloads will be delivered."},{"name":"config.content_type","required":false,"description":"The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`."},{"name":"config.secret","required":false,"description":"If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/webhooks/#delivery-headers) header."},{"name":"config.insecure_ssl","required":false,"description":"Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**"},{"name":"events","required":false,"description":"Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for."},{"name":"active","required":false,"description":"Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications."}]},{"id":"octokit-routes-orgs-ping-hook","name":"Ping a hook","description":"This will trigger a [ping event](https://developer.github.com/webhooks/#ping-event) to be sent to the hook.","example":"octokit.orgs.pingHook({\n  org,\n  hook_id\n})","documentationUrl":"https://developer.github.com/v3/orgs/hooks/#ping-a-hook","params":[{"name":"org","required":true,"description":""},{"name":"hook_id","required":true,"description":""}]},{"id":"octokit-routes-orgs-delete-hook","name":"Delete a hook","description":"","example":"octokit.orgs.deleteHook({\n  org,\n  hook_id\n})","documentationUrl":"https://developer.github.com/v3/orgs/hooks/#delete-a-hook","params":[{"name":"org","required":true,"description":""},{"name":"hook_id","required":true,"description":""}]},{"id":"octokit-routes-orgs-list-members","name":"Members list","description":"List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned.\n\n","example":"octokit.orgs.listMembers({\n  org\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#members-list","params":[{"name":"org","required":true,"description":""},{"name":"filter","required":false,"description":"Filter members returned in the list. Can be one of:  \n\\* `2fa_disabled` - Members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled. Available for organization owners.  \n\\* `all` - All members the authenticated user can see."},{"name":"role","required":false,"description":"Filter members returned by their role. Can be one of:  \n\\* `all` - All members of the organization, regardless of role.  \n\\* `admin` - Organization owners.  \n\\* `member` - Non-owner organization members."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-orgs-check-membership","name":"Check membership","description":"Check if a user is, publicly or privately, a member of the organization.","example":"octokit.orgs.checkMembership({\n  org,\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#check-membership","params":[{"name":"org","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-orgs-remove-member","name":"Remove a member","description":"Removing a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories.","example":"octokit.orgs.removeMember({\n  org,\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#remove-a-member","params":[{"name":"org","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-orgs-list-public-members","name":"Public members list","description":"Members of an organization can choose to have their membership publicized or not.","example":"octokit.orgs.listPublicMembers({\n  org\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#public-members-list","params":[{"name":"org","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-orgs-check-public-membership","name":"Check public membership","description":"","example":"octokit.orgs.checkPublicMembership({\n  org,\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#check-public-membership","params":[{"name":"org","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-orgs-publicize-membership","name":"Publicize a user's membership","description":"The user can publicize their own membership. (A user cannot publicize the membership for another user.)\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"","example":"octokit.orgs.publicizeMembership({\n  org,\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#publicize-a-users-membership","params":[{"name":"org","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-orgs-conceal-membership","name":"Conceal a user's membership","description":"","example":"octokit.orgs.concealMembership({\n  org,\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#conceal-a-users-membership","params":[{"name":"org","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-orgs-get-membership","name":"Get organization membership","description":"In order to get a user's membership with an organization, the authenticated user must be an organization member.","example":"octokit.orgs.getMembership({\n  org,\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#get-organization-membership","params":[{"name":"org","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-orgs-add-or-update-membership","name":"Add or update organization membership","description":"Only authenticated organization owners can add a member to the organization or update the member's role.\n\n*   If the authenticated user is _adding_ a member to the organization, the invited user will receive an email inviting them to the organization. The user's [membership status](https://developer.github.com/v3/orgs/members/#get-organization-membership) will be `pending` until they accept the invitation.\n    \n*   Authenticated users can _update_ a user's membership by passing the `role` parameter. If the authenticated user changes a member's role to `admin`, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to `member`, no email will be sent.\n\n**Rate limits**\n\nTo prevent abuse, the authenticated user is limited to 50 organization invitations per 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period.","example":"octokit.orgs.addOrUpdateMembership({\n  org,\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#add-or-update-organization-membership","params":[{"name":"org","required":true,"description":""},{"name":"username","required":true,"description":""},{"name":"role","required":false,"description":"The role to give the user in the organization. Can be one of:  \n\\* `admin` - The user will become an owner of the organization.  \n\\* `member` - The user will become a non-owner member of the organization."}]},{"id":"octokit-routes-orgs-remove-membership","name":"Remove organization membership","description":"In order to remove a user's membership with an organization, the authenticated user must be an organization owner.\n\nIf the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.","example":"octokit.orgs.removeMembership({\n  org,\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#remove-organization-membership","params":[{"name":"org","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-orgs-list-invitation-teams","name":"List organization invitation teams","description":"List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner.","example":"octokit.orgs.listInvitationTeams({\n  org,\n  invitation_id\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#list-organization-invitation-teams","params":[{"name":"org","required":true,"description":""},{"name":"invitation_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-orgs-list-pending-invitations","name":"List pending organization invitations","description":"The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.","example":"octokit.orgs.listPendingInvitations({\n  org\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#list-pending-organization-invitations","params":[{"name":"org","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-orgs-create-invitation","name":"Create organization invitation","description":"Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.","example":"octokit.orgs.createInvitation({\n  org\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#create-organization-invitation","params":[{"name":"org","required":true,"description":""},{"name":"invitee_id","required":false,"description":"**Required unless you provide `email`**. GitHub user ID for the person you are inviting."},{"name":"email","required":false,"description":"**Required unless you provide `invitee_id`**. Email address of the person you are inviting, which can be an existing GitHub user."},{"name":"role","required":false,"description":"Specify role for new member. Can be one of:  \n\\* `admin` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.  \n\\* `direct_member` - Non-owner organization members with ability to see other members and join teams by invitation.  \n\\* `billing_manager` - Non-owner organization members with ability to manage the billing settings of your organization."},{"name":"team_ids","required":false,"description":"Specify IDs for the teams you want to invite new members to."}]},{"id":"octokit-routes-orgs-list-memberships","name":"List your organization memberships","description":"","example":"octokit.orgs.listMemberships()","documentationUrl":"https://developer.github.com/v3/orgs/members/#list-your-organization-memberships","params":[{"name":"state","required":false,"description":"Indicates the state of the memberships to return. Can be either `active` or `pending`. If not specified, the API returns both active and pending memberships."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-orgs-get-membership-for-authenticated-user","name":"Get your organization membership","description":"","example":"octokit.orgs.getMembershipForAuthenticatedUser({\n  org\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#get-your-organization-membership","params":[{"name":"org","required":true,"description":""}]},{"id":"octokit-routes-orgs-update-membership","name":"Edit your organization membership","description":"","example":"octokit.orgs.updateMembership({\n  org,\n  state\n})","documentationUrl":"https://developer.github.com/v3/orgs/members/#edit-your-organization-membership","params":[{"name":"org","required":true,"description":""},{"name":"state","required":true,"description":"The state that the membership should be in. Only `\"active\"` will be accepted."}]},{"id":"octokit-routes-orgs-list-outside-collaborators","name":"List outside collaborators","description":"List all users who are outside collaborators of an organization.\n\n","example":"octokit.orgs.listOutsideCollaborators({\n  org\n})","documentationUrl":"https://developer.github.com/v3/orgs/outside_collaborators/#list-outside-collaborators","params":[{"name":"org","required":true,"description":""},{"name":"filter","required":false,"description":"Filter the list of outside collaborators. Can be one of:  \n\\* `2fa_disabled`: Outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled.  \n\\* `all`: All outside collaborators."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-orgs-remove-outside-collaborator","name":"Remove outside collaborator","description":"Removing a user from this list will remove them from all the organization's repositories.","example":"octokit.orgs.removeOutsideCollaborator({\n  org,\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator","params":[{"name":"org","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-orgs-convert-member-to-outside-collaborator","name":"Convert member to outside collaborator","description":"When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"[Converting an organization member to an outside collaborator](https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)\".","example":"octokit.orgs.convertMemberToOutsideCollaborator({\n  org,\n  username\n})","documentationUrl":"https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator","params":[{"name":"org","required":true,"description":""},{"name":"username","required":true,"description":""}]}]}},{"node":{"id":"octokit-routes-projects","name":"projects","methods":[{"id":"octokit-routes-projects-list-for-repo","name":"List repository projects","description":"Lists the projects in a repository. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.","example":"octokit.projects.listForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/projects/#list-repository-projects","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"state","required":false,"description":"Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-projects-list-for-org","name":"List organization projects","description":"Lists the projects in an organization. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\ns","example":"octokit.projects.listForOrg({\n  org\n})","documentationUrl":"https://developer.github.com/v3/projects/#list-organization-projects","params":[{"name":"org","required":true,"description":""},{"name":"state","required":false,"description":"Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-projects-list-for-user","name":"List user projects","description":"","example":"octokit.projects.listForUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/projects/#list-user-projects","params":[{"name":"username","required":true,"description":""},{"name":"state","required":false,"description":"Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-projects-get","name":"Get a project","description":"Gets a project by its `id`. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.","example":"octokit.projects.get({\n  project_id\n})","documentationUrl":"https://developer.github.com/v3/projects/#get-a-project","params":[{"name":"project_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-projects-create-for-repo","name":"Create a repository project","description":"Creates a repository project board. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.","example":"octokit.projects.createForRepo({\n  owner,\n  repo,\n  name\n})","documentationUrl":"https://developer.github.com/v3/projects/#create-a-repository-project","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"name","required":true,"description":"The name of the project."},{"name":"body","required":false,"description":"The description of the project."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-projects-create-for-org","name":"Create an organization project","description":"Creates an organization project board. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.","example":"octokit.projects.createForOrg({\n  org,\n  name\n})","documentationUrl":"https://developer.github.com/v3/projects/#create-an-organization-project","params":[{"name":"org","required":true,"description":""},{"name":"name","required":true,"description":"The name of the project."},{"name":"body","required":false,"description":"The description of the project."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-projects-create-for-authenticated-user","name":"Create a user project","description":"","example":"octokit.projects.createForAuthenticatedUser({\n  name\n})","documentationUrl":"https://developer.github.com/v3/projects/#create-a-user-project","params":[{"name":"name","required":true,"description":"The name of the project."},{"name":"body","required":false,"description":"The description of the project."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-projects-update","name":"Update a project","description":"Updates a project board's information. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.","example":"octokit.projects.update({\n  project_id\n})","documentationUrl":"https://developer.github.com/v3/projects/#update-a-project","params":[{"name":"project_id","required":true,"description":""},{"name":"name","required":false,"description":"The name of the project."},{"name":"body","required":false,"description":"The description of the project."},{"name":"state","required":false,"description":"State of the project. Either `open` or `closed`."},{"name":"organization_permission","required":false,"description":"The permission level that determines whether all members of the project's organization can see and/or make changes to the project. Setting `organization_permission` is only available for organization projects. If an organization member belongs to a team with a higher level of access or is a collaborator with a higher level of access, their permission level is not lowered by `organization_permission`. For information on changing access for a team or collaborator, see [Add or update team project](https://developer.github.com/v3/teams/#add-or-update-team-project) or [Add user as a collaborator](https://developer.github.com/v3/projects/collaborators/#add-user-as-a-collaborator).  \n  \n**Note:** Updating a project's `organization_permission` requires `admin` access to the project.  \n  \nCan be one of:  \n\\* `read` - Organization members can read, but not write to or administer this project.  \n\\* `write` - Organization members can read and write, but not administer this project.  \n\\* `admin` - Organization members can read, write and administer this project.  \n\\* `none` - Organization members can only see this project if it is public."},{"name":"private","required":false,"description":"Sets the visibility of a project board. Setting `private` is only available for organization and user projects. **Note:** Updating a project's visibility requires `admin` access to the project.  \n  \nCan be one of:  \n\\* `false` - Anyone can see the project.  \n\\* `true` - Only the user can view a project board created on a user account. Organization members with the appropriate `organization_permission` can see project boards in an organization account."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-projects-delete","name":"Delete a project","description":"Deletes a project board. Returns a `404 Not Found` status if projects are disabled.","example":"octokit.projects.delete({\n  project_id\n})","documentationUrl":"https://developer.github.com/v3/projects/#delete-a-project","params":[{"name":"project_id","required":true,"description":""}]},{"id":"octokit-routes-projects-list-cards","name":"List project cards","description":"","example":"octokit.projects.listCards({\n  column_id\n})","documentationUrl":"https://developer.github.com/v3/projects/cards/#list-project-cards","params":[{"name":"column_id","required":true,"description":""},{"name":"archived_state","required":false,"description":"Filters the project cards that are returned by the card's state. Can be one of `all`,`archived`, or `not_archived`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-projects-get-card","name":"Get a project card","description":"","example":"octokit.projects.getCard({\n  card_id\n})","documentationUrl":"https://developer.github.com/v3/projects/cards/#get-a-project-card","params":[{"name":"card_id","required":true,"description":""}]},{"id":"octokit-routes-projects-create-card","name":"Create a project card","description":"**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint.","example":"octokit.projects.createCard({\n  column_id\n})","documentationUrl":"https://developer.github.com/v3/projects/cards/#create-a-project-card","params":[{"name":"column_id","required":true,"description":""},{"name":"note","required":false,"description":"The card's note content. Only valid for cards without another type of content, so you must omit when specifying `content_id` and `content_type`."},{"name":"content_id","required":false,"description":"The issue or pull request id you want to associate with this card. You can use the [List issues for a repository](https://developer.github.com/v3/issues/#list-issues-for-a-repository) and [List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests) endpoints to find this id.  \n**Note:** Depending on whether you use the issue id or pull request id, you will need to specify `Issue` or `PullRequest` as the `content_type`."},{"name":"content_type","required":false,"description":"**Required if you provide `content_id`**. The type of content you want to associate with this card. Use `Issue` when `content_id` is an issue id and use `PullRequest` when `content_id` is a pull request id."}]},{"id":"octokit-routes-projects-update-card","name":"Update a project card","description":"","example":"octokit.projects.updateCard({\n  card_id\n})","documentationUrl":"https://developer.github.com/v3/projects/cards/#update-a-project-card","params":[{"name":"card_id","required":true,"description":""},{"name":"note","required":false,"description":"The card's note content. Only valid for cards without another type of content, so this cannot be specified if the card already has a `content_id` and `content_type`."},{"name":"archived","required":false,"description":"Use `true` to archive a project card. Specify `false` if you need to restore a previously archived project card."}]},{"id":"octokit-routes-projects-delete-card","name":"Delete a project card","description":"","example":"octokit.projects.deleteCard({\n  card_id\n})","documentationUrl":"https://developer.github.com/v3/projects/cards/#delete-a-project-card","params":[{"name":"card_id","required":true,"description":""}]},{"id":"octokit-routes-projects-move-card","name":"Move a project card","description":"","example":"octokit.projects.moveCard({\n  card_id,\n  position\n})","documentationUrl":"https://developer.github.com/v3/projects/cards/#move-a-project-card","params":[{"name":"card_id","required":true,"description":""},{"name":"position","required":true,"description":"Can be one of `top`, `bottom`, or `after:<card_id>`, where `<card_id>` is the `id` value of a card in the same column, or in the new column specified by `column_id`."},{"name":"column_id","required":false,"description":"The `id` value of a column in the same project."}]},{"id":"octokit-routes-projects-list-collaborators","name":"List collaborators","description":"Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project `admin` to list collaborators.","example":"octokit.projects.listCollaborators({\n  project_id\n})","documentationUrl":"https://developer.github.com/v3/projects/collaborators/#list-collaborators","params":[{"name":"project_id","required":true,"description":""},{"name":"affiliation","required":false,"description":"Filters the collaborators by their affiliation. Can be one of:  \n\\* `outside`: Outside collaborators of a project that are not a member of the project's organization.  \n\\* `direct`: Collaborators with permissions to a project, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-projects-review-user-permission-level","name":"Review a user's permission level","description":"Returns the collaborator's permission level for an organization project. Possible values for the `permission` key: `admin`, `write`, `read`, `none`. You must be an organization owner or a project `admin` to review a user's permission level.","example":"octokit.projects.reviewUserPermissionLevel({\n  project_id,\n  username\n})","documentationUrl":"https://developer.github.com/v3/projects/collaborators/#review-a-users-permission-level","params":[{"name":"project_id","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-projects-add-collaborator","name":"Add user as a collaborator","description":"Adds a collaborator to a an organization project and sets their permission level. You must be an organization owner or a project `admin` to add a collaborator.","example":"octokit.projects.addCollaborator({\n  project_id,\n  username\n})","documentationUrl":"https://developer.github.com/v3/projects/collaborators/#add-user-as-a-collaborator","params":[{"name":"project_id","required":true,"description":""},{"name":"username","required":true,"description":""},{"name":"permission","required":false,"description":"The permission to grant the collaborator. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\" Can be one of:  \n\\* `read` - can read, but not write to or administer this project.  \n\\* `write` - can read and write, but not administer this project.  \n\\* `admin` - can read, write and administer this project."}]},{"id":"octokit-routes-projects-remove-collaborator","name":"Remove user as a collaborator","description":"Removes a collaborator from an organization project. You must be an organization owner or a project `admin` to remove a collaborator.","example":"octokit.projects.removeCollaborator({\n  project_id,\n  username\n})","documentationUrl":"https://developer.github.com/v3/projects/collaborators/#remove-user-as-a-collaborator","params":[{"name":"project_id","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-projects-list-columns","name":"List project columns","description":"","example":"octokit.projects.listColumns({\n  project_id\n})","documentationUrl":"https://developer.github.com/v3/projects/columns/#list-project-columns","params":[{"name":"project_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-projects-get-column","name":"Get a project column","description":"","example":"octokit.projects.getColumn({\n  column_id\n})","documentationUrl":"https://developer.github.com/v3/projects/columns/#get-a-project-column","params":[{"name":"column_id","required":true,"description":""}]},{"id":"octokit-routes-projects-create-column","name":"Create a project column","description":"","example":"octokit.projects.createColumn({\n  project_id,\n  name\n})","documentationUrl":"https://developer.github.com/v3/projects/columns/#create-a-project-column","params":[{"name":"project_id","required":true,"description":""},{"name":"name","required":true,"description":"The name of the column."}]},{"id":"octokit-routes-projects-update-column","name":"Update a project column","description":"","example":"octokit.projects.updateColumn({\n  column_id,\n  name\n})","documentationUrl":"https://developer.github.com/v3/projects/columns/#update-a-project-column","params":[{"name":"column_id","required":true,"description":""},{"name":"name","required":true,"description":"The new name of the column."}]},{"id":"octokit-routes-projects-delete-column","name":"Delete a project column","description":"","example":"octokit.projects.deleteColumn({\n  column_id\n})","documentationUrl":"https://developer.github.com/v3/projects/columns/#delete-a-project-column","params":[{"name":"column_id","required":true,"description":""}]},{"id":"octokit-routes-projects-move-column","name":"Move a project column","description":"","example":"octokit.projects.moveColumn({\n  column_id,\n  position\n})","documentationUrl":"https://developer.github.com/v3/projects/columns/#move-a-project-column","params":[{"name":"column_id","required":true,"description":""},{"name":"position","required":true,"description":"Can be one of `first`, `last`, or `after:<column_id>`, where `<column_id>` is the `id` value of a column in the same project."}]}]}},{"node":{"id":"octokit-routes-pulls","name":"pulls","methods":[{"id":"octokit-routes-pulls-list","name":"List pull requests","description":"Draft pull requests are available in public repositories with GitHub Free and GitHub Pro, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.","example":"octokit.pulls.list({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/pulls/#list-pull-requests","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"state","required":false,"description":"Either `open`, `closed`, or `all` to filter by state."},{"name":"head","required":false,"description":"Filter pulls by head user or head organization and branch name in the format of `user:ref-name` or `organization:ref-name`. For example: `github:new-script-format` or `octocat:test-branch`."},{"name":"base","required":false,"description":"Filter pulls by base branch name. Example: `gh-pages`."},{"name":"sort","required":false,"description":"What to sort results by. Can be either `created`, `updated`, `popularity` (comment count) or `long-running` (age, filtering by pulls updated in the last month)."},{"name":"direction","required":false,"description":"The direction of the sort. Can be either `asc` or `desc`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-pulls-get","name":"Get a single pull request","description":"Draft pull requests are available in public repositories with GitHub Free and GitHub Pro, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nLists details of a pull request by providing its number.\n\nWhen you get, [create](https://developer.github.com/v3/pulls/#create-a-pull-request), or [edit](https://developer.github.com/v3/pulls/#update-a-pull-request) a pull request, GitHub creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see \"[Checking mergeability of pull requests](https://developer.github.com/v3/git/#checking-mergeability-of-pull-requests)\".\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:\n\n*   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.\n*   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.\n*   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.\n\nPass the appropriate [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.","example":"octokit.pulls.get({\n  owner,\n  repo,\n  pull_number\n})","documentationUrl":"https://developer.github.com/v3/pulls/#get-a-single-pull-request","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-create","name":"Create a pull request","description":"Draft pull requests are available in public repositories with GitHub Free and GitHub Pro, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nTo open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.","example":"octokit.pulls.create({\n  owner,\n  repo,\n  title,\n  head,\n  base\n})","documentationUrl":"https://developer.github.com/v3/pulls/#create-a-pull-request","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"title","required":true,"description":"The title of the pull request."},{"name":"head","required":true,"description":"The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`."},{"name":"base","required":true,"description":"The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."},{"name":"body","required":false,"description":"The contents of the pull request."},{"name":"maintainer_can_modify","required":false,"description":"Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request."},{"name":"draft","required":false,"description":"Indicates whether the pull request is a draft. See \"[Draft Pull Requests](https://help.github.com/en/articles/about-pull-requests#draft-pull-requests)\" in the GitHub Help documentation to learn more."}]},{"id":"octokit-routes-pulls-create-from-issue","name":"Create a Pull Request from an Issue","description":"Draft pull requests are available in public repositories with GitHub Free and GitHub Pro, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nTo open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.","example":"octokit.pulls.createFromIssue({\n  owner,\n  repo,\n  issue,\n  head,\n  base\n})","documentationUrl":"https://developer.github.com/v3/pulls/#create-a-pull-request","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue","required":true,"description":"The issue number in this repository to turn into a Pull Request."},{"name":"head","required":true,"description":"The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`."},{"name":"base","required":true,"description":"The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository."},{"name":"maintainer_can_modify","required":false,"description":"Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request."},{"name":"draft","required":false,"description":"Indicates whether the pull request is a draft. See \"[Draft Pull Requests](https://help.github.com/en/articles/about-pull-requests#draft-pull-requests)\" in the GitHub Help documentation to learn more."}]},{"id":"octokit-routes-pulls-update-branch","name":"Update a pull request branch","description":"Updates the pull request branch with the latest upstream changes by merging HEAD from the base branch into the pull request branch.","example":"octokit.pulls.updateBranch({\n  owner,\n  repo,\n  pull_number\n})","documentationUrl":"https://developer.github.com/v3/pulls/#update-a-pull-request-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"expected_head_sha","required":false,"description":"The expected SHA of the pull request's HEAD ref. This is the most recent commit on the pull request's branch. If the expected SHA does not match the pull request's HEAD, you will receive a `422 Unprocessable Entity` status. You can use the \"[List commits on a repository](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository)\" endpoint to find the most recent commit SHA."}]},{"id":"octokit-routes-pulls-update","name":"Update a pull request","description":"Draft pull requests are available in public repositories with GitHub Free and GitHub Pro, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nTo open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.","example":"octokit.pulls.update({\n  owner,\n  repo,\n  pull_number\n})","documentationUrl":"https://developer.github.com/v3/pulls/#update-a-pull-request","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"title","required":false,"description":"The title of the pull request."},{"name":"body","required":false,"description":"The contents of the pull request."},{"name":"state","required":false,"description":"State of this Pull Request. Either `open` or `closed`."},{"name":"base","required":false,"description":"The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository."},{"name":"maintainer_can_modify","required":false,"description":"Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-list-commits","name":"List commits on a pull request","description":"Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the [Commit List API](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository).","example":"octokit.pulls.listCommits({\n  owner,\n  repo,\n  pull_number\n})","documentationUrl":"https://developer.github.com/v3/pulls/#list-commits-on-a-pull-request","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-list-files","name":"List pull requests files","description":"**Note:** The response includes a maximum of 300 files.","example":"octokit.pulls.listFiles({\n  owner,\n  repo,\n  pull_number\n})","documentationUrl":"https://developer.github.com/v3/pulls/#list-pull-requests-files","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-check-if-merged","name":"Get if a pull request has been merged","description":"","example":"octokit.pulls.checkIfMerged({\n  owner,\n  repo,\n  pull_number\n})","documentationUrl":"https://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-merge","name":"Merge a pull request (Merge Button)","description":"This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.","example":"octokit.pulls.merge({\n  owner,\n  repo,\n  pull_number\n})","documentationUrl":"https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"commit_title","required":false,"description":"Title for the automatic commit message."},{"name":"commit_message","required":false,"description":"Extra detail to append to automatic commit message."},{"name":"sha","required":false,"description":"SHA that pull request head must match to allow merge."},{"name":"merge_method","required":false,"description":"Merge method to use. Possible values are `merge`, `squash` or `rebase`. Default is `merge`."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-list-comments","name":"List comments on a pull request","description":"By default, review comments are ordered by ascending ID.\n\n","example":"octokit.pulls.listComments({\n  owner,\n  repo,\n  pull_number\n})","documentationUrl":"https://developer.github.com/v3/pulls/comments/#list-comments-on-a-pull-request","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"sort","required":false,"description":"Can be either `created` or `updated` comments."},{"name":"direction","required":false,"description":"Can be either `asc` or `desc`. Ignored without `sort` parameter."},{"name":"since","required":false,"description":"This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only returns comments `updated` at or after this time."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-list-comments-for-repo","name":"List comments in a repository","description":"By default, review comments are ordered by ascending ID.\n\n","example":"octokit.pulls.listCommentsForRepo({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/pulls/comments/#list-comments-in-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"sort","required":false,"description":"Can be either `created` or `updated` comments."},{"name":"direction","required":false,"description":"Can be either `asc` or `desc`. Ignored without `sort` parameter."},{"name":"since","required":false,"description":"This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Only returns comments `updated` at or after this time."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-pulls-get-comment","name":"Get a single comment","description":"","example":"octokit.pulls.getComment({\n  owner,\n  repo,\n  comment_id\n})","documentationUrl":"https://developer.github.com/v3/pulls/comments/#get-a-single-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""}]},{"id":"octokit-routes-pulls-create-comment","name":"Create a comment","description":"This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\n**Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API v3 offers the `application/vnd.github.v3.diff` [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://developer.github.com/v3/pulls/#get-a-single-pull-request) endpoint.\n\nThe `position` value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.","example":"octokit.pulls.createComment({\n  owner,\n  repo,\n  pull_number,\n  body,\n  commit_id,\n  path,\n  position\n})","documentationUrl":"https://developer.github.com/v3/pulls/comments/#create-a-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"body","required":true,"description":"The text of the comment."},{"name":"commit_id","required":true,"description":"The SHA of the commit needing a comment. Not using the latest commit SHA may render your comment outdated if a subsequent commit modifies the line you specify as the `position`."},{"name":"path","required":true,"description":"The relative path to the file that necessitates a comment."},{"name":"position","required":true,"description":"The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-create-comment-reply","name":"Create a comment reply","description":"This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\n**Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API v3 offers the `application/vnd.github.v3.diff` [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://developer.github.com/v3/pulls/#get-a-single-pull-request) endpoint.\n\nThe `position` value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.","example":"octokit.pulls.createCommentReply({\n  owner,\n  repo,\n  pull_number,\n  body,\n  in_reply_to\n})","documentationUrl":"https://developer.github.com/v3/pulls/comments/#create-a-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"body","required":true,"description":"The text of the comment."},{"name":"in_reply_to","required":true,"description":"The comment ID to reply to. **Note**: This must be the ID of a _top-level comment_, not a reply to that comment. Replies to replies are not supported."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-update-comment","name":"Edit a comment","description":"","example":"octokit.pulls.updateComment({\n  owner,\n  repo,\n  comment_id,\n  body\n})","documentationUrl":"https://developer.github.com/v3/pulls/comments/#edit-a-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""},{"name":"body","required":true,"description":"The text of the comment."}]},{"id":"octokit-routes-pulls-delete-comment","name":"Delete a comment","description":"","example":"octokit.pulls.deleteComment({\n  owner,\n  repo,\n  comment_id\n})","documentationUrl":"https://developer.github.com/v3/pulls/comments/#delete-a-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""}]},{"id":"octokit-routes-pulls-list-review-requests","name":"List review requests","description":"","example":"octokit.pulls.listReviewRequests({\n  owner,\n  repo,\n  pull_number\n})","documentationUrl":"https://developer.github.com/v3/pulls/review_requests/#list-review-requests","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-create-review-request","name":"Create a review request","description":"This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.","example":"octokit.pulls.createReviewRequest({\n  owner,\n  repo,\n  pull_number\n})","documentationUrl":"https://developer.github.com/v3/pulls/review_requests/#create-a-review-request","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"reviewers","required":false,"description":"An array of user `login`s that will be requested."},{"name":"team_reviewers","required":false,"description":"An array of team `slug`s that will be requested."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-delete-review-request","name":"Delete a review request","description":"","example":"octokit.pulls.deleteReviewRequest({\n  owner,\n  repo,\n  pull_number\n})","documentationUrl":"https://developer.github.com/v3/pulls/review_requests/#delete-a-review-request","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"reviewers","required":false,"description":"An array of user `login`s that will be removed."},{"name":"team_reviewers","required":false,"description":"An array of team `slug`s that will be removed."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-list-reviews","name":"List reviews on a pull request","description":"The list of reviews returns in chronological order.","example":"octokit.pulls.listReviews({\n  owner,\n  repo,\n  pull_number\n})","documentationUrl":"https://developer.github.com/v3/pulls/reviews/#list-reviews-on-a-pull-request","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-get-review","name":"Get a single review","description":"","example":"octokit.pulls.getReview({\n  owner,\n  repo,\n  pull_number,\n  review_id\n})","documentationUrl":"https://developer.github.com/v3/pulls/reviews/#get-a-single-review","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"review_id","required":true,"description":""},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-delete-pending-review","name":"Delete a pending review","description":"","example":"octokit.pulls.deletePendingReview({\n  owner,\n  repo,\n  pull_number,\n  review_id\n})","documentationUrl":"https://developer.github.com/v3/pulls/reviews/#delete-a-pending-review","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"review_id","required":true,"description":""},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-get-comments-for-review","name":"Get comments for a single review","description":"","example":"octokit.pulls.getCommentsForReview({\n  owner,\n  repo,\n  pull_number,\n  review_id\n})","documentationUrl":"https://developer.github.com/v3/pulls/reviews/#get-comments-for-a-single-review","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"review_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-create-review","name":"Create a pull request review","description":"This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\n**Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API v3 offers the `application/vnd.github.v3.diff` [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://developer.github.com/v3/pulls/#get-a-single-pull-request) endpoint.\n\nThe `position` value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.","example":"octokit.pulls.createReview({\n  owner,\n  repo,\n  pull_number\n})","documentationUrl":"https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"commit_id","required":false,"description":"The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the `position`. Defaults to the most recent commit in the pull request when you do not specify a value."},{"name":"body","required":false,"description":"**Required** when using `REQUEST_CHANGES` or `COMMENT` for the `event` parameter. The body text of the pull request review."},{"name":"event","required":false,"description":"The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By leaving this blank, you set the review action state to `PENDING`, which means you will need to [submit the pull request review](https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review) when you are ready."},{"name":"comments","required":false,"description":"Use the following table to specify the location, destination, and contents of the draft review comment."},{"name":"comments[].path","required":true,"description":"The relative path to the file that necessitates a review comment."},{"name":"comments[].position","required":true,"description":"The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note below."},{"name":"comments[].body","required":true,"description":"Text of the review comment."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-update-review","name":"Update a pull request review","description":"Update the review summary comment with new text.","example":"octokit.pulls.updateReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n  body\n})","documentationUrl":"https://developer.github.com/v3/pulls/reviews/#update-a-pull-request-review","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"review_id","required":true,"description":""},{"name":"body","required":true,"description":"The body text of the pull request review."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-submit-review","name":"Submit a pull request review","description":"","example":"octokit.pulls.submitReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n  event\n})","documentationUrl":"https://developer.github.com/v3/pulls/reviews/#submit-a-pull-request-review","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"review_id","required":true,"description":""},{"name":"body","required":false,"description":"The body text of the pull request review"},{"name":"event","required":true,"description":"The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When you leave this blank, the API returns _HTTP 422 (Unrecognizable entity)_ and sets the review action state to `PENDING`, which means you will need to re-submit the pull request review using a review action."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-pulls-dismiss-review","name":"Dismiss a pull request review","description":"**Note:** To dismiss a pull request review on a [protected branch](https://developer.github.com/v3/repos/branches/), you must be a repository administrator or be included in the list of people or teams who can dismiss pull request reviews.","example":"octokit.pulls.dismissReview({\n  owner,\n  repo,\n  pull_number,\n  review_id,\n  message\n})","documentationUrl":"https://developer.github.com/v3/pulls/reviews/#dismiss-a-pull-request-review","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"pull_number","required":true,"description":""},{"name":"review_id","required":true,"description":""},{"name":"message","required":true,"description":"The message for the pull request review dismissal"},{"name":"number","required":false,"description":""}]}]}},{"node":{"id":"octokit-routes-rateLimit","name":"rateLimit","methods":[{"id":"octokit-routes-rateLimit-get","name":"Get your current rate limit status","description":"**Note:** Accessing this endpoint does not count against your REST API rate limit.\n\n**Understanding your rate limit status**\n\nThe Search API has a [custom rate limit](https://developer.github.com/v3/search/#rate-limit), separate from the rate limit governing the rest of the REST API. The GraphQL API also has a [custom rate limit](https://developer.github.com/v4/guides/resource-limitations/#rate-limit) that is separate from and calculated differently than rate limits in the REST API.\n\nFor these reasons, the Rate Limit API response categorizes your rate limit. Under `resources`, you'll see four objects:\n\n*   The `core` object provides your rate limit status for all non-search-related resources in the REST API.\n*   The `search` object provides your rate limit status for the [Search API](https://developer.github.com/v3/search/).\n*   The `graphql` object provides your rate limit status for the [GraphQL API](https://developer.github.com/v4/).\n*   The `integration_manifest` object provides your rate limit status for the [GitHub App Manifest code conversion](https://developer.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/#3-you-exchange-the-temporary-code-to-retrieve-the-app-configuration) endpoint.\n\nFor more information on the headers and values in the rate limit response, see \"[Rate limiting](https://developer.github.com/v3/#rate-limiting).\"\n\nThe `rate` object (shown at the bottom of the response above) is deprecated.\n\nIf you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object.","example":"octokit.rateLimit.get()","documentationUrl":"https://developer.github.com/v3/rate_limit/#get-your-current-rate-limit-status","params":[]}]}},{"node":{"id":"octokit-routes-reactions","name":"reactions","methods":[{"id":"octokit-routes-reactions-list-for-commit-comment","name":"List reactions for a commit comment","description":"List the reactions to a [commit comment](https://developer.github.com/v3/repos/comments/).","example":"octokit.reactions.listForCommitComment({\n  owner,\n  repo,\n  comment_id\n})","documentationUrl":"https://developer.github.com/v3/reactions/#list-reactions-for-a-commit-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""},{"name":"content","required":false,"description":"Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a commit comment."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-reactions-create-for-commit-comment","name":"Create reaction for a commit comment","description":"Create a reaction to a [commit comment](https://developer.github.com/v3/repos/comments/). A response with a `Status: 200 OK` means that you already added the reaction type to this commit comment.","example":"octokit.reactions.createForCommitComment({\n  owner,\n  repo,\n  comment_id,\n  content\n})","documentationUrl":"https://developer.github.com/v3/reactions/#create-reaction-for-a-commit-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""},{"name":"content","required":true,"description":"The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the commit comment."}]},{"id":"octokit-routes-reactions-list-for-issue","name":"List reactions for an issue","description":"List the reactions to an [issue](https://developer.github.com/v3/issues/).","example":"octokit.reactions.listForIssue({\n  owner,\n  repo,\n  issue_number\n})","documentationUrl":"https://developer.github.com/v3/reactions/#list-reactions-for-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"content","required":false,"description":"Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to an issue."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-reactions-create-for-issue","name":"Create reaction for an issue","description":"Create a reaction to an [issue](https://developer.github.com/v3/issues/). A response with a `Status: 200 OK` means that you already added the reaction type to this issue.","example":"octokit.reactions.createForIssue({\n  owner,\n  repo,\n  issue_number,\n  content\n})","documentationUrl":"https://developer.github.com/v3/reactions/#create-reaction-for-an-issue","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"issue_number","required":true,"description":""},{"name":"content","required":true,"description":"The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the issue."},{"name":"number","required":false,"description":""}]},{"id":"octokit-routes-reactions-list-for-issue-comment","name":"List reactions for an issue comment","description":"List the reactions to an [issue comment](https://developer.github.com/v3/issues/comments/).","example":"octokit.reactions.listForIssueComment({\n  owner,\n  repo,\n  comment_id\n})","documentationUrl":"https://developer.github.com/v3/reactions/#list-reactions-for-an-issue-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""},{"name":"content","required":false,"description":"Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to an issue comment."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-reactions-create-for-issue-comment","name":"Create reaction for an issue comment","description":"Create a reaction to an [issue comment](https://developer.github.com/v3/issues/comments/). A response with a `Status: 200 OK` means that you already added the reaction type to this issue comment.","example":"octokit.reactions.createForIssueComment({\n  owner,\n  repo,\n  comment_id,\n  content\n})","documentationUrl":"https://developer.github.com/v3/reactions/#create-reaction-for-an-issue-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""},{"name":"content","required":true,"description":"The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the issue comment."}]},{"id":"octokit-routes-reactions-list-for-pull-request-review-comment","name":"List reactions for a pull request review comment","description":"List the reactions to a [pull request review comment](https://developer.github.com/v3/pulls/comments/).","example":"octokit.reactions.listForPullRequestReviewComment({\n  owner,\n  repo,\n  comment_id\n})","documentationUrl":"https://developer.github.com/v3/reactions/#list-reactions-for-a-pull-request-review-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""},{"name":"content","required":false,"description":"Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a pull request review comment."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-reactions-create-for-pull-request-review-comment","name":"Create reaction for a pull request review comment","description":"Create a reaction to a [pull request review comment](https://developer.github.com/v3/pulls/comments/). A response with a `Status: 200 OK` means that you already added the reaction type to this pull request review comment.","example":"octokit.reactions.createForPullRequestReviewComment({\n  owner,\n  repo,\n  comment_id,\n  content\n})","documentationUrl":"https://developer.github.com/v3/reactions/#create-reaction-for-a-pull-request-review-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""},{"name":"content","required":true,"description":"The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the pull request review comment."}]},{"id":"octokit-routes-reactions-list-for-team-discussion","name":"List reactions for a team discussion","description":"List the reactions to a [team discussion](https://developer.github.com/v3/teams/discussions/). OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.reactions.listForTeamDiscussion({\n  team_id,\n  discussion_number\n})","documentationUrl":"https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion","params":[{"name":"team_id","required":true,"description":""},{"name":"discussion_number","required":true,"description":""},{"name":"content","required":false,"description":"Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a team discussion."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-reactions-create-for-team-discussion","name":"Create reaction for a team discussion","description":"Create a reaction to a [team discussion](https://developer.github.com/v3/teams/discussions/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion.","example":"octokit.reactions.createForTeamDiscussion({\n  team_id,\n  discussion_number,\n  content\n})","documentationUrl":"https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion","params":[{"name":"team_id","required":true,"description":""},{"name":"discussion_number","required":true,"description":""},{"name":"content","required":true,"description":"The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the team discussion."}]},{"id":"octokit-routes-reactions-list-for-team-discussion-comment","name":"List reactions for a team discussion comment","description":"List the reactions to a [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/). OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.reactions.listForTeamDiscussionComment({\n  team_id,\n  discussion_number,\n  comment_number\n})","documentationUrl":"https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment","params":[{"name":"team_id","required":true,"description":""},{"name":"discussion_number","required":true,"description":""},{"name":"comment_number","required":true,"description":""},{"name":"content","required":false,"description":"Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a team discussion comment."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-reactions-create-for-team-discussion-comment","name":"Create reaction for a team discussion comment","description":"Create a reaction to a [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion comment.","example":"octokit.reactions.createForTeamDiscussionComment({\n  team_id,\n  discussion_number,\n  comment_number,\n  content\n})","documentationUrl":"https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment","params":[{"name":"team_id","required":true,"description":""},{"name":"discussion_number","required":true,"description":""},{"name":"comment_number","required":true,"description":""},{"name":"content","required":true,"description":"The [reaction type](https://developer.github.com/v3/reactions/#reaction-types) to add to the team discussion comment."}]},{"id":"octokit-routes-reactions-delete","name":"Delete a reaction","description":"OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), when deleting a [team discussion](https://developer.github.com/v3/teams/discussions/) or [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/).","example":"octokit.reactions.delete({\n  reaction_id\n})","documentationUrl":"https://developer.github.com/v3/reactions/#delete-a-reaction","params":[{"name":"reaction_id","required":true,"description":""}]}]}},{"node":{"id":"octokit-routes-repos","name":"repos","methods":[{"id":"octokit-routes-repos-list","name":"List your repositories","description":"Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.","example":"octokit.repos.list()","documentationUrl":"https://developer.github.com/v3/repos/#list-your-repositories","params":[{"name":"visibility","required":false,"description":"Can be one of `all`, `public`, or `private`."},{"name":"affiliation","required":false,"description":"Comma-separated list of values. Can include:  \n\\* `owner`: Repositories that are owned by the authenticated user.  \n\\* `collaborator`: Repositories that the user has been added to as a collaborator.  \n\\* `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on."},{"name":"type","required":false,"description":"Can be one of `all`, `owner`, `public`, `private`, `member`. Default: `all`  \n  \nWill cause a `422` error if used in the same request as **visibility** or **affiliation**. Will cause a `422` error if used in the same request as **visibility** or **affiliation**."},{"name":"sort","required":false,"description":"Can be one of `created`, `updated`, `pushed`, `full_name`."},{"name":"direction","required":false,"description":"Can be one of `asc` or `desc`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-list-for-user","name":"List user repositories","description":"Lists public repositories for the specified user.","example":"octokit.repos.listForUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/repos/#list-user-repositories","params":[{"name":"username","required":true,"description":""},{"name":"type","required":false,"description":"Can be one of `all`, `owner`, `member`."},{"name":"sort","required":false,"description":"Can be one of `created`, `updated`, `pushed`, `full_name`."},{"name":"direction","required":false,"description":"Can be one of `asc` or `desc`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-list-for-org","name":"List organization repositories","description":"Lists repositories for the specified organization.","example":"octokit.repos.listForOrg({\n  org\n})","documentationUrl":"https://developer.github.com/v3/repos/#list-organization-repositories","params":[{"name":"org","required":true,"description":""},{"name":"type","required":false,"description":"Can be one of `all`, `public`, `private`, `forks`, `sources`, `member`."},{"name":"sort","required":false,"description":"Can be one of `created`, `updated`, `pushed`, `full_name`."},{"name":"direction","required":false,"description":"Can be one of `asc` or `desc`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-list-public","name":"List all public repositories","description":"Lists all public repositories in the order that they were created.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of repositories.","example":"octokit.repos.listPublic()","documentationUrl":"https://developer.github.com/v3/repos/#list-all-public-repositories","params":[{"name":"since","required":false,"description":"The integer ID of the last Repository that you've seen."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-create-for-authenticated-user","name":"Creates a new repository for the authenticated user","description":"Creates a new repository for the authenticated user.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository","example":"octokit.repos.createForAuthenticatedUser({\n  name\n})","documentationUrl":"https://developer.github.com/v3/repos/#create","params":[{"name":"name","required":true,"description":"The name of the repository."},{"name":"description","required":false,"description":"A short description of the repository."},{"name":"homepage","required":false,"description":"A URL with more information about the repository."},{"name":"private","required":false,"description":"Either `true` to create a private repository or `false` to create a public one. Creating private repositories requires a paid GitHub account."},{"name":"has_issues","required":false,"description":"Either `true` to enable issues for this repository or `false` to disable them."},{"name":"has_projects","required":false,"description":"Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error."},{"name":"has_wiki","required":false,"description":"Either `true` to enable the wiki for this repository or `false` to disable it."},{"name":"is_template","required":false,"description":"Either `true` to make this repo available as a template repository or `false` to prevent it."},{"name":"team_id","required":false,"description":"The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization."},{"name":"auto_init","required":false,"description":"Pass `true` to create an initial commit with empty README."},{"name":"gitignore_template","required":false,"description":"Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\"."},{"name":"license_template","required":false,"description":"Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, \"mit\" or \"mpl-2.0\"."},{"name":"allow_squash_merge","required":false,"description":"Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging."},{"name":"allow_merge_commit","required":false,"description":"Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits."},{"name":"allow_rebase_merge","required":false,"description":"Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging."}]},{"id":"octokit-routes-repos-create-in-org","name":"Creates a new repository in the specified organization","description":"Creates a new repository for the authenticated user.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository","example":"octokit.repos.createInOrg({\n  org,\n  name\n})","documentationUrl":"https://developer.github.com/v3/repos/#create","params":[{"name":"org","required":true,"description":""},{"name":"name","required":true,"description":"The name of the repository."},{"name":"description","required":false,"description":"A short description of the repository."},{"name":"homepage","required":false,"description":"A URL with more information about the repository."},{"name":"private","required":false,"description":"Either `true` to create a private repository or `false` to create a public one. Creating private repositories requires a paid GitHub account."},{"name":"has_issues","required":false,"description":"Either `true` to enable issues for this repository or `false` to disable them."},{"name":"has_projects","required":false,"description":"Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error."},{"name":"has_wiki","required":false,"description":"Either `true` to enable the wiki for this repository or `false` to disable it."},{"name":"is_template","required":false,"description":"Either `true` to make this repo available as a template repository or `false` to prevent it."},{"name":"team_id","required":false,"description":"The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization."},{"name":"auto_init","required":false,"description":"Pass `true` to create an initial commit with empty README."},{"name":"gitignore_template","required":false,"description":"Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\"."},{"name":"license_template","required":false,"description":"Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, \"mit\" or \"mpl-2.0\"."},{"name":"allow_squash_merge","required":false,"description":"Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging."},{"name":"allow_merge_commit","required":false,"description":"Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits."},{"name":"allow_rebase_merge","required":false,"description":"Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging."}]},{"id":"octokit-routes-repos-create-using-template","name":"Create repository using a repository template","description":"Creates a new repository using a repository template. Use the `repo` route parameter to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [`GET /repos/:owner/:repo`](https://developer.github.com/v3/repos/#get) endpoint and check that the `is_template` key is `true`.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository\n\n\\`","example":"octokit.repos.createUsingTemplate({\n  template_owner,\n  template_repo,\n  name\n})","documentationUrl":"https://developer.github.com/v3/repos/#create-repository-using-a-repository-template","params":[{"name":"template_owner","required":true,"description":""},{"name":"template_repo","required":true,"description":""},{"name":"owner","required":false,"description":"The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization."},{"name":"name","required":true,"description":"The name of the new repository."},{"name":"description","required":false,"description":"A short description of the new repository."},{"name":"private","required":false,"description":"Either `true` to create a new private repository or `false` to create a new public one."}]},{"id":"octokit-routes-repos-get","name":"Get","description":"The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.","example":"octokit.repos.get({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/#get","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-update","name":"Edit","description":"**Note**: To edit a repository's topics, use the [`topics` endpoint](https://developer.github.com/v3/repos/#replace-all-topics-for-a-repository).","example":"octokit.repos.update({\n  owner,\n  repo,\n  name\n})","documentationUrl":"https://developer.github.com/v3/repos/#edit","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"name","required":true,"description":"The name of the repository."},{"name":"description","required":false,"description":"A short description of the repository."},{"name":"homepage","required":false,"description":"A URL with more information about the repository."},{"name":"private","required":false,"description":"Either `true` to make the repository private or `false` to make it public. Creating private repositories requires a paid GitHub account. Default: `false`.  \n**Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private. **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private."},{"name":"has_issues","required":false,"description":"Either `true` to enable issues for this repository or `false` to disable them."},{"name":"has_projects","required":false,"description":"Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error."},{"name":"has_wiki","required":false,"description":"Either `true` to enable the wiki for this repository or `false` to disable it."},{"name":"is_template","required":false,"description":"Either `true` to make this repo available as a template repository or `false` to prevent it."},{"name":"default_branch","required":false,"description":"Updates the default branch for this repository."},{"name":"allow_squash_merge","required":false,"description":"Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging."},{"name":"allow_merge_commit","required":false,"description":"Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits."},{"name":"allow_rebase_merge","required":false,"description":"Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging."},{"name":"archived","required":false,"description":"`true` to archive this repository. **Note**: You cannot unarchive repositories through the API."}]},{"id":"octokit-routes-repos-list-topics","name":"List all topics for a repository","description":"","example":"octokit.repos.listTopics({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/#list-all-topics-for-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-replace-topics","name":"Replace all topics for a repository","description":"","example":"octokit.repos.replaceTopics({\n  owner,\n  repo,\n  names\n})","documentationUrl":"https://developer.github.com/v3/repos/#replace-all-topics-for-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"names","required":true,"description":"An array of topics to add to the repository. Pass one or more topics to _replace_ the set of existing topics. Send an empty array (`[]`) to clear all topics from the repository. **Note:** Topic `names` cannot contain uppercase letters."}]},{"id":"octokit-routes-repos-check-vulnerability-alerts","name":"Check if vulnerability alerts are enabled for a repository","description":"Shows whether vulnerability alerts are enabled or disabled for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\" in the GitHub Help documentation.","example":"octokit.repos.checkVulnerabilityAlerts({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/#check-if-vulnerability-alerts-are-enabled-for-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-enable-vulnerability-alerts","name":"Enable vulnerability alerts","description":"Enables vulnerability alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\" in the GitHub Help documentation.","example":"octokit.repos.enableVulnerabilityAlerts({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/#enable-vulnerability-alerts","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-disable-vulnerability-alerts","name":"Disable vulnerability alerts","description":"Disables vulnerability alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\" in the GitHub Help documentation.","example":"octokit.repos.disableVulnerabilityAlerts({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/#disable-vulnerability-alerts","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-enable-automated-security-fixes","name":"Enable automated security fixes","description":"Enables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\" in the GitHub Help documentation.","example":"octokit.repos.enableAutomatedSecurityFixes({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/#enable-automated-security-fixes","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-disable-automated-security-fixes","name":"Disable automated security fixes","description":"Disables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\" in the GitHub Help documentation.","example":"octokit.repos.disableAutomatedSecurityFixes({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/#disable-automated-security-fixes","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-list-contributors","name":"List contributors","description":"Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.\n\nGitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.","example":"octokit.repos.listContributors({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/#list-contributors","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"anon","required":false,"description":"Set to `1` or `true` to include anonymous contributors in results."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-list-languages","name":"List languages","description":"Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language.","example":"octokit.repos.listLanguages({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/#list-languages","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-list-teams","name":"List teams","description":"","example":"octokit.repos.listTeams({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/#list-teams","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-list-tags","name":"List tags","description":"","example":"octokit.repos.listTags({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/#list-tags","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-delete","name":"Delete a repository","description":"Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.\n\nIf an organization owner has configured the organization to prevent members from deleting organization-owned repositories, a member will get this response:","example":"octokit.repos.delete({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/#delete-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-transfer","name":"Transfer a repository","description":"A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://help.github.com/articles/about-repository-transfers/).","example":"octokit.repos.transfer({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/#transfer-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"new_owner","required":false,"description":"**Required:** The username or organization name the repository will be transferred to."},{"name":"team_ids","required":false,"description":"ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories."}]},{"id":"octokit-routes-repos-list-branches","name":"List branches","description":"","example":"octokit.repos.listBranches({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#list-branches","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"protected","required":false,"description":"Setting to `true` returns only protected branches. When set to `false`, only unprotected branches are returned. Omitting this parameter returns all branches."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-get-branch","name":"Get branch","description":"","example":"octokit.repos.getBranch({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#get-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-get-branch-protection","name":"Get branch protection","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.","example":"octokit.repos.getBranchProtection({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#get-branch-protection","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-update-branch-protection","name":"Update branch protection","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nProtecting a branch requires admin or owner permissions to the repository.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.\n\n**Note**: The list of users and teams in total is limited to 100 items.","example":"octokit.repos.updateBranchProtection({\n  owner,\n  repo,\n  branch,\n  required_status_checks,\n  enforce_admins,\n  required_pull_request_reviews,\n  restrictions\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#update-branch-protection","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""},{"name":"required_status_checks","required":true,"description":"Require status checks to pass before merging. Set to `null` to disable."},{"name":"required_status_checks.strict","required":true,"description":"Require branches to be up to date before merging."},{"name":"required_status_checks.contexts","required":true,"description":"The list of status checks to require in order to merge into this branch"},{"name":"enforce_admins","required":true,"description":"Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable."},{"name":"required_pull_request_reviews","required":true,"description":"Require at least one approving review on a pull request, before merging. Set to `null` to disable."},{"name":"required_pull_request_reviews.dismissal_restrictions","required":false,"description":"Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories."},{"name":"required_pull_request_reviews.dismissal_restrictions.users","required":false,"description":"The list of user `login`s with dismissal access"},{"name":"required_pull_request_reviews.dismissal_restrictions.teams","required":false,"description":"The list of team `slug`s with dismissal access"},{"name":"required_pull_request_reviews.dismiss_stale_reviews","required":false,"description":"Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit."},{"name":"required_pull_request_reviews.require_code_owner_reviews","required":false,"description":"Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) review them."},{"name":"required_pull_request_reviews.required_approving_review_count","required":false,"description":"Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6."},{"name":"restrictions","required":true,"description":"Restrict who can push to this branch. Team and user `restrictions` are only available for organization-owned repositories. Set to `null` to disable."},{"name":"restrictions.users","required":false,"description":"The list of user `login`s with push access"},{"name":"restrictions.teams","required":false,"description":"The list of team `slug`s with push access"}]},{"id":"octokit-routes-repos-remove-branch-protection","name":"Remove branch protection","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.","example":"octokit.repos.removeBranchProtection({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#remove-branch-protection","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-get-protected-branch-required-status-checks","name":"Get required status checks of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.","example":"octokit.repos.getProtectedBranchRequiredStatusChecks({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-update-protected-branch-required-status-checks","name":"Update required status checks of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nUpdating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.","example":"octokit.repos.updateProtectedBranchRequiredStatusChecks({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""},{"name":"strict","required":false,"description":"Require branches to be up to date before merging."},{"name":"contexts","required":false,"description":"The list of status checks to require in order to merge into this branch"}]},{"id":"octokit-routes-repos-remove-protected-branch-required-status-checks","name":"Remove required status checks of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.","example":"octokit.repos.removeProtectedBranchRequiredStatusChecks({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-list-protected-branch-required-status-checks-contexts","name":"List required status checks contexts of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.","example":"octokit.repos.listProtectedBranchRequiredStatusChecksContexts({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-replace-protected-branch-required-status-checks-contexts","name":"Replace required status checks contexts of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.","example":"octokit.repos.replaceProtectedBranchRequiredStatusChecksContexts({\n  owner,\n  repo,\n  branch,\n  contexts\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""},{"name":"contexts","required":true,"description":""}]},{"id":"octokit-routes-repos-add-protected-branch-required-status-checks-contexts","name":"Add required status checks contexts of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.","example":"octokit.repos.addProtectedBranchRequiredStatusChecksContexts({\n  owner,\n  repo,\n  branch,\n  contexts\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""},{"name":"contexts","required":true,"description":""}]},{"id":"octokit-routes-repos-remove-protected-branch-required-status-checks-contexts","name":"Remove required status checks contexts of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.","example":"octokit.repos.removeProtectedBranchRequiredStatusChecksContexts({\n  owner,\n  repo,\n  branch,\n  contexts\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""},{"name":"contexts","required":true,"description":""}]},{"id":"octokit-routes-repos-get-protected-branch-pull-request-review-enforcement","name":"Get pull request review enforcement of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.","example":"octokit.repos.getProtectedBranchPullRequestReviewEnforcement({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-update-protected-branch-pull-request-review-enforcement","name":"Update pull request review enforcement of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nUpdating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.","example":"octokit.repos.updateProtectedBranchPullRequestReviewEnforcement({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""},{"name":"dismissal_restrictions","required":false,"description":"Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories."},{"name":"dismissal_restrictions.users","required":false,"description":"The list of user `login`s with dismissal access"},{"name":"dismissal_restrictions.teams","required":false,"description":"The list of team `slug`s with dismissal access"},{"name":"dismiss_stale_reviews","required":false,"description":"Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit."},{"name":"require_code_owner_reviews","required":false,"description":"Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) have reviewed."},{"name":"required_approving_review_count","required":false,"description":"Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6."}]},{"id":"octokit-routes-repos-remove-protected-branch-pull-request-review-enforcement","name":"Remove pull request review enforcement of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.","example":"octokit.repos.removeProtectedBranchPullRequestReviewEnforcement({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-get-protected-branch-required-signatures","name":"Get required signatures of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://help.github.com/articles/signing-commits-with-gpg) in GitHub Help.\n\n**Note**: You must enable branch protection to require signed commits.","example":"octokit.repos.getProtectedBranchRequiredSignatures({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#get-required-signatures-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-add-protected-branch-required-signatures","name":"Add required signatures of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.","example":"octokit.repos.addProtectedBranchRequiredSignatures({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#add-required-signatures-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-remove-protected-branch-required-signatures","name":"Remove required signatures of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.","example":"octokit.repos.removeProtectedBranchRequiredSignatures({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#remove-required-signatures-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-get-protected-branch-admin-enforcement","name":"Get admin enforcement of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.","example":"octokit.repos.getProtectedBranchAdminEnforcement({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-add-protected-branch-admin-enforcement","name":"Add admin enforcement of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nAdding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.","example":"octokit.repos.addProtectedBranchAdminEnforcement({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-remove-protected-branch-admin-enforcement","name":"Remove admin enforcement of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nRemoving admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.","example":"octokit.repos.removeProtectedBranchAdminEnforcement({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-get-protected-branch-restrictions","name":"Get restrictions of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\n**Note**: Teams and users `restrictions` are only available for organization-owned repositories.","example":"octokit.repos.getProtectedBranchRestrictions({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-remove-protected-branch-restrictions","name":"Remove restrictions of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nDisables the ability to restrict who can push to this branch.","example":"octokit.repos.removeProtectedBranchRestrictions({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-list-protected-branch-team-restrictions","name":"List team restrictions of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nLists the teams who have push access to this branch. If you pass the `hellcat-preview` media type, the list includes child teams.","example":"octokit.repos.listProtectedBranchTeamRestrictions({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-replace-protected-branch-team-restrictions","name":"Replace team restrictions of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nReplaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. If you pass the `hellcat-preview` media type, you can include child teams.\n\n| Type    | Description                                                                                                                         |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users and teams in total is limited to 100 items. |","example":"octokit.repos.replaceProtectedBranchTeamRestrictions({\n  owner,\n  repo,\n  branch,\n  teams\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""},{"name":"teams","required":true,"description":""}]},{"id":"octokit-routes-repos-add-protected-branch-team-restrictions","name":"Add team restrictions of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nGrants the specified teams push access for this branch. If you pass the `hellcat-preview` media type, you can also give push access to child teams.\n\n| Type    | Description                                                                                                                         |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users and teams in total is limited to 100 items. |","example":"octokit.repos.addProtectedBranchTeamRestrictions({\n  owner,\n  repo,\n  branch,\n  teams\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""},{"name":"teams","required":true,"description":""}]},{"id":"octokit-routes-repos-remove-protected-branch-team-restrictions","name":"Remove team restrictions of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nRemoves the ability of a team to push to this branch. If you pass the `hellcat-preview` media type, you can include child teams.\n\n| Type    | Description                                                                                                                                  |\n| ------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Teams that should no longer have push access. Use the team's `slug`. **Note**: The list of users and teams in total is limited to 100 items. |","example":"octokit.repos.removeProtectedBranchTeamRestrictions({\n  owner,\n  repo,\n  branch,\n  teams\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""},{"name":"teams","required":true,"description":""}]},{"id":"octokit-routes-repos-list-protected-branch-user-restrictions","name":"List user restrictions of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nLists the people who have push access to this branch.","example":"octokit.repos.listProtectedBranchUserRestrictions({\n  owner,\n  repo,\n  branch\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""}]},{"id":"octokit-routes-repos-replace-protected-branch-user-restrictions","name":"Replace user restrictions of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nReplaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.\n\n| Type    | Description                                                                                                            |\n| ------- | ---------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users and teams in total is limited to 100 items. |","example":"octokit.repos.replaceProtectedBranchUserRestrictions({\n  owner,\n  repo,\n  branch,\n  users\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""},{"name":"users","required":true,"description":""}]},{"id":"octokit-routes-repos-add-protected-branch-user-restrictions","name":"Add user restrictions of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nGrants the specified people push access for this branch.\n\n| Type    | Description                                                                                                            |\n| ------- | ---------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users and teams in total is limited to 100 items. |","example":"octokit.repos.addProtectedBranchUserRestrictions({\n  owner,\n  repo,\n  branch,\n  users\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""},{"name":"users","required":true,"description":""}]},{"id":"octokit-routes-repos-remove-protected-branch-user-restrictions","name":"Remove user restrictions of protected branch","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nRemoves the ability of a team to push to this branch.\n\n| Type    | Description                                                                                                                            |\n| ------- | -------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames of the people who should no longer have push access. **Note**: The list of users and teams in total is limited to 100 items. |","example":"octokit.repos.removeProtectedBranchUserRestrictions({\n  owner,\n  repo,\n  branch,\n  users\n})","documentationUrl":"https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"branch","required":true,"description":""},{"name":"users","required":true,"description":""}]},{"id":"octokit-routes-repos-list-collaborators","name":"List collaborators","description":"For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nIf you pass the `hellcat-preview` media type, team members will include the members of child teams.","example":"octokit.repos.listCollaborators({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/collaborators/#list-collaborators","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"affiliation","required":false,"description":"Filter collaborators returned by their affiliation. Can be one of:  \n\\* `outside`: All outside collaborators of an organization-owned repository.  \n\\* `direct`: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-check-collaborator","name":"Check if a user is a collaborator","description":"For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nIf you pass the `hellcat-preview` media type, team members will include the members of child teams.","example":"octokit.repos.checkCollaborator({\n  owner,\n  repo,\n  username\n})","documentationUrl":"https://developer.github.com/v3/repos/collaborators/#check-if-a-user-is-a-collaborator","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-repos-get-collaborator-permission-level","name":"Review a user's permission level","description":"Possible values for the `permission` key: `admin`, `write`, `read`, `none`.","example":"octokit.repos.getCollaboratorPermissionLevel({\n  owner,\n  repo,\n  username\n})","documentationUrl":"https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-repos-add-collaborator","name":"Add user as a collaborator","description":"This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"\n\nThe invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://developer.github.com/v3/repos/invitations/).\n\n**Rate limits**\n\nTo prevent abuse, you are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.","example":"octokit.repos.addCollaborator({\n  owner,\n  repo,\n  username\n})","documentationUrl":"https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"username","required":true,"description":""},{"name":"permission","required":false,"description":"The permission to grant the collaborator. **Only valid on organization-owned repositories.** Can be one of:  \n\\* `pull` - can pull, but not push to or administer this repository.  \n\\* `push` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push and administer this repository."}]},{"id":"octokit-routes-repos-remove-collaborator","name":"Remove user as a collaborator","description":"","example":"octokit.repos.removeCollaborator({\n  owner,\n  repo,\n  username\n})","documentationUrl":"https://developer.github.com/v3/repos/collaborators/#remove-user-as-a-collaborator","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-repos-list-commit-comments","name":"List commit comments for a repository","description":"Commit Comments use [these custom media types](https://developer.github.com/v3/repos/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\nComments are ordered by ascending ID.\n\n","example":"octokit.repos.listCommitComments({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-list-comments-for-commit","name":"List comments for a single commit","description":"Use the `:commit_sha` to specify the commit that will have its comments listed.\n\n","example":"octokit.repos.listCommentsForCommit({\n  owner,\n  repo,\n  commit_sha\n})","documentationUrl":"https://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"commit_sha","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."},{"name":"ref","required":false,"description":""}]},{"id":"octokit-routes-repos-create-commit-comment","name":"Create a commit comment","description":"Create a comment for a commit using its `:commit_sha`.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.","example":"octokit.repos.createCommitComment({\n  owner,\n  repo,\n  commit_sha,\n  body\n})","documentationUrl":"https://developer.github.com/v3/repos/comments/#create-a-commit-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"commit_sha","required":true,"description":""},{"name":"body","required":true,"description":"The contents of the comment."},{"name":"path","required":false,"description":"Relative path of the file to comment on."},{"name":"position","required":false,"description":"Line index in the diff to comment on."},{"name":"line","required":false,"description":"**Deprecated**. Use **position** parameter instead. Line number in the file to comment on."},{"name":"sha","required":false,"description":""}]},{"id":"octokit-routes-repos-get-commit-comment","name":"Get a single commit comment","description":"","example":"octokit.repos.getCommitComment({\n  owner,\n  repo,\n  comment_id\n})","documentationUrl":"https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""}]},{"id":"octokit-routes-repos-update-commit-comment","name":"Update a commit comment","description":"","example":"octokit.repos.updateCommitComment({\n  owner,\n  repo,\n  comment_id,\n  body\n})","documentationUrl":"https://developer.github.com/v3/repos/comments/#update-a-commit-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""},{"name":"body","required":true,"description":"The contents of the comment"}]},{"id":"octokit-routes-repos-delete-commit-comment","name":"Delete a commit comment","description":"","example":"octokit.repos.deleteCommitComment({\n  owner,\n  repo,\n  comment_id\n})","documentationUrl":"https://developer.github.com/v3/repos/comments/#delete-a-commit-comment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"comment_id","required":true,"description":""}]},{"id":"octokit-routes-repos-list-commits","name":"List commits on a repository","description":"**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |","example":"octokit.repos.listCommits({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"sha","required":false,"description":"SHA or branch to start listing commits from."},{"name":"path","required":false,"description":"Only commits containing this file path will be returned."},{"name":"author","required":false,"description":"GitHub login or email address by which to filter by commit author."},{"name":"since","required":false,"description":"Only commits after this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"until","required":false,"description":"Only commits before this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-get-commit","name":"Get a single commit","description":"Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\nYou can pass the appropriate [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) to fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |\n\n","example":"octokit.repos.getCommit({\n  owner,\n  repo,\n  ref\n})","documentationUrl":"https://developer.github.com/v3/repos/commits/#get-a-single-commit","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"ref","required":true,"description":""},{"name":"sha","required":false,"description":""},{"name":"commit_sha","required":false,"description":""}]},{"id":"octokit-routes-repos-get-commit-ref-sha","name":"Get the SHA-1 of a commit reference","description":"**Note:** To access this endpoint, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.VERSION.sha\n\n```\n\nReturns the SHA-1 of the commit reference. You must have `read` access for the repository to get the SHA-1 of a commit reference. You can use this endpoint to check if a remote reference's SHA-1 is the same as your local reference's SHA-1 by providing the local SHA-1 reference as the ETag.\n\n","example":"octokit.repos.getCommitRefSha({\n  owner,\n  repo,\n  ref\n})","documentationUrl":"https://developer.github.com/v3/repos/commits/#get-a-single-commit","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"ref","required":true,"description":""}]},{"id":"octokit-routes-repos-compare-commits","name":"Compare two commits","description":"Both `:base` and `:head` must be branch names in `:repo`. To compare branches across other repositories in the same network as `:repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [Commit List API](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long to generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |","example":"octokit.repos.compareCommits({\n  owner,\n  repo,\n  base,\n  head\n})","documentationUrl":"https://developer.github.com/v3/repos/commits/#compare-two-commits","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"base","required":true,"description":""},{"name":"head","required":true,"description":""}]},{"id":"octokit-routes-repos-list-branches-for-head-commit","name":"List branches for HEAD commit","description":"Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nReturns all branches where the given commit SHA is the HEAD, or latest commit for the branch.","example":"octokit.repos.listBranchesForHeadCommit({\n  owner,\n  repo,\n  commit_sha\n})","documentationUrl":"https://developer.github.com/v3/repos/commits/#list-branches-for-head-commit","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"commit_sha","required":true,"description":""}]},{"id":"octokit-routes-repos-list-pull-requests-associated-with-commit","name":"List pull requests associated with commit","description":"Lists all pull requests containing the provided commit SHA, which can be from any point in the commit history. The results will include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests) endpoint.","example":"octokit.repos.listPullRequestsAssociatedWithCommit({\n  owner,\n  repo,\n  commit_sha\n})","documentationUrl":"https://developer.github.com/v3/repos/commits/#list-pull-requests-associated-with-commit","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"commit_sha","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-retrieve-community-profile-metrics","name":"Retrieve community profile metrics","description":"This endpoint will return all community profile metrics, including an overall health score, repository description, the presence of documentation, detected code of conduct, detected license, and the presence of ISSUE\\_TEMPLATE, PULL\\_REQUEST\\_TEMPLATE, README, and CONTRIBUTING files.","example":"octokit.repos.retrieveCommunityProfileMetrics({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/community/#retrieve-community-profile-metrics","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-get-readme","name":"Get the README","description":"Gets the preferred README for a repository.\n\nREADMEs support [custom media types](https://developer.github.com/v3/repos/contents/#custom-media-types) for retrieving the raw content or rendered HTML.","example":"octokit.repos.getReadme({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/contents/#get-the-readme","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"ref","required":false,"description":"The name of the commit/branch/tag."}]},{"id":"octokit-routes-repos-get-contents","name":"Get contents","description":"Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit `:path`, you will receive the contents of all files in the repository.\n\nFiles and symlinks support [a custom media type](https://developer.github.com/v3/repos/contents/#custom-media-types) for retrieving the raw content or rendered HTML (when supported). All content types support [a custom media type](https://developer.github.com/v3/repos/contents/#custom-media-types) to ensure the content is returned in a consistent object format.\n\n**Note**:\n\n*   To get a repository's contents recursively, you can [recursively get the tree](https://developer.github.com/v3/git/trees/).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees API](https://developer.github.com/v3/git/trees/#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\nThe response will be an array of objects, one object for each item in the directory.\n\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value _should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW). In the next major version of the API, the type will be returned as \"submodule\".\n\nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the API responds with the content of the file (in the [format shown above](https://developer.github.com/v3/repos/contents/#response-if-content-is-a-file)).\n\nOtherwise, the API responds with an object describing the symlink itself:\n\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific commit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out the submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the github.com URLs (`html_url` and `_links[\"html\"]`) will have null values.","example":"octokit.repos.getContents({\n  owner,\n  repo,\n  path\n})","documentationUrl":"https://developer.github.com/v3/repos/contents/#get-contents","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"path","required":true,"description":""},{"name":"ref","required":false,"description":"The name of the commit/branch/tag."}]},{"id":"octokit-routes-repos-create-or-update-file","name":"Create or update a file","description":"Creates a new file or updates an existing file in a repository.","example":"octokit.repos.createOrUpdateFile({\n  owner,\n  repo,\n  path,\n  message,\n  content\n})","documentationUrl":"https://developer.github.com/v3/repos/contents/#create-or-update-a-file","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"path","required":true,"description":""},{"name":"message","required":true,"description":"The commit message."},{"name":"content","required":true,"description":"The new file content, using Base64 encoding."},{"name":"sha","required":false,"description":"**Required if you are updating a file**. The blob SHA of the file being replaced."},{"name":"branch","required":false,"description":"The branch name."},{"name":"committer","required":false,"description":"The person that committed the file."},{"name":"committer.name","required":true,"description":"The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted."},{"name":"committer.email","required":true,"description":"The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted."},{"name":"author","required":false,"description":"The author of the file."},{"name":"author.name","required":true,"description":"The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted."},{"name":"author.email","required":true,"description":"The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted."}]},{"id":"octokit-routes-repos-create-file","name":"Create a file","description":"Creates a new file or updates an existing file in a repository.","example":"octokit.repos.createFile({\n  owner,\n  repo,\n  path,\n  message,\n  content\n})","documentationUrl":"https://developer.github.com/v3/repos/contents/#create-or-update-a-file","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"path","required":true,"description":""},{"name":"message","required":true,"description":"The commit message."},{"name":"content","required":true,"description":"The new file content, using Base64 encoding."},{"name":"sha","required":false,"description":"**Required if you are updating a file**. The blob SHA of the file being replaced."},{"name":"branch","required":false,"description":"The branch name."},{"name":"committer","required":false,"description":"The person that committed the file."},{"name":"committer.name","required":true,"description":"The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted."},{"name":"committer.email","required":true,"description":"The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted."},{"name":"author","required":false,"description":"The author of the file."},{"name":"author.name","required":true,"description":"The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted."},{"name":"author.email","required":true,"description":"The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted."}]},{"id":"octokit-routes-repos-update-file","name":"Update a file","description":"Creates a new file or updates an existing file in a repository.","example":"octokit.repos.updateFile({\n  owner,\n  repo,\n  path,\n  message,\n  content\n})","documentationUrl":"https://developer.github.com/v3/repos/contents/#create-or-update-a-file","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"path","required":true,"description":""},{"name":"message","required":true,"description":"The commit message."},{"name":"content","required":true,"description":"The new file content, using Base64 encoding."},{"name":"sha","required":false,"description":"**Required if you are updating a file**. The blob SHA of the file being replaced."},{"name":"branch","required":false,"description":"The branch name."},{"name":"committer","required":false,"description":"The person that committed the file."},{"name":"committer.name","required":true,"description":"The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted."},{"name":"committer.email","required":true,"description":"The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted."},{"name":"author","required":false,"description":"The author of the file."},{"name":"author.name","required":true,"description":"The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted."},{"name":"author.email","required":true,"description":"The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted."}]},{"id":"octokit-routes-repos-delete-file","name":"Delete a file","description":"Deletes a file in a repository.\n\nYou can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.\n\nThe `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.\n\nYou must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code.","example":"octokit.repos.deleteFile({\n  owner,\n  repo,\n  path,\n  message,\n  sha\n})","documentationUrl":"https://developer.github.com/v3/repos/contents/#delete-a-file","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"path","required":true,"description":""},{"name":"message","required":true,"description":"The commit message."},{"name":"sha","required":true,"description":"The blob SHA of the file being replaced."},{"name":"branch","required":false,"description":"The branch name."},{"name":"committer","required":null,"description":"object containing information about the committer."},{"name":"committer.name","required":false,"description":"The name of the author (or committer) of the commit"},{"name":"committer.email","required":false,"description":"The email of the author (or committer) of the commit"},{"name":"author","required":null,"description":"object containing information about the author."},{"name":"author.name","required":false,"description":"The name of the author (or committer) of the commit"},{"name":"author.email","required":false,"description":"The email of the author (or committer) of the commit"}]},{"id":"octokit-routes-repos-get-archive-link","name":"Get archive link","description":"Gets a redirect URL to download an archive for a repository. The `:archive_format` can be either `tarball` or `zipball`. The `:ref` must be a valid Git reference. If you omit `:ref`, the repository’s default branch (usually `master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use the `Location` header to make a second `GET` request.\n\n_Note_: For private repositories, these links are temporary and expire after five minutes.\n\nTo follow redirects with curl, use the `-L` switch:\n\n","example":"octokit.repos.getArchiveLink({\n  owner,\n  repo,\n  archive_format,\n  ref\n})","documentationUrl":"https://developer.github.com/v3/repos/contents/#get-archive-link","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"archive_format","required":true,"description":""},{"name":"ref","required":true,"description":""}]},{"id":"octokit-routes-repos-list-deployments","name":"List deployments","description":"Simple filtering of deployments is available via query parameters:","example":"octokit.repos.listDeployments({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/deployments/#list-deployments","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"sha","required":false,"description":"The SHA recorded at creation time."},{"name":"ref","required":false,"description":"The name of the ref. This can be a branch, tag, or SHA."},{"name":"task","required":false,"description":"The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`)."},{"name":"environment","required":false,"description":"The name of the environment that was deployed to (e.g., `staging` or `production`)."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-get-deployment","name":"Get a single deployment","description":"","example":"octokit.repos.getDeployment({\n  owner,\n  repo,\n  deployment_id\n})","documentationUrl":"https://developer.github.com/v3/repos/deployments/#get-a-single-deployment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"deployment_id","required":true,"description":""}]},{"id":"octokit-routes-repos-create-deployment","name":"Create a deployment","description":"Deployments offer a few configurable parameters with sane defaults.\n\nThe `ref` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them before we merge a pull request.\n\nThe `environment` parameter allows deployments to be issued to different runtime environments. Teams often have multiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter makes it easier to track which environments have requested deployments. The default environment is `production`.\n\nThe `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If the ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds, the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will return a failure response.\n\nBy default, [commit statuses](https://developer.github.com/v3/repos/statuses) for every submitted context must be in a `success` state. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do not require any contexts or create any commit statuses, the deployment will always succeed.\n\nThe `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text field that will be passed on when a deployment event is dispatched.\n\nThe `task` parameter is used by the deployment system to allow different execution paths. In the web world this might be `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an application with debugging enabled.\n\nUsers with `repo` or `repo_deployment` scopes can create a deployment for a given ref:\n\nA simple example putting the user and room into the payload to notify back to chat networks.\n\nA more advanced example specifying required commit statuses and bypassing auto-merging.\n\nYou will see this response when GitHub automatically merges the base branch into the topic branch instead of creating a deployment. This auto-merge happens when:\n\n*   Auto-merge option is enabled in the repository\n*   Topic branch does not include the latest changes on the base branch, which is `master`in the response example\n*   There are no merge conflicts\n\nIf there are no new commits in the base branch, a new request to create a deployment should give a successful response.\n\nThis error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't be merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.\n\nThis error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success` status for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.","example":"octokit.repos.createDeployment({\n  owner,\n  repo,\n  ref\n})","documentationUrl":"https://developer.github.com/v3/repos/deployments/#create-a-deployment","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"ref","required":true,"description":"The ref to deploy. This can be a branch, tag, or SHA."},{"name":"task","required":false,"description":"Specifies a task to execute (e.g., `deploy` or `deploy:migrations`)."},{"name":"auto_merge","required":false,"description":"Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch."},{"name":"required_contexts","required":false,"description":"The [status](https://developer.github.com/v3/repos/statuses/) contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts."},{"name":"payload","required":false,"description":"JSON payload with extra information about the deployment."},{"name":"environment","required":false,"description":"Name for the target deployment environment (e.g., `production`, `staging`, `qa`)."},{"name":"description","required":false,"description":"Short description of the deployment."},{"name":"transient_environment","required":false,"description":"Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: `false`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type."},{"name":"production_environment","required":false,"description":"Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `production` and `false` otherwise.  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type.  "}]},{"id":"octokit-routes-repos-list-deployment-statuses","name":"List deployment statuses","description":"Users with pull access can view deployment statuses for a deployment:","example":"octokit.repos.listDeploymentStatuses({\n  owner,\n  repo,\n  deployment_id\n})","documentationUrl":"https://developer.github.com/v3/repos/deployments/#list-deployment-statuses","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"deployment_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-get-deployment-status","name":"Get a single deployment status","description":"Users with pull access can view a deployment status for a deployment:","example":"octokit.repos.getDeploymentStatus({\n  owner,\n  repo,\n  deployment_id,\n  status_id\n})","documentationUrl":"https://developer.github.com/v3/repos/deployments/#get-a-single-deployment-status","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"deployment_id","required":true,"description":""},{"name":"status_id","required":true,"description":""}]},{"id":"octokit-routes-repos-create-deployment-status","name":"Create a deployment status","description":"Users with `push` access can create deployment statuses for a given deployment.\n\nGitHub Apps require `read & write` access to \"Deployments\" and `read-only` access to \"Repo contents\" (for private repos). OAuth Apps require the `repo_deployment` scope.","example":"octokit.repos.createDeploymentStatus({\n  owner,\n  repo,\n  deployment_id,\n  state\n})","documentationUrl":"https://developer.github.com/v3/repos/deployments/#create-a-deployment-status","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"deployment_id","required":true,"description":""},{"name":"state","required":true,"description":"The state of the status. Can be one of `error`, `failure`, `inactive`, `in_progress`, `queued` `pending`, or `success`. **Note:** To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. To use the `in_progress` and `queued` states, you must provide the [`application/vnd.github.flash-preview+json`](https://developer.github.com/v3/previews/#deployment-statuses) custom media type."},{"name":"target_url","required":false,"description":"The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`."},{"name":"log_url","required":false,"description":"The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type."},{"name":"description","required":false,"description":"A short description of the status. The maximum description length is 140 characters."},{"name":"environment","required":false,"description":"Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`. **Note:** This parameter requires you to use the [`application/vnd.github.flash-preview+json`](https://developer.github.com/v3/previews/#deployment-statuses) custom media type."},{"name":"environment_url","required":false,"description":"Sets the URL for accessing your environment. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type."},{"name":"auto_inactive","required":false,"description":"Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status's deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`  \n**Note:** To add an `inactive` status to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://developer.github.com/v3/previews/#deployment-statuses) custom media type.  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. **Note:** To add an `inactive` status to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://developer.github.com/v3/previews/#deployment-statuses) custom media type.  "}]},{"id":"octokit-routes-repos-list-downloads","name":"List downloads for a repository","description":"","example":"octokit.repos.listDownloads({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/downloads/#list-downloads-for-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-get-download","name":"Get a single download","description":"","example":"octokit.repos.getDownload({\n  owner,\n  repo,\n  download_id\n})","documentationUrl":"https://developer.github.com/v3/repos/downloads/#get-a-single-download","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"download_id","required":true,"description":""}]},{"id":"octokit-routes-repos-delete-download","name":"Delete a download","description":"","example":"octokit.repos.deleteDownload({\n  owner,\n  repo,\n  download_id\n})","documentationUrl":"https://developer.github.com/v3/repos/downloads/#delete-a-download","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"download_id","required":true,"description":""}]},{"id":"octokit-routes-repos-list-forks","name":"List forks","description":"","example":"octokit.repos.listForks({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/forks/#list-forks","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"sort","required":false,"description":"The sort order. Can be either `newest`, `oldest`, or `stargazers`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-create-fork","name":"Create a fork","description":"Create a fork for the authenticated user.\n\n**Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Support](https://github.com/contact).","example":"octokit.repos.createFork({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/forks/#create-a-fork","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"organization","required":false,"description":"Optional parameter to specify the organization name if forking into an organization."}]},{"id":"octokit-routes-repos-list-hooks","name":"List hooks","description":"","example":"octokit.repos.listHooks({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/hooks/#list-hooks","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-get-hook","name":"Get single hook","description":"","example":"octokit.repos.getHook({\n  owner,\n  repo,\n  hook_id\n})","documentationUrl":"https://developer.github.com/v3/repos/hooks/#get-single-hook","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"hook_id","required":true,"description":""}]},{"id":"octokit-routes-repos-create-hook","name":"Create a hook","description":"Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can share the same `config` as long as those webhooks do not have any `events` that overlap.\n\nHere's how you can create a hook that posts payloads in JSON format:","example":"octokit.repos.createHook({\n  owner,\n  repo,\n  config\n})","documentationUrl":"https://developer.github.com/v3/repos/hooks/#create-a-hook","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"name","required":false,"description":"Use `web` to create a webhook. This parameter only accepts the value `web`."},{"name":"config","required":true,"description":"Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/v3/repos/hooks/#create-hook-config-params)."},{"name":"config.url","required":true,"description":"The URL to which the payloads will be delivered."},{"name":"config.content_type","required":false,"description":"The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`."},{"name":"config.secret","required":false,"description":"If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/webhooks/#delivery-headers) header."},{"name":"config.insecure_ssl","required":false,"description":"Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**"},{"name":"events","required":false,"description":"Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for."},{"name":"active","required":false,"description":"Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications."}]},{"id":"octokit-routes-repos-update-hook","name":"Edit a hook","description":"","example":"octokit.repos.updateHook({\n  owner,\n  repo,\n  hook_id\n})","documentationUrl":"https://developer.github.com/v3/repos/hooks/#edit-a-hook","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"hook_id","required":true,"description":""},{"name":"config","required":false,"description":"Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/v3/repos/hooks/#create-hook-config-params)."},{"name":"config.url","required":true,"description":"The URL to which the payloads will be delivered."},{"name":"config.content_type","required":false,"description":"The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`."},{"name":"config.secret","required":false,"description":"If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/webhooks/#delivery-headers) header."},{"name":"config.insecure_ssl","required":false,"description":"Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**"},{"name":"events","required":false,"description":"Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for. This replaces the entire array of events."},{"name":"add_events","required":false,"description":"Determines a list of events to be added to the list of events that the Hook triggers for."},{"name":"remove_events","required":false,"description":"Determines a list of events to be removed from the list of events that the Hook triggers for."},{"name":"active","required":false,"description":"Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications."}]},{"id":"octokit-routes-repos-test-push-hook","name":"Test a push hook","description":"This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.\n\n**Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`","example":"octokit.repos.testPushHook({\n  owner,\n  repo,\n  hook_id\n})","documentationUrl":"https://developer.github.com/v3/repos/hooks/#test-a-push-hook","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"hook_id","required":true,"description":""}]},{"id":"octokit-routes-repos-ping-hook","name":"Ping a hook","description":"This will trigger a [ping event](https://developer.github.com/webhooks/#ping-event) to be sent to the hook.","example":"octokit.repos.pingHook({\n  owner,\n  repo,\n  hook_id\n})","documentationUrl":"https://developer.github.com/v3/repos/hooks/#ping-a-hook","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"hook_id","required":true,"description":""}]},{"id":"octokit-routes-repos-delete-hook","name":"Delete a hook","description":"","example":"octokit.repos.deleteHook({\n  owner,\n  repo,\n  hook_id\n})","documentationUrl":"https://developer.github.com/v3/repos/hooks/#delete-a-hook","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"hook_id","required":true,"description":""}]},{"id":"octokit-routes-repos-list-invitations","name":"List invitations for a repository","description":"When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.\n\n","example":"octokit.repos.listInvitations({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-delete-invitation","name":"Delete a repository invitation","description":"","example":"octokit.repos.deleteInvitation({\n  owner,\n  repo,\n  invitation_id\n})","documentationUrl":"https://developer.github.com/v3/repos/invitations/#delete-a-repository-invitation","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"invitation_id","required":true,"description":""}]},{"id":"octokit-routes-repos-update-invitation","name":"Update a repository invitation","description":"","example":"octokit.repos.updateInvitation({\n  owner,\n  repo,\n  invitation_id\n})","documentationUrl":"https://developer.github.com/v3/repos/invitations/#update-a-repository-invitation","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"invitation_id","required":true,"description":""},{"name":"permissions","required":false,"description":"The permissions that the associated user will have on the repository. Valid values are `read`, `write`, and `admin`."}]},{"id":"octokit-routes-repos-list-invitations-for-authenticated-user","name":"List a user's repository invitations","description":"When authenticating as a user, this endpoint will list all currently open repository invitations for that user.\n\n","example":"octokit.repos.listInvitationsForAuthenticatedUser()","documentationUrl":"https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-accept-invitation","name":"Accept a repository invitation","description":"","example":"octokit.repos.acceptInvitation({\n  invitation_id\n})","documentationUrl":"https://developer.github.com/v3/repos/invitations/#accept-a-repository-invitation","params":[{"name":"invitation_id","required":true,"description":""}]},{"id":"octokit-routes-repos-decline-invitation","name":"Decline a repository invitation","description":"","example":"octokit.repos.declineInvitation({\n  invitation_id\n})","documentationUrl":"https://developer.github.com/v3/repos/invitations/#decline-a-repository-invitation","params":[{"name":"invitation_id","required":true,"description":""}]},{"id":"octokit-routes-repos-list-deploy-keys","name":"List deploy keys","description":"","example":"octokit.repos.listDeployKeys({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/keys/#list-deploy-keys","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-get-deploy-key","name":"Get a deploy key","description":"","example":"octokit.repos.getDeployKey({\n  owner,\n  repo,\n  key_id\n})","documentationUrl":"https://developer.github.com/v3/repos/keys/#get-a-deploy-key","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"key_id","required":true,"description":""}]},{"id":"octokit-routes-repos-add-deploy-key","name":"Add a new deploy key","description":"Here's how you can create a read-only deploy key:\n\n","example":"octokit.repos.addDeployKey({\n  owner,\n  repo,\n  key\n})","documentationUrl":"https://developer.github.com/v3/repos/keys/#add-a-new-deploy-key","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"title","required":false,"description":"A name for the key."},{"name":"key","required":true,"description":"The contents of the key."},{"name":"read_only","required":false,"description":"If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.  \n  \nDeploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see \"[Repository permission levels for an organization](https://help.github.com/articles/repository-permission-levels-for-an-organization/)\" and \"[Permission levels for a user account repository](https://help.github.com/articles/permission-levels-for-a-user-account-repository/).\""}]},{"id":"octokit-routes-repos-remove-deploy-key","name":"Remove a deploy key","description":"","example":"octokit.repos.removeDeployKey({\n  owner,\n  repo,\n  key_id\n})","documentationUrl":"https://developer.github.com/v3/repos/keys/#remove-a-deploy-key","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"key_id","required":true,"description":""}]},{"id":"octokit-routes-repos-merge","name":"Perform a merge","description":"","example":"octokit.repos.merge({\n  owner,\n  repo,\n  base,\n  head\n})","documentationUrl":"https://developer.github.com/v3/repos/merging/#perform-a-merge","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"base","required":true,"description":"The name of the base branch that the head will be merged into."},{"name":"head","required":true,"description":"The head to merge. This can be a branch name or a commit SHA1."},{"name":"commit_message","required":false,"description":"Commit message to use for the merge commit. If omitted, a default message will be used."}]},{"id":"octokit-routes-repos-get-pages","name":"Get information about a Pages site","description":"","example":"octokit.repos.getPages({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-enable-pages-site","name":"Enable a Pages site","description":"","example":"octokit.repos.enablePagesSite({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/pages/#enable-a-pages-site","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"source","required":false,"description":""},{"name":"source.branch","required":false,"description":"The repository branch used to publish your [site's source files](https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/). Can be either `master` or `gh-pages`."},{"name":"source.path","required":false,"description":"The repository directory that includes the source files for the Pages site. When `branch` is `master`, you can change `path` to `/docs`. When `branch` is `gh-pages`, you are unable to specify a `path` other than `/`."}]},{"id":"octokit-routes-repos-disable-pages-site","name":"Disable a Pages site","description":"","example":"octokit.repos.disablePagesSite({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/pages/#disable-a-pages-site","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-update-information-about-pages-site","name":"Update information about a Pages site","description":"","example":"octokit.repos.updateInformationAboutPagesSite({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/pages/#update-information-about-a-pages-site","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"cname","required":false,"description":"Specify a custom domain for the repository. Sending a `null` value will remove the custom domain. For more about custom domains, see \"[Using a custom domain with GitHub Pages](https://help.github.com/articles/using-a-custom-domain-with-github-pages/).\""},{"name":"source","required":false,"description":"Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory `/docs`. Possible values are `\"gh-pages\"`, `\"master\"`, and `\"master /docs\"`."}]},{"id":"octokit-routes-repos-request-page-build","name":"Request a page build","description":"You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.\n\nBuild requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.","example":"octokit.repos.requestPageBuild({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/pages/#request-a-page-build","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-list-pages-builds","name":"List Pages builds","description":"","example":"octokit.repos.listPagesBuilds({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/pages/#list-pages-builds","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-get-latest-pages-build","name":"Get latest Pages build","description":"","example":"octokit.repos.getLatestPagesBuild({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/pages/#get-latest-pages-build","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-get-pages-build","name":"Get a specific Pages build","description":"","example":"octokit.repos.getPagesBuild({\n  owner,\n  repo,\n  build_id\n})","documentationUrl":"https://developer.github.com/v3/repos/pages/#get-a-specific-pages-build","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"build_id","required":true,"description":""}]},{"id":"octokit-routes-repos-list-releases","name":"List releases for a repository","description":"This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://developer.github.com/v3/repos/#list-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases.","example":"octokit.repos.listReleases({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-get-release","name":"Get a single release","description":"**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://developer.github.com/v3/#hypermedia).","example":"octokit.repos.getRelease({\n  owner,\n  repo,\n  release_id\n})","documentationUrl":"https://developer.github.com/v3/repos/releases/#get-a-single-release","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"release_id","required":true,"description":""}]},{"id":"octokit-routes-repos-get-latest-release","name":"Get the latest release","description":"View the latest published full release for the repository.\n\nThe latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.","example":"octokit.repos.getLatestRelease({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/releases/#get-the-latest-release","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-get-release-by-tag","name":"Get a release by tag name","description":"Get a published release with the specified tag.","example":"octokit.repos.getReleaseByTag({\n  owner,\n  repo,\n  tag\n})","documentationUrl":"https://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"tag","required":true,"description":""}]},{"id":"octokit-routes-repos-create-release","name":"Create a release","description":"Users with push access to the repository can create a release.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.","example":"octokit.repos.createRelease({\n  owner,\n  repo,\n  tag_name\n})","documentationUrl":"https://developer.github.com/v3/repos/releases/#create-a-release","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"tag_name","required":true,"description":"The name of the tag."},{"name":"target_commitish","required":false,"description":"Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists."},{"name":"name","required":false,"description":"The name of the release."},{"name":"body","required":false,"description":"Text describing the contents of the tag."},{"name":"draft","required":false,"description":"`true` to create a draft (unpublished) release, `false` to create a published one."},{"name":"prerelease","required":false,"description":"`true` to identify the release as a prerelease. `false` to identify the release as a full release."}]},{"id":"octokit-routes-repos-update-release","name":"Edit a release","description":"Users with push access to the repository can edit a release.","example":"octokit.repos.updateRelease({\n  owner,\n  repo,\n  release_id\n})","documentationUrl":"https://developer.github.com/v3/repos/releases/#edit-a-release","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"release_id","required":true,"description":""},{"name":"tag_name","required":false,"description":"The name of the tag."},{"name":"target_commitish","required":false,"description":"Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists."},{"name":"name","required":false,"description":"The name of the release."},{"name":"body","required":false,"description":"Text describing the contents of the tag."},{"name":"draft","required":false,"description":"`true` makes the release a draft, and `false` publishes the release."},{"name":"prerelease","required":false,"description":"`true` to identify the release as a prerelease, `false` to identify the release as a full release."}]},{"id":"octokit-routes-repos-delete-release","name":"Delete a release","description":"Users with push access to the repository can delete a release.","example":"octokit.repos.deleteRelease({\n  owner,\n  repo,\n  release_id\n})","documentationUrl":"https://developer.github.com/v3/repos/releases/#delete-a-release","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"release_id","required":true,"description":""}]},{"id":"octokit-routes-repos-list-assets-for-release","name":"List assets for a release","description":"","example":"octokit.repos.listAssetsForRelease({\n  owner,\n  repo,\n  release_id\n})","documentationUrl":"https://developer.github.com/v3/repos/releases/#list-assets-for-a-release","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"release_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-upload-release-asset","name":"Upload a release asset","description":"This endpoint makes use of [a Hypermedia relation](https://developer.github.com/v3/#hypermedia) to determine which URL to access. This endpoint is provided by a URI template in [the release's API response](https://developer.github.com/v3/repos/releases/#get-a-single-release). You need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.\n\nThe asset data is expected in its raw binary form, rather than JSON. Everything else about the endpoint is the same as the rest of the API. For example, you'll still need to pass your authentication to be able to upload an asset.\n\nSend the raw binary content of the asset as the request body.\n\nThis may leave an empty asset with a state of `\"new\"`. It can be safely deleted.","example":"octokit.repos.uploadReleaseAsset({\n  url,\n  headers,\n  name,\n  file\n})","documentationUrl":"https://developer.github.com/v3/repos/releases/#upload-a-release-asset","params":[{"name":"url","required":true,"description":""},{"name":"headers","required":true,"description":"Request headers containing `content-type` and `content-length`"},{"name":"headers.content-length","required":true,"description":"The content size of the asset in bytes"},{"name":"headers.content-type","required":true,"description":"The content type of the asset. This should be set in the Header. Example: `\"application/zip\"`. For a list of acceptable types, refer this list of [media types](https://www.iana.org/assignments/media-types/media-types.xhtml)."},{"name":"name","required":true,"description":"The file name of the asset. This should be set in a URI query parameter."},{"name":"label","required":false,"description":"An alternate short description of the asset. Used in place of the filename. This should be set in a URI query parameter."},{"name":"file","required":true,"description":""}]},{"id":"octokit-routes-repos-get-release-asset","name":"Get a single release asset","description":"To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://developer.github.com/v3/media/#media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.","example":"octokit.repos.getReleaseAsset({\n  owner,\n  repo,\n  asset_id\n})","documentationUrl":"https://developer.github.com/v3/repos/releases/#get-a-single-release-asset","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"asset_id","required":true,"description":""}]},{"id":"octokit-routes-repos-update-release-asset","name":"Edit a release asset","description":"Users with push access to the repository can edit a release asset.","example":"octokit.repos.updateReleaseAsset({\n  owner,\n  repo,\n  asset_id\n})","documentationUrl":"https://developer.github.com/v3/repos/releases/#edit-a-release-asset","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"asset_id","required":true,"description":""},{"name":"name","required":false,"description":"The file name of the asset."},{"name":"label","required":false,"description":"An alternate short description of the asset. Used in place of the filename."}]},{"id":"octokit-routes-repos-delete-release-asset","name":"Delete a release asset","description":"","example":"octokit.repos.deleteReleaseAsset({\n  owner,\n  repo,\n  asset_id\n})","documentationUrl":"https://developer.github.com/v3/repos/releases/#delete-a-release-asset","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"asset_id","required":true,"description":""}]},{"id":"octokit-routes-repos-get-contributors-stats","name":"Get contributors list with additions, deletions, and commit counts","description":"*   `total` - The Total number of commits authored by the contributor.\n\nWeekly Hash (`weeks` array):\n\n*   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n*   `a` - Number of additions\n*   `d` - Number of deletions\n*   `c` - Number of commits\n\n","example":"octokit.repos.getContributorsStats({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/statistics/#get-contributors-list-with-additions-deletions-and-commit-counts","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-get-commit-activity-stats","name":"Get the last year of commit activity data","description":"Returns the last year of commit activity grouped by week. The `days` array is a group of commits per day, starting on `Sunday`.\n\n","example":"octokit.repos.getCommitActivityStats({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/statistics/#get-the-last-year-of-commit-activity-data","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-get-code-frequency-stats","name":"Get the number of additions and deletions per week","description":"Returns a weekly aggregate of the number of additions and deletions pushed to a repository.\n\n","example":"octokit.repos.getCodeFrequencyStats({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/statistics/#get-the-number-of-additions-and-deletions-per-week","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-get-participation-stats","name":"Get the weekly commit count for the repository owner and everyone else","description":"Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including the `owner` in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract `owner` from `all`.\n\nThe array order is oldest week (index 0) to most recent week.\n\n","example":"octokit.repos.getParticipationStats({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/statistics/#get-the-weekly-commit-count-for-the-repository-owner-and-everyone-else","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-get-punch-card-stats","name":"Get the number of commits per hour in each day","description":"Each array contains the day number, hour number, and number of commits:\n\n*   `0-6`: Sunday - Saturday\n*   `0-23`: Hour of day\n*   Number of commits\n\nFor example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.","example":"octokit.repos.getPunchCardStats({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/statistics/#get-the-number-of-commits-per-hour-in-each-day","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-create-status","name":"Create a status","description":"Users with push access in a repository can create commit statuses for a given SHA.\n\nNote: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.","example":"octokit.repos.createStatus({\n  owner,\n  repo,\n  sha,\n  state\n})","documentationUrl":"https://developer.github.com/v3/repos/statuses/#create-a-status","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"sha","required":true,"description":""},{"name":"state","required":true,"description":"The state of the status. Can be one of `error`, `failure`, `pending`, or `success`."},{"name":"target_url","required":false,"description":"The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.  \nFor example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:  \n`http://ci.example.com/user/repo/build/sha`"},{"name":"description","required":false,"description":"A short description of the status."},{"name":"context","required":false,"description":"A string label to differentiate this status from the status of other systems."}]},{"id":"octokit-routes-repos-list-statuses-for-ref","name":"List statuses for a specific ref","description":"Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.\n\nThis resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.","example":"octokit.repos.listStatusesForRef({\n  owner,\n  repo,\n  ref\n})","documentationUrl":"https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"ref","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-repos-get-combined-status-for-ref","name":"Get the combined status for a specific ref","description":"Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://developer.github.com/v3/#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`","example":"octokit.repos.getCombinedStatusForRef({\n  owner,\n  repo,\n  ref\n})","documentationUrl":"https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"ref","required":true,"description":""}]},{"id":"octokit-routes-repos-get-top-referrers","name":"List referrers","description":"Get the top 10 referrers over the last 14 days.","example":"octokit.repos.getTopReferrers({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/traffic/#list-referrers","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-get-top-paths","name":"List paths","description":"Get the top 10 popular contents over the last 14 days.","example":"octokit.repos.getTopPaths({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/traffic/#list-paths","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-repos-get-views","name":"Views","description":"Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.","example":"octokit.repos.getViews({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/traffic/#views","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per","required":false,"description":"Must be one of: `day`, `week`."}]},{"id":"octokit-routes-repos-get-clones","name":"Clones","description":"Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.","example":"octokit.repos.getClones({\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/repos/traffic/#clones","params":[{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"per","required":false,"description":"Must be one of: `day`, `week`."}]}]}},{"node":{"id":"octokit-routes-scim","name":"scim","methods":[{"id":"octokit-routes-scim-list-provisioned-identities","name":"Get a list of provisioned identities","description":"To filter for a specific email address, use the `email` query parameter and the `eq` operator:\n\nYour filter would look like this cURL command:\n\nRetrieves users that match the filter. In the example, we searched only for [octocat@github.com](mailto:octocat@github.com).\n\nRetrieves a paginated list of all provisioned organization members, including pending invitations.","example":"octokit.scim.listProvisionedIdentities({\n  org\n})","documentationUrl":"https://developer.github.com/v3/scim/#get-a-list-of-provisioned-identities","params":[{"name":"org","required":true,"description":""},{"name":"startIndex","required":false,"description":"Used for pagination: the index of the first result to return."},{"name":"count","required":false,"description":"Used for pagination: the number of results to return."},{"name":"filter","required":false,"description":"Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query: `?filter=userName%20eq%20\\\"Octocat\\\"`."}]},{"id":"octokit-routes-scim-get-provisioning-details-for-user","name":"Get provisioning details for a single user","description":"","example":"octokit.scim.getProvisioningDetailsForUser({\n  org,\n  scim_user_id\n})","documentationUrl":"https://developer.github.com/v3/scim/#get-provisioning-details-for-a-single-user","params":[{"name":"org","required":true,"description":""},{"name":"scim_user_id","required":true,"description":""},{"name":"external_identity_guid","required":false,"description":""}]},{"id":"octokit-routes-scim-provision-and-invite-users","name":"Provision and invite users","description":"Provision organization membership for a user, and send an activation email to the email address.\n\nAs shown in the following example, you must at least provide the required values for the user: `userName`, `name`, and `emails`.","example":"octokit.scim.provisionAndInviteUsers({\n  org\n})","documentationUrl":"https://developer.github.com/v3/scim/#provision-and-invite-users","params":[{"name":"org","required":true,"description":""}]},{"id":"octokit-routes-scim-provision-invite-users","name":"Provision and invite users","description":"Provision organization membership for a user, and send an activation email to the email address.\n\nAs shown in the following example, you must at least provide the required values for the user: `userName`, `name`, and `emails`.","example":"octokit.scim.provisionInviteUsers({\n  org\n})","documentationUrl":"https://developer.github.com/v3/scim/#provision-and-invite-users","params":[{"name":"org","required":true,"description":""}]},{"id":"octokit-routes-scim-replace-provisioned-user-information","name":"Replace a provisioned user's information","description":"Replaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update a user attribute](https://developer.github.com/v3/scim/#update-a-user-attribute) endpoint instead.\n\nAs shown in the following example, you must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n**Warning:** Setting `active: false` removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.","example":"octokit.scim.replaceProvisionedUserInformation({\n  org,\n  scim_user_id\n})","documentationUrl":"https://developer.github.com/v3/scim/#replace-a-provisioned-users-information","params":[{"name":"org","required":true,"description":""},{"name":"scim_user_id","required":true,"description":""},{"name":"external_identity_guid","required":false,"description":""}]},{"id":"octokit-routes-scim-update-provisioned-org-membership","name":"Update a provisioned organization membership","description":"Replaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update a user attribute](https://developer.github.com/v3/scim/#update-a-user-attribute) endpoint instead.\n\nAs shown in the following example, you must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n**Warning:** Setting `active: false` removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.","example":"octokit.scim.updateProvisionedOrgMembership({\n  org,\n  scim_user_id\n})","documentationUrl":"https://developer.github.com/v3/scim/#replace-a-provisioned-users-information","params":[{"name":"org","required":true,"description":""},{"name":"scim_user_id","required":true,"description":""},{"name":"external_identity_guid","required":false,"description":""}]},{"id":"octokit-routes-scim-update-user-attribute","name":"Update a user attribute","description":"Allows you to change a provisioned user's individual attributes. To change a user's values, you must provide a specific `Operations` JSON format that contains at least one of the `add`, `remove`, or `replace` operations.\n\nThe following example shows adding a new email address and updating the user's given name. For other examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n\n**Note:** Complicated SCIM `path` selectors that include filters are not supported. For example, a `path` selector defined as `\"path\": \"emails[type eq \\\"work\\\"]\"` will not work.\n\n**Warning:** If you set `active:false` using the `replace` operation (as shown in the JSON example below), it removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.\n\n```\n{\n  \"Operations\":[{\n    \"op\":\"replace\",\n    \"value\":{\n      \"active\":false\n    }\n  }]\n}\n\n```","example":"octokit.scim.updateUserAttribute({\n  org,\n  scim_user_id\n})","documentationUrl":"https://developer.github.com/v3/scim/#update-a-user-attribute","params":[{"name":"org","required":true,"description":""},{"name":"scim_user_id","required":true,"description":""},{"name":"external_identity_guid","required":false,"description":""}]},{"id":"octokit-routes-scim-remove-user-from-org","name":"Remove a user from the organization","description":"","example":"octokit.scim.removeUserFromOrg({\n  org,\n  scim_user_id\n})","documentationUrl":"https://developer.github.com/v3/scim/#remove-a-user-from-the-organization","params":[{"name":"org","required":true,"description":""},{"name":"scim_user_id","required":true,"description":""},{"name":"external_identity_guid","required":false,"description":""}]}]}},{"node":{"id":"octokit-routes-search","name":"search","methods":[{"id":"octokit-routes-search-repos","name":"Search repositories","description":"Find repositories via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\nSuppose you want to search for popular Tetris repositories written in Assembly. Your query might look like this.\n\nYou can search for multiple topics by adding more `topic:` instances, and including the `mercy-preview` header. For example:\n\nIn this request, we're searching for repositories with the word `tetris` in the name, the description, or the README. We're limiting the results to only find repositories where the primary language is Assembly. We're sorting by stars in descending order, so that the most popular repositories appear first in the search results.","example":"octokit.search.repos({\n  q\n})","documentationUrl":"https://developer.github.com/v3/search/#search-repositories","params":[{"name":"q","required":true,"description":"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query). See \"[Searching for repositories](https://help.github.com/articles/searching-for-repositories/)\" for a detailed list of qualifiers."},{"name":"sort","required":false,"description":"Sorts the results of your query by number of `stars`, `forks`, or `help-wanted-issues` or how recently the items were `updated`."},{"name":"order","required":false,"description":"Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-search-commits","name":"Search commits","description":"Find commits via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\n**Considerations for commit search**\n\nOnly the _default branch_ is considered. In most cases, this will be the `master` branch.\n\nSuppose you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:","example":"octokit.search.commits({\n  q\n})","documentationUrl":"https://developer.github.com/v3/search/#search-commits","params":[{"name":"q","required":true,"description":"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query). See \"[Searching commits](https://help.github.com/articles/searching-commits/)\" for a detailed list of qualifiers."},{"name":"sort","required":false,"description":"Sorts the results of your query by `author-date` or `committer-date`."},{"name":"order","required":false,"description":"Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-search-code","name":"Search code","description":"Find file contents via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\n**Note:** You must [authenticate](https://developer.github.com/v3/#authentication) to search for code across all public repositories.\n\n**Considerations for code search**\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing language:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.\n\nSuppose you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery). Your query would look something like this:\n\nHere, we're searching for the keyword `addClass` within a file's contents. We're making sure that we're only looking in files where the language is JavaScript. And we're scoping the search to the `repo:jquery/jquery` repository.","example":"octokit.search.code({\n  q\n})","documentationUrl":"https://developer.github.com/v3/search/#search-code","params":[{"name":"q","required":true,"description":"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query). See \"[Searching code](https://help.github.com/articles/searching-code/)\" for a detailed list of qualifiers."},{"name":"sort","required":false,"description":"Sorts the results of your query. Can only be `indexed`, which indicates how recently a file has been indexed by the GitHub search infrastructure."},{"name":"order","required":false,"description":"Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-search-issues-and-pull-requests","name":"Search issues and pull requests","description":"Find issues by state and keyword. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\nLet's say you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\nIn this query, we're searching for the keyword `windows`, within any open issue that's labeled as `bug`. The search runs across repositories whose primary language is Python. We’re sorting by creation date in ascending order, so that the oldest issues appear first in the search results.","example":"octokit.search.issuesAndPullRequests({\n  q\n})","documentationUrl":"https://developer.github.com/v3/search/#search-issues-and-pull-requests","params":[{"name":"q","required":true,"description":"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query). See \"[Searching issues and pull requests](https://help.github.com/articles/searching-issues-and-pull-requests/)\" for a detailed list of qualifiers."},{"name":"sort","required":false,"description":"Sorts the results of your query by the number of `comments`, `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`, `reactions-thinking_face`, `reactions-heart`, `reactions-tada`, or `interactions`. You can also sort results by how recently the items were `created` or `updated`,"},{"name":"order","required":false,"description":"Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-search-issues","name":"Search issues","description":"Find issues by state and keyword. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\nLet's say you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\nIn this query, we're searching for the keyword `windows`, within any open issue that's labeled as `bug`. The search runs across repositories whose primary language is Python. We’re sorting by creation date in ascending order, so that the oldest issues appear first in the search results.","example":"octokit.search.issues({\n  q\n})","documentationUrl":"https://developer.github.com/v3/search/#search-issues-and-pull-requests","params":[{"name":"q","required":true,"description":"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query). See \"[Searching issues and pull requests](https://help.github.com/articles/searching-issues-and-pull-requests/)\" for a detailed list of qualifiers."},{"name":"sort","required":false,"description":"Sorts the results of your query by the number of `comments`, `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`, `reactions-thinking_face`, `reactions-heart`, `reactions-tada`, or `interactions`. You can also sort results by how recently the items were `created` or `updated`,"},{"name":"order","required":false,"description":"Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-search-users","name":"Search users","description":"Find users via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\nImagine you're looking for a list of popular users. You might try out this query:\n\nHere, we're looking at users with the name Tom. We're only interested in those with more than 42 repositories, and only if they have over 1,000 followers.","example":"octokit.search.users({\n  q\n})","documentationUrl":"https://developer.github.com/v3/search/#search-users","params":[{"name":"q","required":true,"description":"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query). See \"[Searching users](https://help.github.com/articles/searching-users/)\" for a detailed list of qualifiers."},{"name":"sort","required":false,"description":"Sorts the results of your query by number of `followers` or `repositories`, or when the person `joined` GitHub."},{"name":"order","required":false,"description":"Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-search-topics","name":"Search topics","description":"Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for topics, you can get text match metadata for the topic's **short\\_description**, **description**, **name**, or **display\\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\nSee \"[Searching topics](https://help.github.com/articles/searching-topics/)\" for a detailed list of qualifiers.\n\nSuppose you want to search for topics related to Ruby that are featured on [https://github.com/topics](https://github.com/topics). Your query might look like this:\n\nIn this request, we're searching for topics with the keyword `ruby`, and we're limiting the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.\n\n**Note:** A search for featured Ruby topics only has 6 total results, so a [Link header](https://developer.github.com/v3/#link-header) indicating pagination is not included in the response.","example":"octokit.search.topics({\n  q\n})","documentationUrl":"https://developer.github.com/v3/search/#search-topics","params":[{"name":"q","required":true,"description":"The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query)."}]},{"id":"octokit-routes-search-labels","name":"Search labels","description":"Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\nSuppose you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\nThe labels that best match for the query appear first in the search results.","example":"octokit.search.labels({\n  repository_id,\n  q\n})","documentationUrl":"https://developer.github.com/v3/search/#search-labels","params":[{"name":"repository_id","required":true,"description":"The id of the repository."},{"name":"q","required":true,"description":"The search keywords. This endpoint does not accept qualifiers in the query. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query)."},{"name":"sort","required":false,"description":"Sorts the results of your query by when the label was `created` or `updated`."},{"name":"order","required":false,"description":"Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`."}]}]}},{"node":{"id":"octokit-routes-teams","name":"teams","methods":[{"id":"octokit-routes-teams-list","name":"List teams","description":"","example":"octokit.teams.list({\n  org\n})","documentationUrl":"https://developer.github.com/v3/teams/#list-teams","params":[{"name":"org","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-teams-get","name":"Get team","description":"","example":"octokit.teams.get({\n  team_id\n})","documentationUrl":"https://developer.github.com/v3/teams/#get-team","params":[{"name":"team_id","required":true,"description":""}]},{"id":"octokit-routes-teams-get-by-name","name":"Get team by name","description":"Gets a team using the team's `slug`. GitHub generates the `slug` from the team `name`.","example":"octokit.teams.getByName({\n  org,\n  team_slug\n})","documentationUrl":"https://developer.github.com/v3/teams/#get-team-by-name","params":[{"name":"org","required":true,"description":""},{"name":"team_slug","required":true,"description":""}]},{"id":"octokit-routes-teams-create","name":"Create team","description":"To create a team, the authenticated user must be a member or owner of `:org`. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see \"[Setting team creation permissions](https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization).\"","example":"octokit.teams.create({\n  org,\n  name\n})","documentationUrl":"https://developer.github.com/v3/teams/#create-team","params":[{"name":"org","required":true,"description":""},{"name":"name","required":true,"description":"The name of the team."},{"name":"description","required":false,"description":"The description of the team."},{"name":"maintainers","required":false,"description":"The logins of organization members to add as maintainers of the team."},{"name":"repo_names","required":false,"description":"The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to."},{"name":"privacy","required":false,"description":"The level of privacy this team should have. The options are:  \n**For a non-nested team:**  \n\\* `secret` - only visible to organization owners and members of this team.  \n\\* `closed` - visible to all members of this organization.  \nDefault: `secret`  \n**For a parent or child team:**  \n\\* `closed` - visible to all members of this organization.  \nDefault for child team: `closed`  \n**Note**: You must pass the `hellcat-preview` media type to set privacy default to `closed` for child teams. **For a parent or child team:**  "},{"name":"permission","required":false,"description":"**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` - team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` - team members can pull, push and administer newly-added repositories."},{"name":"parent_team_id","required":false,"description":"The ID of a team to set as the parent team. **Note**: You must pass the `hellcat-preview` media type to use this parameter."}]},{"id":"octokit-routes-teams-update","name":"Edit team","description":"To edit a team, the authenticated user must either be an owner of the org that the team is associated with, or a maintainer of the team.\n\n**Note:** With nested teams, the `privacy` for parent teams cannot be `secret`.","example":"octokit.teams.update({\n  team_id,\n  name\n})","documentationUrl":"https://developer.github.com/v3/teams/#edit-team","params":[{"name":"team_id","required":true,"description":""},{"name":"name","required":true,"description":"The name of the team."},{"name":"description","required":false,"description":"The description of the team."},{"name":"privacy","required":false,"description":"The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:  \n**For a non-nested team:**  \n\\* `secret` - only visible to organization owners and members of this team.  \n\\* `closed` - visible to all members of this organization.  \n**For a parent or child team:**  \n\\* `closed` - visible to all members of this organization."},{"name":"permission","required":false,"description":"**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` - team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` - team members can pull, push and administer newly-added repositories."},{"name":"parent_team_id","required":false,"description":"The ID of a team to set as the parent team. **Note**: You must pass the `hellcat-preview` media type to use this parameter."}]},{"id":"octokit-routes-teams-delete","name":"Delete team","description":"To delete a team, the authenticated user must be a team maintainer or an owner of the org associated with the team.\n\nIf you are an organization owner and you pass the `hellcat-preview` media type, deleting a parent team will delete all of its child teams as well.","example":"octokit.teams.delete({\n  team_id\n})","documentationUrl":"https://developer.github.com/v3/teams/#delete-team","params":[{"name":"team_id","required":true,"description":""}]},{"id":"octokit-routes-teams-list-child","name":"List child teams","description":"At this time, the `hellcat-preview` media type is required to use this endpoint.\n\n","example":"octokit.teams.listChild({\n  team_id\n})","documentationUrl":"https://developer.github.com/v3/teams/#list-child-teams","params":[{"name":"team_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-teams-list-repos","name":"List team repos","description":"**Note**: If you pass the `hellcat-preview` media type, the response will include any repositories inherited through a parent team.","example":"octokit.teams.listRepos({\n  team_id\n})","documentationUrl":"https://developer.github.com/v3/teams/#list-team-repos","params":[{"name":"team_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-teams-check-manages-repo","name":"Check if a team manages a repository","description":"**Note**: If you pass the `hellcat-preview` media type, repositories inherited through a parent team will be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:","example":"octokit.teams.checkManagesRepo({\n  team_id,\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/teams/#check-if-a-team-manages-a-repository","params":[{"name":"team_id","required":true,"description":""},{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-teams-add-or-update-repo","name":"Add or update team repository","description":"To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization.\n\nIf you pass the `hellcat-preview` media type, you can modify repository permissions of child teams.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"","example":"octokit.teams.addOrUpdateRepo({\n  team_id,\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/teams/#add-or-update-team-repository","params":[{"name":"team_id","required":true,"description":""},{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""},{"name":"permission","required":false,"description":"The permission to grant the team on this repository. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer this repository.  \n\\* `push` - team members can pull and push, but not administer this repository.  \n\\* `admin` - team members can pull, push and administer this repository.  \n  \nIf no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.  \n**Note**: If you pass the `hellcat-preview` media type, you can promote—but not demote—a `permission` attribute inherited through a parent team."}]},{"id":"octokit-routes-teams-remove-repo","name":"Remove team repository","description":"If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team.","example":"octokit.teams.removeRepo({\n  team_id,\n  owner,\n  repo\n})","documentationUrl":"https://developer.github.com/v3/teams/#remove-team-repository","params":[{"name":"team_id","required":true,"description":""},{"name":"owner","required":true,"description":""},{"name":"repo","required":true,"description":""}]},{"id":"octokit-routes-teams-list-for-authenticated-user","name":"List user teams","description":"List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://developer.github.com/apps/building-oauth-apps/).","example":"octokit.teams.listForAuthenticatedUser()","documentationUrl":"https://developer.github.com/v3/teams/#list-user-teams","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-teams-list-projects","name":"List team projects","description":"Lists the organization projects for a team. If you pass the `hellcat-preview` media type, the response will include projects inherited from a parent team.","example":"octokit.teams.listProjects({\n  team_id\n})","documentationUrl":"https://developer.github.com/v3/teams/#list-team-projects","params":[{"name":"team_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-teams-review-project","name":"Review a team project","description":"Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. If you pass the `hellcat-preview` media type, the response will include projects inherited from a parent team.","example":"octokit.teams.reviewProject({\n  team_id,\n  project_id\n})","documentationUrl":"https://developer.github.com/v3/teams/#review-a-team-project","params":[{"name":"team_id","required":true,"description":""},{"name":"project_id","required":true,"description":""}]},{"id":"octokit-routes-teams-add-or-update-project","name":"Add or update team project","description":"Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.","example":"octokit.teams.addOrUpdateProject({\n  team_id,\n  project_id\n})","documentationUrl":"https://developer.github.com/v3/teams/#add-or-update-team-project","params":[{"name":"team_id","required":true,"description":""},{"name":"project_id","required":true,"description":""},{"name":"permission","required":false,"description":"The permission to grant to the team for this project. Can be one of:  \n\\* `read` - team members can read, but not write to or administer this project.  \n\\* `write` - team members can read and write, but not administer this project.  \n\\* `admin` - team members can read, write and administer this project.  \nDefault: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"  \n**Note**: If you pass the `hellcat-preview` media type, you can promote—but not demote—a `permission` attribute inherited from a parent team."}]},{"id":"octokit-routes-teams-remove-project","name":"Remove team project","description":"Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. **Note:** This endpoint removes the project from the team, but does not delete it.","example":"octokit.teams.removeProject({\n  team_id,\n  project_id\n})","documentationUrl":"https://developer.github.com/v3/teams/#remove-team-project","params":[{"name":"team_id","required":true,"description":""},{"name":"project_id","required":true,"description":""}]},{"id":"octokit-routes-teams-list-discussion-comments","name":"List comments","description":"List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.teams.listDiscussionComments({\n  team_id,\n  discussion_number\n})","documentationUrl":"https://developer.github.com/v3/teams/discussion_comments/#list-comments","params":[{"name":"team_id","required":true,"description":""},{"name":"discussion_number","required":true,"description":""},{"name":"direction","required":false,"description":"Sorts the discussion comments by the date they were created. To return the oldest comments first, set to `asc`. Can be one of `asc` or `desc`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-teams-get-discussion-comment","name":"Get a single comment","description":"Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.teams.getDiscussionComment({\n  team_id,\n  discussion_number,\n  comment_number\n})","documentationUrl":"https://developer.github.com/v3/teams/discussion_comments/#get-a-single-comment","params":[{"name":"team_id","required":true,"description":""},{"name":"discussion_number","required":true,"description":""},{"name":"comment_number","required":true,"description":""}]},{"id":"octokit-routes-teams-create-discussion-comment","name":"Create a comment","description":"Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.","example":"octokit.teams.createDiscussionComment({\n  team_id,\n  discussion_number,\n  body\n})","documentationUrl":"https://developer.github.com/v3/teams/discussion_comments/#create-a-comment","params":[{"name":"team_id","required":true,"description":""},{"name":"discussion_number","required":true,"description":""},{"name":"body","required":true,"description":"The discussion comment's body text."}]},{"id":"octokit-routes-teams-update-discussion-comment","name":"Edit a comment","description":"Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.teams.updateDiscussionComment({\n  team_id,\n  discussion_number,\n  comment_number,\n  body\n})","documentationUrl":"https://developer.github.com/v3/teams/discussion_comments/#edit-a-comment","params":[{"name":"team_id","required":true,"description":""},{"name":"discussion_number","required":true,"description":""},{"name":"comment_number","required":true,"description":""},{"name":"body","required":true,"description":"The discussion comment's body text."}]},{"id":"octokit-routes-teams-delete-discussion-comment","name":"Delete a comment","description":"Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.teams.deleteDiscussionComment({\n  team_id,\n  discussion_number,\n  comment_number\n})","documentationUrl":"https://developer.github.com/v3/teams/discussion_comments/#delete-a-comment","params":[{"name":"team_id","required":true,"description":""},{"name":"discussion_number","required":true,"description":""},{"name":"comment_number","required":true,"description":""}]},{"id":"octokit-routes-teams-list-discussions","name":"List discussions","description":"List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.teams.listDiscussions({\n  team_id\n})","documentationUrl":"https://developer.github.com/v3/teams/discussions/#list-discussions","params":[{"name":"team_id","required":true,"description":""},{"name":"direction","required":false,"description":"Sorts the discussion comments by the date they were created. To return the oldest comments first, set to `asc`. Can be one of `asc` or `desc`."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-teams-get-discussion","name":"Get a single discussion","description":"Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.teams.getDiscussion({\n  team_id,\n  discussion_number\n})","documentationUrl":"https://developer.github.com/v3/teams/discussions/#get-a-single-discussion","params":[{"name":"team_id","required":true,"description":""},{"name":"discussion_number","required":true,"description":""}]},{"id":"octokit-routes-teams-create-discussion","name":"Create a discussion","description":"Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.","example":"octokit.teams.createDiscussion({\n  team_id,\n  title,\n  body\n})","documentationUrl":"https://developer.github.com/v3/teams/discussions/#create-a-discussion","params":[{"name":"team_id","required":true,"description":""},{"name":"title","required":true,"description":"The discussion post's title."},{"name":"body","required":true,"description":"The discussion post's body text."},{"name":"private","required":false,"description":"Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post."}]},{"id":"octokit-routes-teams-update-discussion","name":"Edit a discussion","description":"Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.teams.updateDiscussion({\n  team_id,\n  discussion_number\n})","documentationUrl":"https://developer.github.com/v3/teams/discussions/#edit-a-discussion","params":[{"name":"team_id","required":true,"description":""},{"name":"discussion_number","required":true,"description":""},{"name":"title","required":false,"description":"The discussion post's title."},{"name":"body","required":false,"description":"The discussion post's body text."}]},{"id":"octokit-routes-teams-delete-discussion","name":"Delete a discussion","description":"Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.teams.deleteDiscussion({\n  team_id,\n  discussion_number\n})","documentationUrl":"https://developer.github.com/v3/teams/discussions/#delete-a-discussion","params":[{"name":"team_id","required":true,"description":""},{"name":"discussion_number","required":true,"description":""}]},{"id":"octokit-routes-teams-list-members","name":"List team members","description":"If you pass the `hellcat-preview` media type, team members will include the members of child teams.","example":"octokit.teams.listMembers({\n  team_id\n})","documentationUrl":"https://developer.github.com/v3/teams/members/#list-team-members","params":[{"name":"team_id","required":true,"description":""},{"name":"role","required":false,"description":"Filters members returned by their role in the team. Can be one of:  \n\\* `member` - normal members of the team.  \n\\* `maintainer` - team maintainers.  \n\\* `all` - all members of the team."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-teams-get-member","name":"Get team member","description":"The \"Get team member\" API (described below) is deprecated.\n\nWe recommend using the [Get team membership API](https://developer.github.com/v3/teams/members/#get-team-membership) instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user.","example":"octokit.teams.getMember({\n  team_id,\n  username\n})","documentationUrl":"https://developer.github.com/v3/teams/members/#get-team-member","params":[{"name":"team_id","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-teams-add-member","name":"Add team member","description":"The \"Add team member\" API (described below) is deprecated.\n\nWe recommend using the [Add team membership API](https://developer.github.com/v3/teams/members/#add-or-update-team-membership) instead. It allows you to invite new organization members to your teams.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/articles/github-s-products) in the GitHub Help documentation.\n\nTo add someone to a team, the authenticated user must be a team maintainer in the team they're changing or be an owner of the organization that the team is associated with. The person being added to the team must be a member of the team's organization.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"","example":"octokit.teams.addMember({\n  team_id,\n  username\n})","documentationUrl":"https://developer.github.com/v3/teams/members/#add-team-member","params":[{"name":"team_id","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-teams-remove-member","name":"Remove team member","description":"The \"Remove team member\" API (described below) is deprecated.\n\nWe recommend using the [Remove team membership endpoint](https://developer.github.com/v3/teams/members/#remove-team-membership) instead. It allows you to remove both active and pending memberships.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/articles/github-s-products) in the GitHub Help documentation.\n\nTo remove a team member, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. Removing a team member does not delete the user, it just removes them from the team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"","example":"octokit.teams.removeMember({\n  team_id,\n  username\n})","documentationUrl":"https://developer.github.com/v3/teams/members/#remove-team-member","params":[{"name":"team_id","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-teams-get-membership","name":"Get team membership","description":"If you pass the `hellcat-preview` media type, team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** The `role` for organization owners returns as `maintainer`. For more information about `maintainer` roles, see [Create team](https://developer.github.com/v3/teams#create-team).","example":"octokit.teams.getMembership({\n  team_id,\n  username\n})","documentationUrl":"https://developer.github.com/v3/teams/members/#get-team-membership","params":[{"name":"team_id","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-teams-add-or-update-membership","name":"Add or update team membership","description":"Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/articles/github-s-products) in the GitHub Help documentation.\n\nIf the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a maintainer of the team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\nIf the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a maintainer of the team.","example":"octokit.teams.addOrUpdateMembership({\n  team_id,\n  username\n})","documentationUrl":"https://developer.github.com/v3/teams/members/#add-or-update-team-membership","params":[{"name":"team_id","required":true,"description":""},{"name":"username","required":true,"description":""},{"name":"role","required":false,"description":"The role that this user should have in the team. Can be one of:  \n\\* `member` - a normal member of the team.  \n\\* `maintainer` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description."}]},{"id":"octokit-routes-teams-remove-membership","name":"Remove team membership","description":"Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/articles/github-s-products) in the GitHub Help documentation.\n\nTo remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"","example":"octokit.teams.removeMembership({\n  team_id,\n  username\n})","documentationUrl":"https://developer.github.com/v3/teams/members/#remove-team-membership","params":[{"name":"team_id","required":true,"description":""},{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-teams-list-pending-invitations","name":"List pending team invitations","description":"The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.","example":"octokit.teams.listPendingInvitations({\n  team_id\n})","documentationUrl":"https://developer.github.com/v3/teams/members/#list-pending-team-invitations","params":[{"name":"team_id","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-teams-list-id-p-groups-for-org","name":"List IdP groups in an organization","description":"Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/articles/github-s-products) in the GitHub Help documentation.\n\nList IdP groups available in an organization.","example":"octokit.teams.listIdPGroupsForOrg({\n  org\n})","documentationUrl":"https://developer.github.com/v3/teams/team_sync/#list-idp-groups-in-an-organization","params":[{"name":"org","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-teams-list-id-p-groups","name":"List IdP groups for a team","description":"Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/articles/github-s-products) in the GitHub Help documentation.\n\nList IdP groups connected to a team on GitHub.","example":"octokit.teams.listIdPGroups({\n  team_id\n})","documentationUrl":"https://developer.github.com/v3/teams/team_sync/#list-idp-groups-for-a-team","params":[{"name":"team_id","required":true,"description":""}]},{"id":"octokit-routes-teams-create-or-update-id-p-group-connections","name":"Create or update IdP group connections","description":"Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/articles/github-s-products) in the GitHub Help documentation.\n\nCreates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.","example":"octokit.teams.createOrUpdateIdPGroupConnections({\n  team_id,\n  groups\n})","documentationUrl":"https://developer.github.com/v3/teams/team_sync/#create-or-update-idp-group-connections","params":[{"name":"team_id","required":true,"description":""},{"name":"groups","required":true,"description":"The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove."},{"name":"groups[].group_id","required":true,"description":"ID of the IdP group."},{"name":"groups[].group_name","required":true,"description":"Name of the IdP group."},{"name":"groups[].group_description","required":true,"description":"Description of the IdP group."}]}]}},{"node":{"id":"octokit-routes-users","name":"users","methods":[{"id":"octokit-routes-users-get-by-username","name":"Get a single user","description":"Provides publicly available information about someone with a GitHub account.\n\nGitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub plan. The GitHub App must be authenticated as a user. See \"[Identifying and authorizing users for GitHub Apps](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)\" for details about authentication. For an example response, see \"[Response with GitHub plan information](https://developer.github.com/v3/users/#response-with-github-plan-information).\"\n\nThe `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://developer.github.com/v3/#authentication).\n\nThe Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://developer.github.com/v3/users/emails/)\".","example":"octokit.users.getByUsername({\n  username\n})","documentationUrl":"https://developer.github.com/v3/users/#get-a-single-user","params":[{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-users-get-authenticated","name":"Get the authenticated user","description":"Lists public and private profile information when authenticated through basic auth or OAuth with the `user` scope.\n\nLists public profile information when authenticated through OAuth without the `user` scope.","example":"octokit.users.getAuthenticated()","documentationUrl":"https://developer.github.com/v3/users/#get-the-authenticated-user","params":[]},{"id":"octokit-routes-users-update-authenticated","name":"Update the authenticated user","description":"**Note:** If your email is set to private and you send an `email` parameter as part of this request to update your profile, your privacy settings are still enforced: the email address will not be displayed on your public profile or via the API.","example":"octokit.users.updateAuthenticated()","documentationUrl":"https://developer.github.com/v3/users/#update-the-authenticated-user","params":[{"name":"name","required":false,"description":"The new name of the user."},{"name":"email","required":false,"description":"The publicly visible email address of the user."},{"name":"blog","required":false,"description":"The new blog URL of the user."},{"name":"company","required":false,"description":"The new company of the user."},{"name":"location","required":false,"description":"The new location of the user."},{"name":"hireable","required":false,"description":"The new hiring availability of the user."},{"name":"bio","required":false,"description":"The new short biography of the user."}]},{"id":"octokit-routes-users-get-context-for-user","name":"Get contextual information about a user","description":"Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.\n\nThe `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:","example":"octokit.users.getContextForUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/users/#get-contextual-information-about-a-user","params":[{"name":"username","required":true,"description":""},{"name":"subject_type","required":false,"description":"Identifies which additional information you'd like to receive about the person's hovercard. Can be `organization`, `repository`, `issue`, `pull_request`. **Required** when using `subject_id`."},{"name":"subject_id","required":false,"description":"Uses the ID for the `subject_type` you specified. **Required** when using `subject_type`."}]},{"id":"octokit-routes-users-list","name":"Get all users","description":"Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of users.","example":"octokit.users.list()","documentationUrl":"https://developer.github.com/v3/users/#get-all-users","params":[{"name":"since","required":false,"description":"The integer ID of the last User that you've seen."},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-users-list-blocked","name":"List blocked users","description":"List the users you've blocked on your personal account.","example":"octokit.users.listBlocked()","documentationUrl":"https://developer.github.com/v3/users/blocking/#list-blocked-users","params":[]},{"id":"octokit-routes-users-check-blocked","name":"Check whether you've blocked a user","description":"If the user is blocked:\n\nIf the user is not blocked:","example":"octokit.users.checkBlocked({\n  username\n})","documentationUrl":"https://developer.github.com/v3/users/blocking/#check-whether-youve-blocked-a-user","params":[{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-users-block","name":"Block a user","description":"","example":"octokit.users.block({\n  username\n})","documentationUrl":"https://developer.github.com/v3/users/blocking/#block-a-user","params":[{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-users-unblock","name":"Unblock a user","description":"","example":"octokit.users.unblock({\n  username\n})","documentationUrl":"https://developer.github.com/v3/users/blocking/#unblock-a-user","params":[{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-users-list-emails","name":"List email addresses for a user","description":"Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with the `user:email` scope.","example":"octokit.users.listEmails()","documentationUrl":"https://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-users-list-public-emails","name":"List public email addresses for a user","description":"Lists your publicly visible email address, which you can set with the [Toggle primary email visibility](https://developer.github.com/v3/users/emails/#toggle-primary-email-visibility) endpoint. This endpoint is accessible with the `user:email` scope.","example":"octokit.users.listPublicEmails()","documentationUrl":"https://developer.github.com/v3/users/emails/#list-public-email-addresses-for-a-user","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-users-add-emails","name":"Add email address(es)","description":"This endpoint is accessible with the `user` scope.","example":"octokit.users.addEmails({\n  emails\n})","documentationUrl":"https://developer.github.com/v3/users/emails/#add-email-addresses","params":[{"name":"emails","required":true,"description":"Adds one or more email addresses to your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an `array` of emails addresses directly, but we recommend that you pass an object using the `emails` key."}]},{"id":"octokit-routes-users-delete-emails","name":"Delete email address(es)","description":"This endpoint is accessible with the `user` scope.","example":"octokit.users.deleteEmails({\n  emails\n})","documentationUrl":"https://developer.github.com/v3/users/emails/#delete-email-addresses","params":[{"name":"emails","required":true,"description":"Deletes one or more email addresses from your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an `array` of emails addresses directly, but we recommend that you pass an object using the `emails` key."}]},{"id":"octokit-routes-users-toggle-primary-email-visibility","name":"Toggle primary email visibility","description":"Sets the visibility for your primary email addresses.","example":"octokit.users.togglePrimaryEmailVisibility({\n  email,\n  visibility\n})","documentationUrl":"https://developer.github.com/v3/users/emails/#toggle-primary-email-visibility","params":[{"name":"email","required":true,"description":"Specify the _primary_ email address that needs a visibility change."},{"name":"visibility","required":true,"description":"Use `public` to enable an authenticated user to view the specified email address, or use `private` so this primary email address cannot be seen publicly."}]},{"id":"octokit-routes-users-list-followers-for-user","name":"List a user's followers","description":"","example":"octokit.users.listFollowersForUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/users/followers/#list-followers-of-a-user","params":[{"name":"username","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-users-list-followers-for-authenticated-user","name":"List the authenticated user's followers","description":"","example":"octokit.users.listFollowersForAuthenticatedUser()","documentationUrl":"https://developer.github.com/v3/users/followers/#list-followers-of-a-user","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-users-list-following-for-user","name":"List who a user is following","description":"","example":"octokit.users.listFollowingForUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/users/followers/#list-users-followed-by-another-user","params":[{"name":"username","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-users-list-following-for-authenticated-user","name":"List who the authenticated user is following","description":"","example":"octokit.users.listFollowingForAuthenticatedUser()","documentationUrl":"https://developer.github.com/v3/users/followers/#list-users-followed-by-another-user","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-users-check-following","name":"Check if you are following a user","description":"","example":"octokit.users.checkFollowing({\n  username\n})","documentationUrl":"https://developer.github.com/v3/users/followers/#check-if-you-are-following-a-user","params":[{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-users-check-following-for-user","name":"Check if one user follows another","description":"","example":"octokit.users.checkFollowingForUser({\n  username,\n  target_user\n})","documentationUrl":"https://developer.github.com/v3/users/followers/#check-if-one-user-follows-another","params":[{"name":"username","required":true,"description":""},{"name":"target_user","required":true,"description":""}]},{"id":"octokit-routes-users-follow","name":"Follow a user","description":"Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"\n\nFollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.","example":"octokit.users.follow({\n  username\n})","documentationUrl":"https://developer.github.com/v3/users/followers/#follow-a-user","params":[{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-users-unfollow","name":"Unfollow a user","description":"Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.","example":"octokit.users.unfollow({\n  username\n})","documentationUrl":"https://developer.github.com/v3/users/followers/#unfollow-a-user","params":[{"name":"username","required":true,"description":""}]},{"id":"octokit-routes-users-list-gpg-keys-for-user","name":"List GPG keys for a user","description":"Lists the GPG keys for a user. This information is accessible by anyone.","example":"octokit.users.listGpgKeysForUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/users/gpg_keys/#list-gpg-keys-for-a-user","params":[{"name":"username","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-users-list-gpg-keys","name":"List your GPG keys","description":"Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.users.listGpgKeys()","documentationUrl":"https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-users-get-gpg-key","name":"Get a single GPG key","description":"View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.users.getGpgKey({\n  gpg_key_id\n})","documentationUrl":"https://developer.github.com/v3/users/gpg_keys/#get-a-single-gpg-key","params":[{"name":"gpg_key_id","required":true,"description":""}]},{"id":"octokit-routes-users-create-gpg-key","name":"Create a GPG key","description":"Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.users.createGpgKey()","documentationUrl":"https://developer.github.com/v3/users/gpg_keys/#create-a-gpg-key","params":[{"name":"armored_public_key","required":false,"description":"Your GPG key, generated in ASCII-armored format. See \"[Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/)\" for help creating a GPG key."}]},{"id":"octokit-routes-users-delete-gpg-key","name":"Delete a GPG key","description":"Removes a GPG key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.users.deleteGpgKey({\n  gpg_key_id\n})","documentationUrl":"https://developer.github.com/v3/users/gpg_keys/#delete-a-gpg-key","params":[{"name":"gpg_key_id","required":true,"description":""}]},{"id":"octokit-routes-users-list-public-keys-for-user","name":"List public keys for a user","description":"Lists the _verified_ public SSH keys for a user. This is accessible by anyone.","example":"octokit.users.listPublicKeysForUser({\n  username\n})","documentationUrl":"https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user","params":[{"name":"username","required":true,"description":""},{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-users-list-public-keys","name":"List your public keys","description":"Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.users.listPublicKeys()","documentationUrl":"https://developer.github.com/v3/users/keys/#list-your-public-keys","params":[{"name":"per_page","required":false,"description":"Results per page (max 100)"},{"name":"page","required":false,"description":"Page number of the results to fetch."}]},{"id":"octokit-routes-users-get-public-key","name":"Get a single public key","description":"View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.users.getPublicKey({\n  key_id\n})","documentationUrl":"https://developer.github.com/v3/users/keys/#get-a-single-public-key","params":[{"name":"key_id","required":true,"description":""}]},{"id":"octokit-routes-users-create-public-key","name":"Create a public key","description":"Adds a public SSH key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.users.createPublicKey()","documentationUrl":"https://developer.github.com/v3/users/keys/#create-a-public-key","params":[{"name":"title","required":false,"description":"A descriptive name for the new key. Use a name that will help you recognize this key in your GitHub account. For example, if you're using a personal Mac, you might call this key \"Personal MacBook Air\"."},{"name":"key","required":false,"description":"The public SSH key to add to your GitHub account. See \"[Generating a new SSH key](https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/)\" for guidance on how to create a public SSH key."}]},{"id":"octokit-routes-users-delete-public-key","name":"Delete a public key","description":"Removes a public SSH key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).","example":"octokit.users.deletePublicKey({\n  key_id\n})","documentationUrl":"https://developer.github.com/v3/users/keys/#delete-a-public-key","params":[{"name":"key_id","required":true,"description":""}]}]}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}